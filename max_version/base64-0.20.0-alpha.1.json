{"root":"0:0:1640","crate_version":"0.20.0-alpha.1","includes_private":true,"index":{"0:201:1627":{"id":"0:201:1627","crate_id":0,"name":"engine","span":{"filename":"src/write/encoder.rs","begin":[66,4],"end":[66,17]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:601:1915":{"id":"0:601:1915","crate_id":0,"name":"InvalidByte","span":{"filename":"src/decode.rs","begin":[16,4],"end":[16,26]},"visibility":"default","docs":"An invalid byte was found in the input. The offset and offending byte are provided.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"u8"}]}},"0:436:2362":{"id":"0:436:2362","crate_id":0,"name":"CRYPT","span":{"filename":"src/alphabet.rs","begin":[152,0],"end":[154,2]},"visibility":"public","docs":"The `crypt(3)` alphabet (uses `.` and `/` as the first two values).\n\nNot standardized, but folk wisdom on the net asserts that this alphabet is what crypt uses.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:4002-0:42:1775":{"id":"b:2:4002-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3389:4205":{"id":"2:3389:4205","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:338:2254":{"id":"0:338:2254","crate_id":0,"name":"DECODED_CHUNK_LEN","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[7,0],"end":[7,35]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"6","value":"6usize","is_literal":true}},"b:2:3213-0:197:1948":{"id":"b:2:3213-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6104:60677":{"id":"5:6104:60677","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8368:216","`Box<str>`":"5:432:2743"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2743","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2890","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9340:3103":{"id":"2:9340:3103","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:138:1891":{"id":"0:138:1891","crate_id":0,"name":"decoded_offset","span":{"filename":"src/read/decoder.rs","begin":[52,4],"end":[52,25]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:13506:2330":{"id":"2:13506:2330","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12605:1778"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:132:1887":{"id":"0:132:1887","crate_id":0,"name":"b64_buffer","span":{"filename":"src/read/decoder.rs","begin":[40,4],"end":[40,30]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1024"}}},"0:203:1991":{"id":"0:203:1991","crate_id":0,"name":"extra_input","span":{"filename":"src/write/encoder.rs","begin":[73,4],"end":[73,44]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"Holds a partial chunk, if any, after the last `write()`, so that we may then fill the chunk\nwith the next `write()`, encode it, then proceed with the rest of the input normally.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}},"b:2:3213-0:556:1788":{"id":"b:2:3213-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13559:60021":{"id":"2:13559:60021","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:16004:2621","str::split_terminator":"1:16010:2626","str::split":"1:16010:2626","self::pattern":"2:13134:2753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49626:3351","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:3104-0:556:1788":{"id":"a:2:9339:3104-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:3162-0:73:1848":{"id":"a:2:3310:3162-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:576":{"id":"0:576","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[21,27],"end":[21,36]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:577:604","0:578:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13577:60024":{"id":"2:13577:60024","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13134:2753","str::matches":"1:16010:2626","prim@char":"1:16004:2621","`DoubleEndedIterator`":"2:8523:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49780:3356","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:197:1948":{"id":"0:197:1948","crate_id":0,"name":"EncoderWriter","span":{"filename":"src/write/encoder.rs","begin":[65,0],"end":[83,1]},"visibility":"public","docs":"A `Write` implementation that base64 encodes data before delegating to the wrapped writer.\n\nBecause base64 has special handling for the end of the input data (padding, etc), there's a\n`finish()` method on this type that encodes any leftover input bytes and adds padding if\nappropriate. It's called automatically when deallocated (see the `Drop` implementation), but\nany error that occurs when invoking the underlying writer will be suppressed. If you want to\nhandle such errors, call `finish()` yourself.\n\n# Examples\n\n```\nuse std::io::Write;\n\n// use a vec as the simplest possible `Write` -- in real code this is probably a file, etc.\nlet mut enc = base64::write::EncoderWriter::from(\n    Vec::new(),\n    &base64::engine::DEFAULT_ENGINE);\n\n// handle errors as you normally would\nenc.write_all(b\"asdf\").unwrap();\n\n// could leave this out to be called by Drop, if you don't care\n// about handling errors or getting the delegate writer back\nlet delegate = enc.finish().unwrap();\n\n// base64 was written to the writer\nassert_eq!(b\"YXNkZg==\", &delegate[..]);\n\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Errors\n\nBase64 encoding itself does not generate errors, but errors from the wrapped writer will be\nreturned as per the contract of `Write`.\n\n# Performance\n\nIt has some minor performance loss compared to encoding slices (a couple percent).\nIt does not do any heap allocation.\n\n# Limitations\n\nOwing to the specification of the `write` and `flush` methods on the `Write` trait and their\nimplications for a buffering implementation, these methods may not behave as expected. In\nparticular, calling `write_all` on this interface may fail with `io::ErrorKind::WriteZero`.\nSee the documentation of the `Write` trait implementation for further details.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:201:1627","0:202:1988","0:203:1991","0:205:1993","0:206:1996","0:208:1998","0:209:2000"],"impls":["0:215","a:2:3310:3162-0:197:1948","a:2:3269:211-0:197:1948","a:2:9340:3103-0:197:1948","a:2:9339:3104-0:197:1948","a:2:3281:220-0:197:1948","b:2:3198-0:197:1948","b:2:2872-0:197:1948","b:2:2869-0:197:1948","b:2:4002-0:197:1948","b:2:3202-0:197:1948","b:2:3213-0:197:1948","b:2:3208-0:197:1948","0:210","0:228","0:237"]}},"0:196:1954":{"id":"0:196:1954","crate_id":0,"name":"MIN_ENCODE_CHUNK_SIZE","span":{"filename":"src/write/encoder.rs","begin":[12,0],"end":[12,39]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"3","value":"3usize","is_literal":true}},"0:542":{"id":"0:542","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[118,32],"end":[118,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine","name":"decode_engine","id":"0:524:1633","glob":false}},"a:2:3281:220-0:89:1851":{"id":"a:2:3281:220-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13592:60030":{"id":"2:13592:60030","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:48":{"id":"0:48","crate_id":0,"name":null,"span":{"filename":"src/chunked_encoder.rs","begin":[97,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sink","id":"0:24:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:50:127","0:51:1743"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:6413-0:73:1848":{"id":"b:5:6413-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:600:1636":{"id":"b:2:2869-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:519":{"id":"0:519","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[45,0],"end":[57,1]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:520:2533","0:521:2537"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:9343:3677":{"id":"1:9343:3677","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9344:57903","1:9345:57904","1:9346:57905","1:9347:57906","1:9348:57907","1:9349:39492","1:9350:57902"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:600:1636":{"id":"a:2:3269:211-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:3103-0:255:1949":{"id":"a:2:9340:3103-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:285:2092":{"id":"0:285:2092","crate_id":0,"name":"str_consumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[121,4],"end":[121,19]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"S"}},"0:405:1754":{"id":"0:405:1754","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/mod.rs","begin":[83,4],"end":[83,37]},"visibility":"default","docs":"Returns `true` if padding should be added after the encoded output.\n\nPadding is added outside the engine's encode() since the engine may be used\nto encode only a chunk of the overall output, so it can't always know when\nthe output is \"done\" and would therefore need padding (if configured).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13497":{"id":"2:13497","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12594:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13498:793","2:13499:2059","2:13500:60014","2:13501:60015","2:13503:60016","2:13506:2330","2:13507:60017","2:13508:304","2:13509:54708","2:13510:54704","2:13512:54705","2:13514:54706","2:13516:54707","2:13518:3796","2:13519:60018","2:13520:54728","2:13521:54729","2:13522:3373","2:13523:4192","2:13524:1756","2:13525:32447","2:13526:32437","2:13527:4915","2:13528:60019","2:13529:32432","2:13530:54744","2:13533:54400","2:13536:54402","2:13539:3295","2:13543:3259","2:13547:53774","2:13550:32304","2:13553:54738","2:13556:60020","2:13559:60021","2:13562:54740","2:13565:54742","2:13568:60022","2:13571:60023","2:13574:2702","2:13577:60024","2:13580:60025","2:13583:60026","2:13586:60027","2:13588:60028","2:13590:60029","2:13592:60030","2:13593:60031","2:13594:60032","2:13597:60033","2:13600:15018","2:13603:54745","2:13606:60034","2:13609:60035","2:13612:60036","2:13615:4389","2:13617:4615","2:13618:54291","2:13619:54288","2:13620:54287","2:13621:60037","2:13623:3687","2:13624:60038"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23550:16522":{"id":"2:23550:16522","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23551:58832","2:23552:58831","2:23553:58833"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23545:4283","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3347:4090":{"id":"2:3347:4090","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:387":{"id":"0:387","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[242,0],"end":[285,1]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:388:920","0:389:2238","0:390:2246"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3208-0:283:2089":{"id":"b:2:3208-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:394:1754":{"id":"0:394:1754","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[295,4],"end":[297,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6107:54289":{"id":"5:6107:54289","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16010:2626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:126:1865":{"id":"b:2:3202-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13624:60038":{"id":"2:13624:60038","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16004:2621"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49875:3362","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:3103-0:89:1851":{"id":"a:2:9340:3103-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:26:1743":{"id":"0:26:1743","crate_id":0,"name":"write_encoded_bytes","span":{"filename":"src/chunked_encoder.rs","begin":[15,4],"end":[15,81]},"visibility":"default","docs":"Handle a chunk of encoded base64 data (as UTF-8 bytes)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["encoded",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:24:1741","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:6415:1397":{"id":"5:6415:1397","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11014:214":{"id":"2:11014:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11016:181","2:11017:54704","2:11018:54705","2:11019:54706","2:11020:54707","2:11021:753","2:11022:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11005:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:281":{"id":"0:281","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[111,0],"end":[115,1]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":"Pushes the str onto the end of the String","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:282:2100"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13498:793":{"id":"2:13498:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:126:1865":{"id":"b:2:3208-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:195:1953":{"id":"0:195:1953","crate_id":0,"name":"MAX_INPUT_LEN","span":{"filename":"src/write/encoder.rs","begin":[10,0],"end":[10,46]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"The most bytes whose encoding will fit in `BUF_SIZE`","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"_","value":"768usize","is_literal":false}},"0:266":{"id":"0:266","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[80,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:269:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:12581:4608":{"id":"2:12581:4608","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12582:3262","2:12583:59169"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13615:4389":{"id":"2:13615:4389","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:13073:2748","FromStr::Err":"2:13073:2748"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13073:2748","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:2748","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:47:681":{"id":"0:47:681","crate_id":0,"name":"from","span":{"filename":"src/chunked_encoder.rs","begin":[91,4],"end":[93,5]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3648:2740":{"id":"2:3648:2740","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:58733","2:3651:58734","2:3652:54744"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:564:2161":{"id":"a:2:3269:211-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3406:3752":{"id":"2:3406:3752","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13528:60019":{"id":"2:13528:60019","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49822:3349","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3577:2738":{"id":"2:3577:2738","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13520:54728":{"id":"2:13520:54728","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16010:2626"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:539":{"id":"0:539","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[118,24],"end":[118,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode","name":"decode","id":"0:522:532","glob":false}},"0:125:1870":{"id":"0:125:1870","crate_id":0,"name":"DECODED_CHUNK_SIZE","span":{"filename":"src/read/decoder.rs","begin":[11,0],"end":[11,36]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"3","value":"3usize","is_literal":true}},"b:2:3208-0:197:1948":{"id":"b:2:3208-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13523:4192":{"id":"2:13523:4192","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49534:3347","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13159:3341":{"id":"2:13159:3341","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13161:3254","2:13162:59404","2:13163:59405"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13153:3342","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:435:2358":{"id":"0:435:2358","crate_id":0,"name":"URL_SAFE","span":{"filename":"src/alphabet.rs","begin":[145,0],"end":[147,2]},"visibility":"public","docs":"The URL safe alphabet (uses `-` and `_`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-4).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"a:2:3310:3162-0:579:2336":{"id":"a:2:3310:3162-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:363:2169":{"id":"0:363:2169","crate_id":0,"name":"encode_table","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[18,4],"end":[18,26]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"64"}}},"b:2:2869-0:28:1748":{"id":"b:2:2869-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:126:1865":{"id":"b:2:3198-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:577:604":{"id":"0:577:604","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[21,27],"end":[21,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10383:2767":{"id":"2:10383:2767","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10384:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9340:3103-0:197:1948":{"id":"a:2:9340:3103-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:791:3316":{"id":"5:791:3316","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:73:1848":{"id":"b:2:3198-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:433":{"id":"0:433","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[133,0],"end":[133,43]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","type_id","description","cause","provide"],"trait":{"name":"Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:480:1737":{"id":"0:480:1737","crate_id":0,"name":"add_padding","span":{"filename":"src/encode.rs","begin":[225,0],"end":[235,1]},"visibility":"public","docs":"Write padding characters.\n`input_len` is the size of the original, not encoded, input.\n`output` is the slice where padding should be written, of length at least 2.\n\nReturns the number of padding bytes written.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input_len",{"kind":"primitive","inner":"usize"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3202-0:564:2161":{"id":"b:2:3202-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13522:3373":{"id":"2:13522:3373","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49528:2745","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:3162-0:283:2089":{"id":"a:2:3310:3162-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:299:1627":{"id":"0:299:1627","crate_id":0,"name":"engine","span":{"filename":"src/engine/mod.rs","begin":[1,0],"end":[99,64]},"visibility":"public","docs":"Provides the [Engine] abstraction and out of the box implementations.","links":{"Engine":"0:397:1739"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:310:1786","0:397:1739","0:404:1738","0:406:2125","0:408:1854"],"is_stripped":false}},"2:3411:4210":{"id":"2:3411:4210","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:255:1949":{"id":"b:2:2869-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:28:1748":{"id":"a:2:3269:211-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13527:4915":{"id":"2:13527:4915","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49812:2828","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:283:2089":{"id":"b:2:3213-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:575":{"id":"0:575","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[21,27],"end":[21,36]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:582:2343":{"id":"0:582:2343","crate_id":0,"name":"DuplicatedByte","span":{"filename":"src/alphabet.rs","begin":[113,4],"end":[113,22]},"visibility":"default","docs":"All bytes must be unique","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u8"}]}},"a:2:9339:3104-0:283:2089":{"id":"a:2:9339:3104-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:145:660":{"id":"0:145:660","crate_id":0,"name":"fmt","span":{"filename":"src/read/decoder.rs","begin":[60,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:42:1775":{"id":"b:2:2872-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5785:3703":{"id":"1:5785:3703","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5786:54083"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:361:2163":{"id":"0:361:2163","crate_id":0,"name":"INVALID_VALUE","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[10,0],"end":[10,41]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"255","value":"255u8","is_literal":true}},"2:3440:4224":{"id":"2:3440:4224","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:522:532":{"id":"0:522:532","crate_id":0,"name":"decode","span":{"filename":"src/decode.rs","begin":[73,0],"end":[75,1]},"visibility":"public","docs":"Decode base64 using the [default engine](DEFAULT_ENGINE).\nReturns a `Result` containing a `Vec<u8>`.\n\n# Example\n\n```rust\nextern crate base64;\n\nfn main() {\n    let bytes = base64::decode(\"aGVsbG8gd29ybGQ=\").unwrap();\n    println!(\"{:?}\", bytes);\n}\n```","links":{"DEFAULT_ENGINE":"0:408:1854"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13847:138":{"id":"2:13847:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13848:181","2:13849:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9339:3104-0:255:1949":{"id":"a:2:9339:3104-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3581:2739":{"id":"2:3581:2739","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:2738","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13600:15018":{"id":"2:13600:15018","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:16004:2621","self::pattern":"2:13134:2753"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6459:3691":{"id":"1:6459:3691","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:56544","1:6461:8227","1:6462:56545","1:6463:56546","1:6464:56547","1:6465:56548"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:222:652":{"id":"0:222:652","crate_id":0,"name":"finish","span":{"filename":"src/write/encoder.rs","begin":[128,4],"end":[140,5]},"visibility":"public","docs":"Encode all remaining buffered data and write it, including any trailing incomplete input\ntriples and associated padding.\n\nOnce this succeeds, no further writes or calls to this method are allowed.\n\nThis may write to the delegate writer multiple times if the delegate writer does not accept\nall input provided to its `write` each invocation.\n\nIf you don't care about error handling, it is not necessary to call this function, as the\nequivalent finalization is done by the Drop impl.\n\nReturns the writer that this was constructed around.\n\n# Errors\n\nThe first error that is not of `ErrorKind::Interrupted` will be returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:787-0:600:1636":{"id":"b:5:787-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:3314","5:790:3315","5:791:3316"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:372:2125":{"id":"0:372:2125","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[39,4],"end":[39,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"FastPortableEstimate","id":"0:343:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13556:60020":{"id":"2:13556:60020","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13134:2753","`DoubleEndedIterator`":"2:8523:120","str::rsplit_terminator":"1:16010:2626","prim@char":"1:16004:2621","str::split":"1:16010:2626"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49608:3352","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:206:1996":{"id":"0:206:1996","crate_id":0,"name":"output","span":{"filename":"src/write/encoder.rs","begin":[78,4],"end":[78,26]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"Buffer to encode into. May hold leftover encoded bytes from a previous write call that the underlying writer\ndid not write last time.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"1024"}}},"2:10385:2768":{"id":"2:10385:2768","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10386:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[172,0],"end":[293,1]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["read_to_string","read_exact","read_vectored","take","by_ref","chain","read_buf","is_read_vectored","read_buf_exact","read_to_end","bytes"],"trait":{"name":"Read","id":"1:4666:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:163:1625"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:520:2533":{"id":"0:520:2533","crate_id":0,"name":"description","span":{"filename":"src/decode.rs","begin":[46,4],"end":[52,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:73:1848":{"id":"b:2:3202-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:600:1636":{"id":"b:2:3198-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:613":{"id":"0:613","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[13,16],"end":[13,21]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:614:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:597":{"id":"0:597","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[108,20],"end":[108,29]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:598:604","0:599:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:406:2125":{"id":"0:406:2125","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[91,0],"end":[95,1]},"visibility":"public","docs":"The decode estimate used by an engine implementation. Users do not need to interact with this;\nit is only for engine implementors.\n\nImplementors may store relevant data here when constructing this to avoid having to calculate\nthem again during actual decoding.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:407:2134"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:477:1632":{"id":"0:477:1632","crate_id":0,"name":"encoded_len","span":{"filename":"src/encode.rs","begin":[198,0],"end":[218,1]},"visibility":"public","docs":"Calculate the base64 encoded length for a given input length, optionally including any\nappropriate padding bytes.\n\nReturns `None` if the encoded length can't be represented in `usize`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["bytes_len",{"kind":"primitive","inner":"usize"}],["padding",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:23854:4262":{"id":"2:23854:4262","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23855:4282"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23850:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:337:2253":{"id":"0:337:2253","crate_id":0,"name":"INPUT_CHUNK_LEN","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[6,0],"end":[6,33]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"8","value":"8usize","is_literal":true}},"2:10610:142":{"id":"2:10610:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10611:715","2:10613:56042"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13590:60029":{"id":"2:13590:60029","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:73:1848":{"id":"a:2:3281:220-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:377:2134":{"id":"0:377:2134","crate_id":0,"name":"decoded_length_estimate","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[160,4],"end":[162,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input_len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"qualified_path","inner":{"name":"DecodeEstimate","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:397:1739","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22884:4278":{"id":"2:22884:4278","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22885:4282","2:22886:58577","2:22887:1227","2:22888:1228","2:22889:42888","2:22890:58647","2:22891:58648","2:22892:58649","2:22893:58650","2:22894:58651","2:22895:58578","2:22896:58579","2:22897:58580","2:22898:58581","2:22899:58582","2:22900:58583","2:22901:58584"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:36:681":{"id":"0:36:681","crate_id":0,"name":"from","span":{"filename":"src/chunked_encoder.rs","begin":[27,4],"end":[32,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:60673","5:6085:2517","5:6088:60674","5:6091:60675","5:6103:60676","5:6104:60677","5:6105:2849","5:6106:54290","5:6107:54289"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10391:2770":{"id":"2:10391:2770","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10392:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:564:2161":{"id":"a:2:3281:220-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:33":{"id":"0:33","crate_id":0,"name":null,"span":{"filename":"src/chunked_encoder.rs","begin":[26,0],"end":[60,1]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:36:681","0:37:598"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[37,0],"end":[182,1]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:1738","0:372:2125","0:373:598","0:377:2134","0:378:532","0:379:1753"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:50:127":{"id":"0:50:127","crate_id":0,"name":"Error","span":{"filename":"src/chunked_encoder.rs","begin":[98,4],"end":[98,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"tuple","inner":[]}}},"0:52:1624":{"id":"0:52:1624","crate_id":0,"name":"display","span":{"filename":"src/display.rs","begin":[1,0],"end":[89,1]},"visibility":"public","docs":"Enables base64'd output anywhere you might use a `Display` implementation, like a format string.\n\n```\nuse base64::display::Base64Display;\nuse base64::engine::DEFAULT_ENGINE;\n\nlet data = vec![0x0, 0x1, 0x2, 0x3];\nlet wrapper = Base64Display::from(&data, &DEFAULT_ENGINE);\n\nassert_eq!(\"base64: AAECAw==\", format!(\"base64: {}\", wrapper));\n```","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:73:1848","0:89:1851"],"is_stripped":false}},"2:13533:54400":{"id":"2:13533:54400","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13609:60035":{"id":"2:13609:60035","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16004:2621","self::pattern":"2:13134:2753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:568:408":{"id":"0:568:408","crate_id":0,"name":"clone","span":{"filename":"src/alphabet.rs","begin":[21,9],"end":[21,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:605:1917":{"id":"0:605:1917","crate_id":0,"name":"InvalidLength","span":{"filename":"src/decode.rs","begin":[22,4],"end":[22,17]},"visibility":"default","docs":"The length of the input is invalid.\nA typical cause of this is stray trailing whitespace or other separator bytes.\nIn the case where excess trailing bytes have produced an invalid length *and* the last byte\nis also an invalid base64 symbol (as would be the case for whitespace, etc), `InvalidByte`\nwill be emitted instead of `InvalidLength` to make the issue easier to debug.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"b:2:2869-0:126:1865":{"id":"b:2:2869-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:3104-0:197:1948":{"id":"a:2:9339:3104-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:255:1949":{"id":"b:2:3198-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:556:1788":{"id":"b:2:3202-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:362:1787":{"id":"a:2:3269:211-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9340:3103-0:362:1787":{"id":"a:2:9340:3103-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3274:2102":{"id":"2:3274:2102","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:269:681":{"id":"0:269:681","crate_id":0,"name":"from","span":{"filename":"src/write/encoder_string_writer.rs","begin":[82,4],"end":[84,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will encode into a new `String` with the provided config.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8442:4126":{"id":"2:8442:4126","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8444:3306"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:466:1629":{"id":"0:466:1629","crate_id":0,"name":"encode_engine","span":{"filename":"src/encode.rs","begin":[56,0],"end":[64,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the provided `Engine`.\nReturns a `String`.\n\n# Example\n\n```rust\nextern crate base64;\n\nconst URL_SAFE_ENGINE: base64::engine::fast_portable::FastPortable =\n    base64::engine::fast_portable::FastPortable::from(\n        &base64::alphabet::URL_SAFE,\n        base64::engine::fast_portable::NO_PAD);\n\nfn main() {\n    let b64 = base64::encode_engine(\n        b\"hello world~\",\n        &base64::engine::DEFAULT_ENGINE\n        );\n    println!(\"{}\", b64);\n\n    let b64_url = base64::encode_engine(\n        b\"hello internet~\",\n        &URL_SAFE_ENGINE\n        );\n    println!(\"{}\", b64_url);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:592:660":{"id":"0:592:660","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[108,9],"end":[108,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:3104-0:362:1787":{"id":"a:2:9339:3104-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:358":{"id":"0:358","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[8,0],"end":[8,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"decode::FastPortableEstimate","name":"FastPortableEstimate","id":"0:343:2162","glob":false}},"2:13516:54707":{"id":"2:13516:54707","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:367:1753":{"id":"0:367:1753","crate_id":0,"name":"config","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[20,4],"end":[20,30]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:323:532":{"id":"0:323:532","crate_id":0,"name":"decode","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[1,0],"end":[457,1]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:337:2253","0:338:2254","0:339:2255","0:340:2256","0:341:2257","0:342:2258","0:349:2213","0:351:2273","0:353:2260","0:354:2274","0:357:2302"],"is_stripped":false}},"0:427:2335":{"id":"0:427:2335","crate_id":0,"name":"from_str","span":{"filename":"src/alphabet.rs","begin":[49,4],"end":[95,5]},"visibility":"public","docs":"Create an `Alphabet` from a string of 64 unique printable ASCII bytes.\n\nThe `=` byte is not allowed as it is used for padding.\n\nThe `const`-ness of this function isn't useful as of rust 1.54.0 since `const` `unwrap()`,\netc, haven't shipped yet, but that's [on the roadmap](https://github.com/rust-lang/rust/issues/85194).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3812:4277":{"id":"2:3812:4277","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:392:59":{"id":"0:392:59","crate_id":0,"name":"default","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[289,4],"end":[291,5]},"visibility":"default","docs":"Delegates to [FastPortableConfig::new].","links":{"FastPortableConfig::new":"0:556:1788"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:614:660":{"id":"0:614:660","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[13,16],"end":[13,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:556:1788":{"id":"0:556:1788","crate_id":0,"name":"FastPortableConfig","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[237,0],"end":[240,1]},"visibility":"public","docs":"Contains configuration parameters for base64 encoding and decoding.\n\n```\n# use base64::engine::fast_portable::FastPortableConfig;\nlet config = FastPortableConfig::new()\n    .with_encode_padding(false);\n    // further customize using `.with_*` methods as needed\n```\n\nThe constants [PAD] and [NO_PAD] cover most use cases.\n\nTo specify the characters used, see [crate::alphabet::Alphabet].","links":{"crate::alphabet::Alphabet":"0:564:2161","PAD":"0:395:1789","NO_PAD":"0:396:2252"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:557:1754","0:558:2214"],"impls":["0:387","a:2:3310:3162-0:556:1788","a:2:3269:211-0:556:1788","a:2:9340:3103-0:556:1788","a:2:9339:3104-0:556:1788","a:2:3281:220-0:556:1788","b:2:3198-0:556:1788","b:2:2872-0:556:1788","b:2:2869-0:556:1788","b:2:4002-0:556:1788","b:2:3202-0:556:1788","b:2:3213-0:556:1788","b:2:3208-0:556:1788","b:5:787-0:556:1788","0:559","0:561","0:562","0:391","0:393"]}},"0:572":{"id":"0:572","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[21,23],"end":[21,25]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3310:3162-0:89:1851":{"id":"a:2:3310:3162-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'b","bounds":[{"outlives":"'a"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:126:1865":{"id":"b:2:3213-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:3103-0:283:2089":{"id":"a:2:9340:3103-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[72,0],"end":[170,1]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:4666:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:150:681","0:153:1899","0:154:1907","0:155:1911","0:158:1926"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:549":{"id":"0:549","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[119,24],"end":[119,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine_slice","name":"decode_engine_slice","id":"0:533:1635","glob":false}},"2:13583:60026":{"id":"2:13583:60026","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:16004:2621","self::pattern":"2:13134:2753","`DoubleEndedIterator`":"2:8523:120","str::match_indices":"1:16010:2626"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49726:3358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9340:3103-0:42:1775":{"id":"a:2:9340:3103-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:28:1748":{"id":"b:2:4002-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:28:1748":{"id":"b:2:3213-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:136:1890":{"id":"0:136:1890","crate_id":0,"name":"decoded_buffer","span":{"filename":"src/read/decoder.rs","begin":[50,4],"end":[50,27]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"3"}}},"2:8967:4202":{"id":"2:8967:4202","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8003:4203","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22957:4291":{"id":"2:22957:4291","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22958:4282","2:22959:1247","2:22960:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:283:2089":{"id":"a:2:3269:211-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:153:1899":{"id":"0:153:1899","crate_id":0,"name":"flush_decoded_buf","span":{"filename":"src/read/decoder.rs","begin":[91,4],"end":[109,5]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":"Write as much as possible of the decoded buffer into the target buffer.\nMust only be called when there is something to write and space to write into.\nReturns a Result with the number of (decoded) bytes copied.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:208:1998":{"id":"0:208:1998","crate_id":0,"name":"output_occupied_len","span":{"filename":"src/write/encoder.rs","begin":[80,4],"end":[80,30]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"How much of `output` is occupied with encoded data that couldn't be written last time","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:560:408":{"id":"0:560:408","crate_id":0,"name":"clone","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[236,9],"end":[236,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10387:2769":{"id":"2:10387:2769","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10388:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:32:1751":{"id":"0:32:1751","crate_id":0,"name":"max_input_chunk_len","span":{"filename":"src/chunked_encoder.rs","begin":[23,4],"end":[23,30]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:51:1743":{"id":"0:51:1743","crate_id":0,"name":"write_encoded_bytes","span":{"filename":"src/chunked_encoder.rs","begin":[100,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:24:1741","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:423:2318":{"id":"0:423:2318","crate_id":0,"name":"ALPHABET_SIZE","span":{"filename":"src/alphabet.rs","begin":[7,0],"end":[7,32]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"64","value":"64usize","is_literal":true}},"b:2:3213-0:255:1949":{"id":"b:2:3213-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:197:1948":{"id":"b:2:3202-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:472:1631":{"id":"0:472:1631","crate_id":0,"name":"encode_engine_slice","span":{"filename":"src/encode.rs","begin":[144,0],"end":[159,1]},"visibility":"public","docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer.\n\nThis is useful if you wish to avoid allocation entirely (e.g. encoding into a stack-resident\nor statically-allocated buffer).\n\n# Panics\n\nIf `output` is too small to hold the encoded version of `input`, a panic will result.\n\n# Example\n\n```rust\nextern crate base64;\n\nfn main() {\n    let s = b\"hello internet!\";\n    let mut buf = Vec::new();\n    // make sure we'll have a slice big enough for base64 + padding\n    buf.resize(s.len() * 4 / 3 + 4, 0);\n\n    let bytes_written = base64::encode_engine_slice(\n        s,\n        &mut buf,\n        &base64::engine::DEFAULT_ENGINE);\n\n    // shorten our vec down to just what was written\n    buf.resize(bytes_written, 0);\n\n    assert_eq!(s, base64::decode(&buf).unwrap().as_slice());\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13524:1756":{"id":"2:13524:1756","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49544:2825","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5647:3715":{"id":"1:5647:3715","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5648:56086","1:5649:3223"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13509:54708":{"id":"2:13509:54708","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16021:2635"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13621:60037":{"id":"2:13621:60037","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16004:2621"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49857:3360","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:3417:4204":{"id":"2:3417:4204","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:283:2089":{"id":"a:2:3281:220-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:134:1888":{"id":"0:134:1888","crate_id":0,"name":"b64_offset","span":{"filename":"src/read/decoder.rs","begin":[42,4],"end":[42,21]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"1:6861:3672":{"id":"1:6861:3672","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6862:56418"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:205:1993":{"id":"0:205:1993","crate_id":0,"name":"extra_input_occupied_len","span":{"filename":"src/write/encoder.rs","begin":[75,4],"end":[75,35]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"How much of `extra` is occupied, in `[0, MIN_ENCODE_CHUNK_SIZE]`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:13606:60034":{"id":"2:13606:60034","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16004:2621","self::pattern":"2:13134:2753"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:255:1949":{"id":"b:2:4002-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13580:60025":{"id":"2:13580:60025","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13134:2753","str::rmatch_indices":"1:16010:2626","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49708:3357","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:24:1741":{"id":"0:24:1741","crate_id":0,"name":"Sink","span":{"filename":"src/chunked_encoder.rs","begin":[11,0],"end":[16,1]},"visibility":"public","docs":"The output mechanism for ChunkedEncoder's encoded bytes.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:25:127","0:26:1743"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:48","0:93"]}},"0:407:2134":{"id":"0:407:2134","crate_id":0,"name":"decoded_length_estimate","span":{"filename":"src/engine/mod.rs","begin":[94,4],"end":[94,47]},"visibility":"default","docs":"Returns a conservative (err on the side of too big) estimate of the decoded length to use\nfor pre-allocating buffers, etc.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3310:3162-0:28:1748":{"id":"a:2:3310:3162-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:408:1854":{"id":"0:408:1854","crate_id":0,"name":"DEFAULT_ENGINE","span":{"filename":"src/engine/mod.rs","begin":[98,0],"end":[99,64]},"visibility":"public","docs":"A [FastPortable] engine using the [crate::alphabet::STANDARD] base64 alphabet and [crate::engine::fast_portable::PAD] config.","links":{"FastPortable":"0:362:1787","crate::engine::fast_portable::PAD":"0:395:1789","crate::alphabet::STANDARD":"0:434:1785"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:378:532":{"id":"0:378:532","crate_id":0,"name":"decode","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[164,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["estimate",{"kind":"qualified_path","inner":{"name":"DecodeEstimate","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:397:1739","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:27:1745":{"id":"0:27:1745","crate_id":0,"name":"BUF_SIZE","span":{"filename":"src/chunked_encoder.rs","begin":[18,0],"end":[18,29]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"1024","value":"1_024usize","is_literal":true}},"2:8479:151":{"id":"2:8479:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8480:3262","2:8481:2895","2:8482:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:42:1775":{"id":"b:2:2869-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2871:2691":{"id":"2:2871:2691","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:42:1775":{"id":"b:2:3213-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:42:1775":{"id":"b:2:3198-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:362:1787":{"id":"b:2:2872-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:3314","5:785:3315","5:786:3316"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13512:54705":{"id":"2:13512:54705","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:587:1542":{"id":"0:587:1542","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[115,20],"end":[115,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[60,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["0:264:2091","0:265:1926"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:398:1738":{"id":"0:398:1738","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[28,4],"end":[28,24]},"visibility":"default","docs":"The config type used by this engine","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Config","id":"0:404:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:598:604":{"id":"0:598:604","crate_id":0,"name":"eq","span":{"filename":"src/alphabet.rs","begin":[108,20],"end":[108,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13153:3342":{"id":"2:13153:3342","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13155:4185","2:13156:922","2:13157:59032","2:13158:59033"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13501:60015":{"id":"2:13501:60015","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44:1736":{"id":"0:44:1736","crate_id":0,"name":"string","span":{"filename":"src/chunked_encoder.rs","begin":[86,4],"end":[86,26]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3202-0:28:1748":{"id":"b:2:3202-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:289:2070":{"id":"0:289:2070","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder_string_writer.rs","begin":[135,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:283:2089":{"id":"b:2:2872-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8438:4127":{"id":"2:8438:4127","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8440:3305"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38888:2864","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:369:681":{"id":"0:369:681","crate_id":0,"name":"from","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[28,4],"end":[34,5]},"visibility":"public","docs":"Create a `FastPortable` engine from an [Alphabet].\n\nWhile not very expensive to initialize, ideally these should be cached\nif the engine will be used repeatedly.","links":{"Alphabet":"0:564:2161"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["config",{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3505:2829":{"id":"2:3505:2829","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3337:2733":{"id":"2:3337:2733","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:83:681":{"id":"0:83:681","crate_id":0,"name":"from","span":{"filename":"src/display.rs","begin":[26,4],"end":[31,5]},"visibility":"public","docs":"Create a `Base64Display` with the provided engine.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["bytes",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:7795:3849":{"id":"1:7795:3849","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7796:57937"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13619:54288":{"id":"2:13619:54288","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:400:598":{"id":"0:400:598","crate_id":0,"name":"encode","span":{"filename":"src/engine/mod.rs","begin":[41,4],"end":[41,63]},"visibility":"default","docs":"Encode the `input` bytes into the `output` buffer based on the mapping in `encode_table`.\n\n`output` will be long enough to hold the encoded data.\n\nReturns the number of bytes written.\n\nNo padding should be written; that is handled separately.\n\nMust not write any bytes into the output slice other than the encoded data.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:564:2161":{"id":"b:2:3208-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13547:53774":{"id":"2:13547:53774","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"prim@char":"1:16004:2621","str::split_whitespace":"1:16010:2626","str::rsplit":"1:16010:2626","`DoubleEndedIterator`":"2:8523:120","self::pattern":"2:13134:2753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49558:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:37:598":{"id":"0:37:598","crate_id":0,"name":"encode","span":{"filename":"src/chunked_encoder.rs","begin":[34,4],"end":[59,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["bytes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["sink",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"S"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"S"},"trait":{"name":"","id":"0:24:1741","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sink","id":"0:24:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:3103-0:564:2161":{"id":"a:2:9340:3103-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3740:4111":{"id":"2:3740:4111","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:57342"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13508:304":{"id":"2:13508:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:16010:2626","`u8`":"1:16021:2635"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:283:2089":{"id":"b:2:3202-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13514:54706":{"id":"2:13514:54706","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:579:2336":{"id":"0:579:2336","crate_id":0,"name":"ParseAlphabetError","span":{"filename":"src/alphabet.rs","begin":[109,0],"end":[118,1]},"visibility":"public","docs":"Possible errors when constructing an [Alphabet] from a `str`.","links":{"Alphabet":"0:564:2161"},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:580:1917","0:582:2343","0:585:2339","0:588:2340"],"impls":["a:2:3310:3162-0:579:2336","a:2:3269:211-0:579:2336","a:2:9340:3103-0:579:2336","a:2:9339:3104-0:579:2336","a:2:3281:220-0:579:2336","b:2:3198-0:579:2336","b:2:2872-0:579:2336","b:2:2869-0:579:2336","b:2:4002-0:579:2336","b:2:3202-0:579:2336","b:2:3213-0:579:2336","b:2:3208-0:579:2336","b:5:6413-0:579:2336","0:591","0:593","0:594","0:596","0:597","0:431","0:433"]}},"0:42:1775":{"id":"0:42:1775","crate_id":0,"name":"StringSink","span":{"filename":"src/chunked_encoder.rs","begin":[85,0],"end":[87,1]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:44:1736"],"impls":["0:45","a:2:3310:3162-0:42:1775","a:2:3269:211-0:42:1775","a:2:9340:3103-0:42:1775","a:2:9339:3104-0:42:1775","a:2:3281:220-0:42:1775","b:2:3198-0:42:1775","b:2:2872-0:42:1775","b:2:2869-0:42:1775","b:2:4002-0:42:1775","b:2:3202-0:42:1775","b:2:3213-0:42:1775","b:2:3208-0:42:1775","0:48"]}},"1:6437:3688":{"id":"1:6437:3688","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6438:4004","1:6439:4005","1:6440:7139","1:6441:53958","1:6443:53962","1:6445:53959","1:6446:53960","1:6448:53961"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8003:4203":{"id":"2:8003:4203","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8004:59691","2:8005:59692","2:8006:59696","2:8007:59694","2:8008:59693","2:8009:59697","2:8010:59695"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10655:3749":{"id":"2:10655:3749","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10656:146","2:10657:33690","2:10658:56514"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14246:141":{"id":"2:14246:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14247:277","2:14248:518","2:14249:280","2:14250:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13519:60018":{"id":"2:13519:60018","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:16010:2626","`str`":"1:16010:2626","crate::ops::IndexMut":"2:3581:2739"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:96:127":{"id":"0:96:127","crate_id":0,"name":"Error","span":{"filename":"src/display.rs","begin":[46,4],"end":[46,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:255:1949":{"id":"0:255:1949","crate_id":0,"name":"EncoderStringWriter","span":{"filename":"src/write/encoder_string_writer.rs","begin":[56,0],"end":[58,1]},"visibility":"public","docs":"A `Write` implementation that base64-encodes data using the provided config and accumulates the\nresulting base64 utf8 `&str` in a [StrConsumer] implementation (typically `String`), which is\nthen exposed via `into_inner()`.\n\n# Examples\n\nBuffer base64 in a new String:\n\n```\nuse std::io::Write;\n\nlet mut enc = base64::write::EncoderStringWriter::from(\n    &base64::engine::DEFAULT_ENGINE);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// get the resulting String\nlet b64_string = enc.into_inner();\n\nassert_eq!(\"YXNkZg==\", &b64_string);\n```\n\nOr, append to an existing `String`, which implements `StrConsumer`:\n\n```\nuse std::io::Write;\n\nlet mut buf = String::from(\"base64: \");\n\nlet mut enc = base64::write::EncoderStringWriter::from_consumer(\n    &mut buf,\n    &base64::engine::DEFAULT_ENGINE);\n\nenc.write_all(b\"asdf\").unwrap();\n\n// release the &mut reference on buf\nlet _ = enc.into_inner();\n\nassert_eq!(\"base64: YXNkZg==\", &buf);\n```\n\n# Panics\n\nCalling `write()` (or related methods) or `finish()` after `finish()` has completed without\nerror is invalid and will panic.\n\n# Performance\n\nBecause it has to validate that the base64 is UTF-8, it is about 80% as fast as writing plain\nbytes to a `io::Write`.","links":{"StrConsumer":"0:276:1950"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:259:1837"],"impls":["0:260","0:266","a:2:3310:3162-0:255:1949","a:2:3269:211-0:255:1949","a:2:9340:3103-0:255:1949","a:2:9339:3104-0:255:1949","a:2:3281:220-0:255:1949","b:2:3198-0:255:1949","b:2:2872-0:255:1949","b:2:2869-0:255:1949","b:2:4002-0:255:1949","b:2:3202-0:255:1949","b:2:3213-0:255:1949","b:2:3208-0:255:1949","0:270"]}},"b:2:4002-0:579:2336":{"id":"b:2:4002-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:3162-0:255:1949":{"id":"a:2:3310:3162-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13543:3259":{"id":"2:13543:3259","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47591:176","self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6084:60673":{"id":"5:6084:60673","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2743","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2890","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2743","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:2890","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6413-0:600:1636":{"id":"b:5:6413-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:126:1865":{"id":"0:126:1865","crate_id":0,"name":"DecoderReader","span":{"filename":"src/read/decoder.rs","begin":[34,0],"end":[57,1]},"visibility":"public","docs":"A `Read` implementation that decodes base64 data read from an underlying reader.\n\n# Examples\n\n```\nuse std::io::Read;\nuse std::io::Cursor;\n\n// use a cursor as the simplest possible `Read` -- in real code this is probably a file, etc.\nlet mut wrapped_reader = Cursor::new(b\"YXNkZg==\");\nlet mut decoder = base64::read::DecoderReader::from(\n    &mut wrapped_reader,\n    &base64::engine::DEFAULT_ENGINE);\n\n// handle errors as you normally would\nlet mut result = Vec::new();\ndecoder.read_to_end(&mut result).unwrap();\n\nassert_eq!(b\"asdf\", &result[..]);\n\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:4666:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:130:1627","0:131:1886","0:132:1887","0:134:1888","0:135:1889","0:136:1890","0:138:1891","0:139:1892","0:140:1893"],"impls":["0:146","a:2:3310:3162-0:126:1865","a:2:3269:211-0:126:1865","a:2:9340:3103-0:126:1865","a:2:9339:3104-0:126:1865","a:2:3281:220-0:126:1865","b:2:3198-0:126:1865","b:2:2872-0:126:1865","b:2:2869-0:126:1865","b:2:4002-0:126:1865","b:2:3202-0:126:1865","b:2:3213-0:126:1865","b:2:3208-0:126:1865","0:141","0:159"]}},"0:274:1626":{"id":"0:274:1626","crate_id":0,"name":"write","span":{"filename":"src/write/encoder_string_writer.rs","begin":[88,4],"end":[90,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10393:2771":{"id":"2:10393:2771","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10394:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:579:2336":{"id":"a:2:3281:220-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8548:3163":{"id":"2:8548:3163","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8549:793","2:8550:2059"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:283:2089":{"id":"b:2:3198-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:603:1542":{"id":"0:603:1542","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[16,16],"end":[16,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"5:6105:2849":{"id":"5:6105:2849","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:563:660":{"id":"0:563:660","crate_id":0,"name":"fmt","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[236,22],"end":[236,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:282:2100":{"id":"0:282:2100","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:349:2213":{"id":"0:349:2213","crate_id":0,"name":"decode_helper","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[51,0],"end":[303,1]},"visibility":"public","docs":"Helper to avoid duplicating num_chunks calculation, which is costly on short inputs.\nReturns the number of bytes written, or an error.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["estimate",{"kind":"resolved_path","inner":{"name":"FastPortableEstimate","id":"0:343:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["decode_table",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"256"}}}}],["decode_allow_trailing_bits",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:226:2019":{"id":"0:226:2019","crate_id":0,"name":"write_all_encoded_output","span":{"filename":"src/write/encoder.rs","begin":[211,4],"end":[226,5]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"Write all buffered encoded output. If this returns `Ok`, `self.output_occupied_len` is `0`.\n\nThis is basically write_all for the remaining buffered data but without the undesirable\nabort-on-`Ok(0)` behavior.\n\n# Errors\n\nAny error emitted by the delegate writer abort the write loop and is returned, unless it's\n`Interrupted`, in which case the error is ignored and writes will continue.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:3103-0:73:1848":{"id":"a:2:9340:3103-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:790:3315":{"id":"5:790:3315","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[108,16],"end":[108,18]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5775:3702":{"id":"1:5775:3702","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:56068","1:5777:56069","1:5778:56070","1:5779:56071"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:600:1636":{"id":"b:2:4002-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:255:1949":{"id":"a:2:3269:211-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3198-0:579:2336":{"id":"b:2:3198-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13518:3796":{"id":"2:13518:3796","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3577:2738","str::slice_mut_unchecked":"1:16010:2626","`str`":"1:16010:2626"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:612:408":{"id":"0:612:408","crate_id":0,"name":"clone","span":{"filename":"src/decode.rs","begin":[13,9],"end":[13,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:409:1628":{"id":"0:409:1628","crate_id":0,"name":"alphabet","span":{"filename":"src/alphabet.rs","begin":[1,0],"end":[247,1]},"visibility":"public","docs":"Provides [Alphabet] and constants for alphabets commonly used in the wild.","links":{"Alphabet":"0:564:2161"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:423:2318","0:564:2161","0:579:2336","0:434:1785","0:435:2358","0:436:2362","0:437:2365","0:438:2369","0:439:2373"],"is_stripped":false}},"b:2:3208-0:42:1775":{"id":"b:2:3208-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:73:1848":{"id":"0:73:1848","crate_id":0,"name":"Base64Display","span":{"filename":"src/display.rs","begin":[19,0],"end":[22,1]},"visibility":"public","docs":"A convenience wrapper for base64'ing bytes into a format string without heap allocation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:77:1756","0:78:1623"],"impls":["0:79","a:2:3310:3162-0:73:1848","a:2:3269:211-0:73:1848","a:2:9340:3103-0:73:1848","a:2:9339:3104-0:73:1848","a:2:3281:220-0:73:1848","b:2:3198-0:73:1848","b:2:2872-0:73:1848","b:2:2869-0:73:1848","b:2:4002-0:73:1848","b:2:3202-0:73:1848","b:2:3213-0:73:1848","b:2:3208-0:73:1848","b:5:6413-0:73:1848","0:84"]}},"0:365:2170":{"id":"0:365:2170","crate_id":0,"name":"decode_table","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[19,4],"end":[19,27]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"256"}}},"2:13562:54740":{"id":"2:13562:54740","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:16004:2621","str::rsplitn":"1:16010:2626","self::pattern":"2:13134:2753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49662:3354","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:28:1748":{"id":"a:2:3281:220-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[99,0],"end":[105,1]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:429:127","0:430:1416"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:227:1926":{"id":"0:227:1926","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder.rs","begin":[241,4],"end":[245,5]},"visibility":"public","docs":"Unwraps this `EncoderWriter`, returning the base writer it writes base64 encoded output\nto.\n\nNormally this method should not be needed, since `finish()` returns the inner writer if\nit completes successfully. That will also ensure all data has been flushed, which the\n`into_inner()` function does *not* do.\n\nCalling this method after `finish()` has completed successfully will panic, since the\nwriter has already been returned.\n\nThis method may be useful if the writer implements additional APIs beyond the `Write`\ntrait. Note that the inner writer might be in an error state or have an incomplete\nbase64 string written to it.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"W"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:610:1543":{"id":"0:610:1543","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[27,29],"end":[27,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"a:2:3269:211-0:556:1788":{"id":"a:2:3269:211-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:124:1869":{"id":"0:124:1869","crate_id":0,"name":"BASE64_CHUNK_SIZE","span":{"filename":"src/read/decoder.rs","begin":[10,0],"end":[10,35]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"4","value":"4usize","is_literal":true}},"b:2:2869-0:197:1948":{"id":"b:2:2869-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:4111","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:517":{"id":"0:517","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[30,0],"end":[42,1]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:518:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13539:3295":{"id":"2:13539:3295","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47591:176","self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:600:1636":{"id":"b:2:3202-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:202:1988":{"id":"0:202:1988","crate_id":0,"name":"delegate","span":{"filename":"src/write/encoder.rs","begin":[70,4],"end":[70,23]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"Where encoded data is written to. It's an Option as it's None immediately before Drop is\ncalled so that finish() can return the underlying writer. None implies that finish() has\nbeen called successfully.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}}},"0:77:1756":{"id":"0:77:1756","crate_id":0,"name":"bytes","span":{"filename":"src/display.rs","begin":[20,4],"end":[20,19]},"visibility":{"restricted":{"parent":"0:52:1624","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"0:93":{"id":"0:93","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[45,0],"end":[54,1]},"visibility":{"restricted":{"parent":"0:52:1624","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":["'a"]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sink","id":"0:24:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["0:96:127","0:97:1743"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:373:598":{"id":"0:373:598","crate_id":0,"name":"encode","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[41,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3380:4104":{"id":"2:3380:4104","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:242:1947":{"id":"0:242:1947","crate_id":0,"name":"encoder_string_writer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[1,0],"end":[178,1]},"visibility":{"restricted":{"parent":"0:169:1626","path":"::write"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:255:1949","0:276:1950","0:283:2089"],"is_stripped":false}},"0:580:1917":{"id":"0:580:1917","crate_id":0,"name":"InvalidLength","span":{"filename":"src/alphabet.rs","begin":[111,4],"end":[111,17]},"visibility":"default","docs":"Alphabets must be 64 ASCII bytes","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:569":{"id":"0:569","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[21,16],"end":[21,21]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:570:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:169:1626":{"id":"0:169:1626","crate_id":0,"name":"write","span":{"filename":"src/write/mod.rs","begin":[1,0],"end":[9,18]},"visibility":"public","docs":"Implementations of `io::Write` to transparently handle base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:170:1837","0:242:1947","0:290","0:293","0:296"],"is_stripped":false}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[108,20],"end":[108,29]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:158:1926":{"id":"0:158:1926","crate_id":0,"name":"into_inner","span":{"filename":"src/read/decoder.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Unwraps this `DecoderReader`, returning the base reader which it reads base64 encoded\ninput from.\n\nBecause `DecoderReader` performs internal buffering, the state of the inner reader is\nunspecified. This function is mainly provided because the inner reader type may provide\nadditional functionality beyond the `Read` implementation which may still be useful.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:275:2070":{"id":"0:275:2070","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder_string_writer.rs","begin":[92,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:403:1753":{"id":"0:403:1753","crate_id":0,"name":"config","span":{"filename":"src/engine/mod.rs","begin":[70,4],"end":[70,38]},"visibility":"default","docs":"Returns the config for this engine.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:397:1739","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[98,0],"end":[246,1]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:219:681","0:222:652","0:223:2014","0:224:2025","0:226:2019","0:227:1926"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:197:1948":{"id":"b:2:4002-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8680:157":{"id":"2:8680:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8681:3262","2:8682:922","2:8683:3263","2:8686:3264","2:8687:495","2:8689:2267","2:8692:3265","2:8693:3266","2:8694:3267","2:8695:3268","2:8697:3269","2:8699:3270","2:8700:3271","2:8702:841","2:8705:3272","2:8712:3273","2:8714:3274","2:8717:2281","2:8718:3275","2:8719:3276","2:8721:3277","2:8723:3278","2:8726:1308","2:8727:2016","2:8728:3279","2:8732:3280","2:8735:3281","2:8736:3282","2:8737:3283","2:8739:3284","2:8740:2750","2:8742:3285","2:8745:3286","2:8747:3287","2:8757:3288","2:8772:3289","2:8774:3290","2:8778:3291","2:8787:3292","2:8790:3293","2:8792:3294","2:8795:276","2:8802:294","2:8809:3295","2:8816:3296","2:8825:3297","2:8835:1014","2:8842:3298","2:8849:3247","2:8850:1761","2:8851:3249","2:8863:3248","2:8870:3246","2:8882:3245","2:8889:3299","2:8890:3300","2:8895:3301","2:8898:3302","2:8901:3303","2:8902:3304","2:8904:3305","2:8906:3306","2:8908:415","2:8911:3307","2:8914:997","2:8917:3308","2:8920:604","2:8923:3309","2:8926:907","2:8928:826","2:8930:792","2:8932:713","2:8934:696","2:8936:3310","2:8937:3311","2:8945:3312"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:283:2089":{"id":"b:2:2869-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:79":{"id":"0:79","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[24,0],"end":[32,1]},"visibility":{"restricted":{"parent":"0:52:1624","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:83:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13499:2059":{"id":"2:13499:2059","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:31:1627":{"id":"0:31:1627","crate_id":0,"name":"engine","span":{"filename":"src/chunked_encoder.rs","begin":[22,4],"end":[22,17]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}},"0:342:2258":{"id":"0:342:2258","crate_id":0,"name":"DECODED_BLOCK_LEN","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[20,0],"end":[21,74]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"_","value":"26usize","is_literal":false}},"5:6106:54290":{"id":"5:6106:54290","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16010:2626"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:556:1788":{"id":"b:2:3208-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:197:1948":{"id":"a:2:3269:211-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:556:1788":{"id":"b:2:2869-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13529:32432":{"id":"2:13529:32432","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49850:3359","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:492":{"id":"0:492","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[114,24],"end":[114,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine_slice","name":"encode_engine_slice","id":"0:472:1631","glob":false}},"2:13565:54742":{"id":"2:13565:54742","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:16004:2621","str::splitn":"1:16010:2626","self::pattern":"2:13134:2753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49680:3353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:380:2169":{"id":"0:380:2169","crate_id":0,"name":"encode_table","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[185,0],"end":[198,1]},"visibility":"crate","docs":"Returns a table mapping a 6-bit index to the ASCII byte encoding of the index","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"64"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3396:3750":{"id":"2:3396:3750","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:140:1893":{"id":"0:140:1893","crate_id":0,"name":"total_b64_decoded","span":{"filename":"src/read/decoder.rs","begin":[56,4],"end":[56,28]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:3364:4098":{"id":"2:3364:4098","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[294,0],"end":[298,1]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Config","id":"0:404:1738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:394:1754"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:25:127":{"id":"0:25:127","crate_id":0,"name":"Error","span":{"filename":"src/chunked_encoder.rs","begin":[12,4],"end":[12,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:564:2161":{"id":"b:2:2872-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:3103-0:126:1865":{"id":"a:2:9340:3103-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:73:1848":{"id":"b:2:3213-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:219:681":{"id":"0:219:681","crate_id":0,"name":"from","span":{"filename":"src/write/encoder.rs","begin":[100,4],"end":[110,5]},"visibility":"public","docs":"Create a new encoder that will write to the provided delegate writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["delegate",{"kind":"generic","inner":"W"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:92:630":{"id":"0:92:630","crate_id":0,"name":"f","span":{"filename":"src/display.rs","begin":[42,4],"end":[42,28]},"visibility":{"restricted":{"parent":"0:52:1624","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'b"}],"bindings":[]}}}}}}},"2:13603:54745":{"id":"2:13603:54745","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:620":{"id":"0:620","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[13,34],"end":[13,36]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:619":{"id":"0:619","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[13,34],"end":[13,36]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:163:1625":{"id":"0:163:1625","crate_id":0,"name":"read","span":{"filename":"src/read/decoder.rs","begin":[185,4],"end":[292,5]},"visibility":"default","docs":"Decode input from the wrapped reader.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nwritten in `buf`.\n\nWhere possible, this function buffers base64 to minimize the number of read() calls to the\ndelegate reader.\n\n# Errors\n\nAny errors emitted by the delegate reader are returned. Decoding errors due to invalid\nbase64 are also possible, and will have `io::ErrorKind::InvalidData`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:236:2070":{"id":"0:236:2070","crate_id":0,"name":"flush","span":{"filename":"src/write/encoder.rs","begin":[391,4],"end":[397,5]},"visibility":"default","docs":"Because this is usually treated as OK to call multiple times, it will *not* flush any\nincomplete chunks of input or write padding.\n# Errors\n\nThe first error that is not of [`ErrorKind::Interrupted`] will be returned.","links":{"`ErrorKind::Interrupted`":"1:10962:1919"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:571":{"id":"0:571","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[21,23],"end":[21,25]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6863:3673":{"id":"1:6863:3673","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:58220"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:607:1918":{"id":"0:607:1918","crate_id":0,"name":"InvalidLastSymbol","span":{"filename":"src/decode.rs","begin":[27,4],"end":[27,32]},"visibility":"default","docs":"The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\nThis is indicative of corrupted or truncated Base64.\nUnlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for\nsymbols that are in the alphabet but represent nonsensical encodings.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"u8"}]}},"0:280:2100":{"id":"0:280:2100","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[105,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5797:3706":{"id":"1:5797:3706","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:6030"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:578:907":{"id":"0:578:907","crate_id":0,"name":"ne","span":{"filename":"src/alphabet.rs","begin":[21,27],"end":[21,36]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2866:3500":{"id":"2:2866:3500","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:53769"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:604:1543":{"id":"0:604:1543","crate_id":0,"name":"1","span":{"filename":"src/decode.rs","begin":[16,23],"end":[16,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:13530:54744":{"id":"2:13530:54744","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:3162-0:126:1865":{"id":"a:2:3310:3162-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5735:3701":{"id":"1:5735:3701","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5736:6030","1:5737:7144"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[248,0],"end":[398,1]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all","write_vectored","write_fmt","write_all_vectored","by_ref","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:232:1626","0:236:2070"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3269:211-0:126:1865":{"id":"a:2:3269:211-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3352:4092":{"id":"2:3352:4092","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:6413-0:579:2336":{"id":"b:5:6413-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6411:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6415:1397"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:278":{"id":"0:278","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[104,0],"end":[108,1]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":"As for io::Write, `StrConsumer` is implemented automatically for `&mut S`.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"S"}}},"items":["0:280:2100"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[108,9],"end":[108,14]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:592:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9340:3103-0:28:1748":{"id":"a:2:9340:3103-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:557:1754":{"id":"0:557:1754","crate_id":0,"name":"encode_padding","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[238,4],"end":[238,24]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:390:2246":{"id":"0:390:2246","crate_id":0,"name":"with_decode_allow_trailing_bits","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[279,4],"end":[284,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `decode_allow_trailing_bits` parameter.\n\nMost users will not need to configure this. It's useful if you need to decode base64\nproduced by a buggy encoder that has bits set in the unused space on the last base64\ncharacter as per [forgiving-base64 decode](https://infra.spec.whatwg.org/#forgiving-base64-decode).\nIf invalid trailing bits are present and this is `true`, those bits will\nbe silently ignored, else `DecodeError::InvalidLastSymbol` will be emitted.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["allow",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3427:4217":{"id":"2:3427:4217","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:618:907":{"id":"0:618:907","crate_id":0,"name":"ne","span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:600:1636":{"id":"b:2:3208-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:3103-0:579:2336":{"id":"a:2:9340:3103-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:787-0:564:2161":{"id":"b:5:787-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:3314","5:790:3315","5:791:3316"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:429:127":{"id":"0:429:127","crate_id":0,"name":"Error","span":{"filename":"src/alphabet.rs","begin":[100,4],"end":[100,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13503:60016":{"id":"2:13503:60016","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16010:2626"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:78:1623":{"id":"0:78:1623","crate_id":0,"name":"chunked_encoder","span":{"filename":"src/display.rs","begin":[21,4],"end":[21,42]},"visibility":{"restricted":{"parent":"0:52:1624","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[23,0],"end":[35,1]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:369:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:2028"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:475:2420":{"id":"0:475:2420","crate_id":0,"name":"encode_with_padding","span":{"filename":"src/encode.rs","begin":[171,0],"end":[192,1]},"visibility":{"restricted":{"parent":"0:440:598","path":"::encode"}},"docs":"B64-encode and pad (if configured).\n\nThis helper exists to avoid recalculating encoded_size, which is relatively expensive on short\ninputs.\n\n`encoded_size` is the encoded size calculated for `input`.\n\n`output` must be of size `encoded_size`.\n\nAll bytes in `output` will be written to since it is exactly the size of the output.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}],["expected_encoded_size",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3281:220-0:556:1788":{"id":"a:2:3281:220-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:290":{"id":"0:290","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[4,0],"end":[4,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder::EncoderWriter","name":"EncoderWriter","id":"0:197:1948","glob":false}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[236,22],"end":[236,27]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:89:1851":{"id":"b:2:2872-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:3253"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:197:1948":{"id":"b:2:2872-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13594:60032":{"id":"2:13594:60032","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13164:3340","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:440:598":{"id":"0:440:598","crate_id":0,"name":"encode","span":{"filename":"src/encode.rs","begin":[1,0],"end":[607,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:464:598","0:466:1629","0:469:1630","0:472:1631","0:475:2420","0:477:1632","0:480:1737"],"is_stripped":false}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6103:60676":{"id":"5:6103:60676","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:340:2256":{"id":"0:340:2256","crate_id":0,"name":"CHUNKS_PER_FAST_LOOP_BLOCK","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[15,0],"end":[15,44]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"4","value":"4usize","is_literal":true}},"0:594":{"id":"0:594","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[108,16],"end":[108,18]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:126:1865":{"id":"b:2:2872-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:265:1926":{"id":"0:265:1926","crate_id":0,"name":"into_inner","span":{"filename":"src/write/encoder_string_writer.rs","begin":[72,4],"end":[77,5]},"visibility":"public","docs":"Encode all remaining buffered data, including any trailing incomplete input triples and\nassociated padding.\n\nReturns the base64-encoded form of the accumulated written data.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"S"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13550:32304":{"id":"2:13550:32304","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:16004:2621","self::pattern":"2:13134:2753"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12926:3364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:564:2161":{"id":"b:2:2869-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6685:3683":{"id":"1:6685:3683","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6686:56584","1:6687:8151","1:6688:8152","1:6689:8154","1:6690:8153","1:6691:8155","1:6692:8156","1:6693:8158","1:6694:6071","1:6695:8161","1:6696:8162","1:6697:8163","1:6698:8164","1:6699:8165","1:6700:8166","1:6701:8159","1:6702:8160"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10322:1984":{"id":"2:10322:1984","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10323:1533","2:10324:56464","2:10326:3048"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:232:1626":{"id":"0:232:1626","crate_id":0,"name":"write","span":{"filename":"src/write/encoder.rs","begin":[265,4],"end":[384,5]},"visibility":"default","docs":"Encode input and then write to the delegate writer.\n\nUnder non-error circumstances, this returns `Ok` with the value being the number of bytes\nof `input` consumed. The value may be `0`, which interacts poorly with `write_all`, which\ninterprets `Ok(0)` as an error, despite it being allowed by the contract of `write`. See\n<https://github.com/rust-lang/rust/issues/56889> for more on that.\n\nIf the previous call to `write` provided more (encoded) data than the delegate writer could\naccept in a single call to its `write`, the remaining data is buffered. As long as buffered\ndata is present, subsequent calls to `write` will try to write the remaining buffered data\nto the delegate and return either `Ok(0)` -- and therefore not consume any of `input` -- or\nan error.\n\n# Errors\n\nAny errors emitted by the delegate writer are returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:286":{"id":"0:286","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[124,0],"end":[139,1]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all","write_vectored","write_fmt","write_all_vectored","by_ref","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["0:288:1626","0:289:2070"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[85,0],"end":[96,1]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:214:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:616":{"id":"0:616","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,32]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:617:604","0:618:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4002-0:564:2161":{"id":"b:2:4002-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3717:4531":{"id":"2:3717:4531","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:2740","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:88:660":{"id":"0:88:660","crate_id":0,"name":"fmt","span":{"filename":"src/display.rs","begin":[35,4],"end":[38,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["formatter",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"fmt::Error","id":"2:48657:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:564:2161":{"id":"0:564:2161","crate_id":0,"name":"Alphabet","span":{"filename":"src/alphabet.rs","begin":[22,0],"end":[24,1]},"visibility":"public","docs":"An alphabet defines the 64 ASCII characters (symbols) used for base64.\n\nCommon alphabets are provided as constants, and custom alphabets\ncan be made via `from_str` or the `TryFrom<str>` implementation.\n\n```\nlet custom = base64::alphabet::Alphabet::from_str(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\").unwrap();\n\nlet engine = base64::engine::fast_portable::FastPortable::from(\n    &custom,\n    base64::engine::fast_portable::PAD);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:565:2216"],"impls":["0:424","a:2:3310:3162-0:564:2161","a:2:3269:211-0:564:2161","a:2:9340:3103-0:564:2161","a:2:9339:3104-0:564:2161","a:2:3281:220-0:564:2161","b:2:3198-0:564:2161","b:2:2872-0:564:2161","b:2:2869-0:564:2161","b:2:4002-0:564:2161","b:2:3202-0:564:2161","b:2:3213-0:564:2161","b:2:3208-0:564:2161","b:5:787-0:564:2161","0:567","0:569","0:571","0:572","0:575","0:576","0:428"]}},"0:404:1738":{"id":"0:404:1738","crate_id":0,"name":"Config","span":{"filename":"src/engine/mod.rs","begin":[74,0],"end":[84,1]},"visibility":"public","docs":"The minimal level of configuration that engines must support.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:405:1754"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:393"]}},"0:570:660":{"id":"0:570:660","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[21,16],"end":[21,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[114,45],"end":[114,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encoded_len","name":"encoded_len","id":"0:477:1632","glob":false}},"5:5833:3502":{"id":"5:5833:3502","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:150:681":{"id":"0:150:681","crate_id":0,"name":"from","span":{"filename":"src/read/decoder.rs","begin":[74,4],"end":[86,5]},"visibility":"public","docs":"Create a new decoder that will read from the provided reader `r`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["reader",{"kind":"generic","inner":"R"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:255:1949":{"id":"b:2:3208-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:73:1848":{"id":"b:2:2872-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9340:3103-0:556:1788":{"id":"a:2:9340:3103-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:139:1892":{"id":"0:139:1892","crate_id":0,"name":"decoded_len","span":{"filename":"src/read/decoder.rs","begin":[54,4],"end":[54,22]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:498:532":{"id":"0:498:532","crate_id":0,"name":"decode","span":{"filename":"src/decode.rs","begin":[1,0],"end":[360,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:600:1636","0:522:532","0:524:1633","0:528:1634","0:533:1635"],"is_stripped":false}},"1:5719:3699":{"id":"1:5719:3699","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720:54239","1:5721:54241","1:5722:54240","1:5723:54242"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9339:3104-0:600:1636":{"id":"a:2:9339:3104-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13507:60017":{"id":"2:13507:60017","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:379:1753":{"id":"0:379:1753","crate_id":0,"name":"config","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[179,4],"end":[181,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Config","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:397:1739","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:555:1638":{"id":"0:555:1638","crate_id":0,"name":"PAD_BYTE","span":{"filename":"src/lib.rs","begin":[124,0],"end":[124,26]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"b'='","value":"61u8","is_literal":true}},"b:2:3208-0:28:1748":{"id":"b:2:3208-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:276:1950":{"id":"0:276:1950","crate_id":0,"name":"StrConsumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[98,0],"end":[101,1]},"visibility":"public","docs":"An abstraction around consuming `str`s produced by base64 encoding.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:277:2100"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:278","0:281"]}},"b:2:3208-0:73:1848":{"id":"b:2:3208-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13144:2742":{"id":"2:13144:2742","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13146:3342","2:13147:58701","2:13148:58702","2:13149:58703","2:13150:58705","2:13151:58704","2:13152:58706"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:600:1636":{"id":"0:600:1636","crate_id":0,"name":"DecodeError","span":{"filename":"src/decode.rs","begin":[14,0],"end":[28,1]},"visibility":"public","docs":"Errors that can occur while decoding.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:601:1915","0:605:1917","0:607:1918"],"impls":["a:2:3310:3162-0:600:1636","a:2:3269:211-0:600:1636","a:2:9340:3103-0:600:1636","a:2:9339:3104-0:600:1636","a:2:3281:220-0:600:1636","b:2:3198-0:600:1636","b:2:2872-0:600:1636","b:2:2869-0:600:1636","b:2:4002-0:600:1636","b:2:3202-0:600:1636","b:2:3213-0:600:1636","b:2:3208-0:600:1636","b:5:6413-0:600:1636","b:5:787-0:600:1636","0:611","0:613","0:615","0:616","0:619","0:620","0:517","0:519"]}},"1:6859:3669":{"id":"1:6859:3669","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6860:55871"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:255:1949":{"id":"b:2:3202-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3213-0:579:2336":{"id":"b:2:3213-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2872-0:579:2336":{"id":"b:2:2872-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10389:189":{"id":"2:10389:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10390:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:401:2134":{"id":"0:401:2134","crate_id":0,"name":"decoded_length_estimate","span":{"filename":"src/engine/mod.rs","begin":[46,4],"end":[46,80]},"visibility":"default","docs":"As an optimization to prevent the decoded length from being calculated twice, it is\nsometimes helpful to have a conservative estimate of the decoded size before doing the\ndecoding, so this calculation is done separately and passed to [Engine::decode()] as needed.","links":{"Engine::decode()":"0:397:1739"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input_len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"qualified_path","inner":{"name":"DecodeEstimate","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:397:1739","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:4002-0:283:2089":{"id":"b:2:4002-0:283:2089","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:354:2274":{"id":"0:354:2274","crate_id":0,"name":"decode_chunk_precise","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[409,0],"end":[427,1]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":"Decode an 8-byte chunk, but only write the 6 bytes actually decoded instead of including 2\ntrailing garbage bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["index_at_start_of_input",{"kind":"primitive","inner":"usize"}],["decode_table",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"256"}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13618:54291":{"id":"2:13618:54291","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:277:2100":{"id":"0:277:2100","crate_id":0,"name":"consume","span":{"filename":"src/write/encoder_string_writer.rs","begin":[100,4],"end":[100,37]},"visibility":"default","docs":"Consume the base64 encoded data in `buf`","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9339:3104-0:28:1748":{"id":"a:2:9339:3104-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3213-0:564:2161":{"id":"b:2:3213-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5837:3503":{"id":"5:5837:3503","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:33447"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:579:2336":{"id":"a:2:3269:211-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:6557:3735":{"id":"1:6557:3735","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6558:56641","1:6559:56642"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10381:2766":{"id":"2:10381:2766","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10382:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:241:578":{"id":"0:241:578","crate_id":0,"name":"drop","span":{"filename":"src/write/encoder.rs","begin":[401,4],"end":[406,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:545":{"id":"0:545","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[118,47],"end":[118,64]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::decode_engine_vec","name":"decode_engine_vec","id":"0:528:1634","glob":false}},"b:2:4002-0:362:1787":{"id":"b:2:4002-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:579:2336":{"id":"b:2:2869-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:130:1627":{"id":"0:130:1627","crate_id":0,"name":"engine","span":{"filename":"src/read/decoder.rs","begin":[35,4],"end":[35,17]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}},"a:2:3281:220-0:255:1949":{"id":"a:2:3281:220-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:4723:1984":{"id":"1:4723:1984","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:1626","1:4725:3493","1:4727:3494","1:4728:2070","1:4729:2112","1:4730:3495","1:4731:3048","1:4740:3284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:588:2340":{"id":"0:588:2340","crate_id":0,"name":"ReservedByte","span":{"filename":"src/alphabet.rs","begin":[117,4],"end":[117,20]},"visibility":"default","docs":"`=` cannot be used","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u8"}]}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,24],"end":[113,30]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode","name":"encode","id":"0:464:598","glob":false}},"0:584:1542":{"id":"0:584:1542","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[113,19],"end":[113,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:533:1635":{"id":"0:533:1635","crate_id":0,"name":"decode_engine_slice","span":{"filename":"src/decode.rs","begin":[187,0],"end":[199,1]},"visibility":"public","docs":"Decode the input into the provided output slice.\n\nThis will not write any bytes past exactly what is decoded (no stray garbage bytes at the end).\n\nIf you don't know ahead of time what the decoded length should be, size your buffer with a\nconservative estimate for the decoded length of an input: 3 bytes of output for every 4 bytes of\ninput, rounded up, or in other words `(input_len + 3) / 4 * 3`.\n\n# Panics\n\nIf the slice is not large enough, this will panic.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output",{"kind":"borrowed_ref","inner":{"lifetime":"'o","mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"'o","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"b:2:3208-0:579:2336":{"id":"b:2:3208-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:389:2238":{"id":"0:389:2238","crate_id":0,"name":"with_encode_padding","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[265,4],"end":[270,5]},"visibility":"public","docs":"Create a new config based on `self` with an updated `padding` parameter.\n\nIf `true`, encoding will append either 1 or 2 `=` padding characters to produce an\noutput whose length is a multiple of 4.\n\nPadding is not needed for correct decoding and only serves to waste bytes, but it's in the\n[spec](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2).\n\nFor new applications, consider not using padding if the decoders you're using don't require\npadding to be present.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["padding",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:89:1851":{"id":"b:2:3208-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3559:4248":{"id":"2:3559:4248","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:58983"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:599:907":{"id":"0:599:907","crate_id":0,"name":"ne","span":{"filename":"src/alphabet.rs","begin":[108,20],"end":[108,29]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:89:1851":{"id":"0:89:1851","crate_id":0,"name":"FormatterSink","span":{"filename":"src/display.rs","begin":[41,0],"end":[43,1]},"visibility":{"restricted":{"parent":"0:52:1624","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":["'a"]}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:92:630"],"impls":["a:2:3310:3162-0:89:1851","a:2:3269:211-0:89:1851","a:2:9340:3103-0:89:1851","a:2:9339:3104-0:89:1851","a:2:3281:220-0:89:1851","b:2:3198-0:89:1851","b:2:2872-0:89:1851","b:2:2869-0:89:1851","b:2:4002-0:89:1851","b:2:3202-0:89:1851","b:2:3213-0:89:1851","b:2:3208-0:89:1851","0:93"]}},"0:353:2260":{"id":"0:353:2260","crate_id":0,"name":"num_chunks","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[399,0],"end":[404,1]},"visibility":"crate","docs":"Return the number of input chunks (including a possibly partial final chunk) in the input","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input_len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13510:54704":{"id":"2:13510:54704","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:920":{"id":"0:388:920","crate_id":0,"name":"new","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[247,4],"end":[253,5]},"visibility":"public","docs":"Create a new config with `padding` = `true` and `decode_allow_trailing_bits` = `false`.\n\nThis probably matches most people's expectations, but consider disabling padding to save\na few bytes unless you specifically need it for compatibility with some legacy system.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:431":{"id":"0:431","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[121,0],"end":[130,1]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:432:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:437:2365":{"id":"0:437:2365","crate_id":0,"name":"BCRYPT","span":{"filename":"src/alphabet.rs","begin":[157,0],"end":[159,2]},"visibility":"public","docs":"The bcrypt alphabet.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:131:1886":{"id":"0:131:1886","crate_id":0,"name":"inner","span":{"filename":"src/read/decoder.rs","begin":[37,4],"end":[37,12]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":"Where b64 data is read from","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"R"}},"0:383:2170":{"id":"0:383:2170","crate_id":0,"name":"decode_table","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[203,0],"end":[217,1]},"visibility":"crate","docs":"Returns a table mapping base64 bytes as the lookup index to either:\n- [INVALID_VALUE] for bytes that aren't members of the alphabet\n- a byte whose lower 6 bits are the value that was encoded into the index byte","links":{"INVALID_VALUE":"0:361:2163"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"256"}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"0:615":{"id":"0:615","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,32]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:362:1787":{"id":"0:362:1787","crate_id":0,"name":"FastPortable","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[17,0],"end":[21,1]},"visibility":"public","docs":"A general-purpose base64 engine.\n\n- It uses no vector CPU instructions, so it will work on any system.\n- It is reasonably fast (~2GiB/s).\n- It is not constant-time, though, so it is vulnerable to timing side-channel attacks. For loading cryptographic keys, etc, it is suggested to use the forthcoming constant-time implementation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:363:2169","0:365:2170","0:367:1753"],"impls":["0:368","a:2:3310:3162-0:362:1787","a:2:3269:211-0:362:1787","a:2:9340:3103-0:362:1787","a:2:9339:3104-0:362:1787","a:2:3281:220-0:362:1787","b:2:3198-0:362:1787","b:2:2872-0:362:1787","b:2:2869-0:362:1787","b:2:4002-0:362:1787","b:2:3202-0:362:1787","b:2:3213-0:362:1787","b:2:3208-0:362:1787","0:370"]}},"a:2:3310:3162-0:197:1948":{"id":"a:2:3310:3162-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:402:532":{"id":"0:402:532","crate_id":0,"name":"decode","span":{"filename":"src/engine/mod.rs","begin":[62,4],"end":[67,36]},"visibility":"default","docs":"Decode `input` base64 bytes into the `output` buffer.\n\n`decode_estimate` is the result of [Engine::decoded_length_estimate()], which is passed in to avoid\ncalculating it again (expensive on short inputs).`\n\nReturns the number of bytes written to `output`.\n\nEach complete 4-byte chunk of encoded data decodes to 3 bytes of decoded data, but this\nfunction must also handle the final possibly partial chunk.\nIf the input length is not a multiple of 4, or uses padding bytes to reach a multiple of 4,\nthe trailing 2 or 3 bytes must decode to 1 or 2 bytes, respectively, as per the\n[RFC](https://tools.ietf.org/html/rfc4648#section-3.5).\n\nDecoding must not write any bytes into the output slice other than the decoded data.","links":{"Engine::decoded_length_estimate()":"0:397:1739"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["decode_estimate",{"kind":"qualified_path","inner":{"name":"DecodeEstimate","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:397:1739","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:270":{"id":"0:270","crate_id":0,"name":null,"span":{"filename":"src/write/encoder_string_writer.rs","begin":[87,0],"end":[95,1]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["write_all","write_vectored","write_fmt","write_all_vectored","by_ref","is_write_vectored"],"trait":{"name":"Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["0:274:1626","0:275:2070"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:424":{"id":"0:424","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[26,0],"end":[96,1]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:425:2328","0:427:2335"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:194:1745":{"id":"0:194:1745","crate_id":0,"name":"BUF_SIZE","span":{"filename":"src/write/encoder.rs","begin":[8,0],"end":[8,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"1024","value":"1_024usize","is_literal":true}},"0:224:2025":{"id":"0:224:2025","crate_id":0,"name":"write_to_delegate","span":{"filename":"src/write/encoder.rs","begin":[178,4],"end":[200,5]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"Write as much of the encoded output to the delegate writer as it will accept, and store the\nleftovers to be attempted at the next write() call. Updates `self.output_occupied_len`.\n\n# Errors\n\nErrors from the delegate writer are returned. In the case of an error,\n`self.output_occupied_len` will not be updated, as errors from `write` are specified to mean\nthat no write took place.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["current_output_len",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:362:1787":{"id":"b:2:3213-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10379:119":{"id":"2:10379:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10380:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8523:120":{"id":"2:8523:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8524:3254","2:8525:3255","2:8526:3256","2:8527:3257","2:8531:3258","2:8534:3259"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3310:3162":{"id":"2:3310:3162","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:469:1630":{"id":"0:469:1630","crate_id":0,"name":"encode_engine_string","span":{"filename":"src/encode.rs","begin":[95,0],"end":[110,1]},"visibility":"public","docs":"Encode arbitrary octets as base64.\nWrites into the supplied `String`, which may allocate if its internal buffer isn't big enough.\n\n# Example\n\n```rust\nextern crate base64;\n\nconst URL_SAFE_ENGINE: base64::engine::fast_portable::FastPortable =\n    base64::engine::fast_portable::FastPortable::from(\n        &base64::alphabet::URL_SAFE,\n        base64::engine::fast_portable::NO_PAD);\nfn main() {\n    let mut buf = String::new();\n    base64::encode_engine_string(\n        b\"hello world~\",\n        &mut buf,\n        &base64::engine::DEFAULT_ENGINE);\n    println!(\"{}\", buf);\n\n    buf.clear();\n    base64::encode_engine_string(\n        b\"hello internet~\",\n        &mut buf,\n        &URL_SAFE_ENGINE);\n    println!(\"{}\", buf);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["output_buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3372:3898":{"id":"2:3372:3898","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:296":{"id":"0:296","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[6,0],"end":[6,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder_string_writer::StrConsumer","name":"StrConsumer","id":"0:276:1950","glob":false}},"2:14322:2889":{"id":"2:14322:2889","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14323:55986","2:14324:55987","2:14325:55988","2:14326:55989","2:14327:55990","2:14328:55991","2:14329:3284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:439:2373":{"id":"0:439:2373","crate_id":0,"name":"BIN_HEX","span":{"filename":"src/alphabet.rs","begin":[171,0],"end":[173,2]},"visibility":"public","docs":"The alphabet used in BinHex 4.0 files.\n\nSee [BinHex 4.0 Definition](http://files.stairways.com/other/binhex-40-specs-info.txt)","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:425:2328":{"id":"0:425:2328","crate_id":0,"name":"from_str_unchecked","span":{"filename":"src/alphabet.rs","begin":[29,4],"end":[41,5]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":"Performs no checks so that it can be const.\nUsed only for known-valid strings.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["alphabet",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:237":{"id":"0:237","crate_id":0,"name":null,"span":{"filename":"src/write/encoder.rs","begin":[400,0],"end":[407,1]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Write","id":"1:4723:1984","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3516:2071","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["0:241:578"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:6787:3740":{"id":"1:6787:3740","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6788:8267","1:6789:56089"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3202-0:579:2336":{"id":"b:2:3202-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:556:1788":{"id":"b:2:4002-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:89:1851":{"id":"b:2:3198-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:362:1787":{"id":"b:2:3208-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13553:54738":{"id":"2:13553:54738","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8523:120","str::split":"1:16010:2626","self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49576:3350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:528:1634":{"id":"0:528:1634","crate_id":0,"name":"decode_engine_vec","span":{"filename":"src/decode.rs","begin":[149,0],"end":[174,1]},"visibility":"public","docs":"Decode from string reference as octets.\nWrites into the supplied `Vec`, which may allocate if its internal buffer isn't big enough.\nReturns a `Result` containing an empty tuple, aka `()`.\n\n# Example\n\n```rust\nextern crate base64;\n\nconst URL_SAFE_ENGINE: base64::engine::fast_portable::FastPortable =\n    base64::engine::fast_portable::FastPortable::from(\n        &base64::alphabet::URL_SAFE,\n        base64::engine::fast_portable::PAD);\n\nfn main() {\n    let mut buffer = Vec::<u8>::new();\n    // with the default engine\n    base64::decode_engine_vec(\n        \"aGVsbG8gd29ybGR+Cg==\",\n        &mut buffer,\n        &base64::engine::DEFAULT_ENGINE\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n\n    buffer.clear();\n\n    // with a custom engine\n    base64::decode_engine_vec(\n        \"aGVsbG8gaW50ZXJuZXR-Cg==\",\n        &mut buffer,\n        &URL_SAFE_ENGINE\n    ).unwrap();\n    println!(\"{:?}\", buffer);\n}\n```","links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["buffer",{"kind":"borrowed_ref","inner":{"lifetime":"'o","mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"'o","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4666:1868":{"id":"1:4666:1868","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:1625","1:4668:3418","1:4670:3419","1:4671:3420","1:4672:2816","1:4673:3421","1:4674:3422","1:4676:3423","1:4677:3284","1:4678:1756","1:4679:3268","1:4681:2016"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8963:3472":{"id":"2:8963:3472","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:197:1948":{"id":"b:2:3198-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:362:1787":{"id":"b:2:2869-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13623:3687":{"id":"2:13623:3687","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16004:2621"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49866:3361","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13862:150":{"id":"2:13862:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13863:181","2:13864:150","2:13865:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:41:1752":{"id":"0:41:1752","crate_id":0,"name":"max_input_length","span":{"filename":"src/chunked_encoder.rs","begin":[69,0],"end":[81,1]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":"Calculate the longest input that can be encoded for the given output buffer size.\n\nIf the config requires padding, two bytes of buffer space will be set aside so that the last\nchunk of input can be encoded safely.\n\nThe input length will always be a multiple of 3 so that no encoding state has to be carried over\nbetween chunks.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["encoded_buf_len",{"kind":"primitive","inner":"usize"}],["padded",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:223:2014":{"id":"0:223:2014","crate_id":0,"name":"write_final_leftovers","span":{"filename":"src/write/encoder.rs","begin":[143,4],"end":[168,5]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"Write any remaining buffered data to the delegate writer.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13588:60028":{"id":"2:13588:60028","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,47],"end":[113,67]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine_string","name":"encode_engine_string","id":"0:469:1630","glob":false}},"a:2:3281:220-0:362:1787":{"id":"a:2:3281:220-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23217:4301":{"id":"2:23217:4301","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23854:4262","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23208:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:590:1542":{"id":"0:590:1542","crate_id":0,"name":"0","span":{"filename":"src/alphabet.rs","begin":[117,17],"end":[117,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"2:13617:4615":{"id":"2:13617:4615","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:170:1837":{"id":"0:170:1837","crate_id":0,"name":"encoder","span":{"filename":"src/write/encoder.rs","begin":[1,0],"end":[407,1]},"visibility":{"restricted":{"parent":"0:169:1626","path":"::write"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:194:1745","0:195:1953","0:196:1954","0:197:1948"],"is_stripped":false}},"0:4:1623":{"id":"0:4:1623","crate_id":0,"name":"chunked_encoder","span":{"filename":"src/chunked_encoder.rs","begin":[1,0],"end":[233,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:24:1741","0:27:1745","0:28:1748","0:41:1752","0:42:1775"],"is_stripped":false}},"1:5653:3713":{"id":"1:5653:3713","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5654:5377","1:5655:2330"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3198-0:564:2161":{"id":"b:2:3198-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:259:1837":{"id":"0:259:1837","crate_id":0,"name":"encoder","span":{"filename":"src/write/encoder_string_writer.rs","begin":[57,4],"end":[57,62]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"resolved_path","inner":{"name":"Utf8SingleCodeUnitWriter","id":"0:283:2089","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"a:2:9339:3104-0:126:1865":{"id":"a:2:9339:3104-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3775:4276":{"id":"2:3775:4276","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3342:3753":{"id":"2:3342:3753","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:288:1626":{"id":"0:288:1626","crate_id":0,"name":"write","span":{"filename":"src/write/encoder_string_writer.rs","begin":[125,4],"end":[133,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4748:2822":{"id":"1:4748:2822","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:53771","1:4750:2100","1:4751:53773","1:4753:2821","1:4754:53772","1:4756:53774","1:4757:4915"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3431:4219":{"id":"2:3431:4219","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:28:1748":{"id":"0:28:1748","crate_id":0,"name":"ChunkedEncoder","span":{"filename":"src/chunked_encoder.rs","begin":[21,0],"end":[24,1]},"visibility":"public","docs":"A base64 encoder that emits encoded bytes in chunks without heap allocation.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:31:1627","0:32:1751"],"impls":["0:33","a:2:3310:3162-0:28:1748","a:2:3269:211-0:28:1748","a:2:9340:3103-0:28:1748","a:2:9339:3104-0:28:1748","a:2:3281:220-0:28:1748","b:2:3198-0:28:1748","b:2:2872-0:28:1748","b:2:2869-0:28:1748","b:2:4002-0:28:1748","b:2:3202-0:28:1748","b:2:3213-0:28:1748","b:2:3208-0:28:1748"]}},"b:2:4002-0:89:1851":{"id":"b:2:4002-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13620:54287":{"id":"2:13620:54287","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2874:53769":{"id":"2:2874:53769","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13526:32437":{"id":"2:13526:32437","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16010:2626"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49841:3363","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:264:2091":{"id":"0:264:2091","crate_id":0,"name":"from_consumer","span":{"filename":"src/write/encoder_string_writer.rs","begin":[62,4],"end":[66,5]},"visibility":"public","docs":"Create a EncoderStringWriter that will append to the provided `StrConsumer`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["str_consumer",{"kind":"generic","inner":"S"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":"'e","mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:2125":{"id":"0:399:2125","crate_id":0,"name":"DecodeEstimate","span":{"filename":"src/engine/mod.rs","begin":[30,4],"end":[30,40]},"visibility":"default","docs":"The decode estimate used by this engine","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"DecodeEstimate","id":"0:406:2125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:84":{"id":"0:84","crate_id":0,"name":null,"span":{"filename":"src/display.rs","begin":[34,0],"end":[39,1]},"visibility":{"restricted":{"parent":"0:52:1624","path":"::display"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["0:88:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5741:3683":{"id":"1:5741:3683","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:7808","1:5743:54083","1:5744:6030","1:5745:57943","1:5746:4004","1:5747:4005","1:5748:57944","1:5749:1304","1:5750:57945","1:5751:57946","1:5752:57947","1:5753:57948","1:5754:57949","1:5755:57950","1:5756:57951","1:5757:57952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10620:146":{"id":"2:10620:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10621:652","2:10622:1626","2:10623:54095","2:10624:54096","2:10625:54097","2:10626:2302","2:10627:54098","2:10628:54099","2:10629:54100","2:10630:54101","2:10631:54102","2:10632:54103","2:10633:54104","2:10634:54105","2:10635:54106","2:10636:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:3162-0:362:1787":{"id":"a:2:3310:3162-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:524:1633":{"id":"0:524:1633","crate_id":0,"name":"decode_engine","span":{"filename":"src/decode.rs","begin":[104,0],"end":[111,1]},"visibility":"public","docs":"Decode from string reference as octets using the specified [Engine].\nReturns a `Result` containing a `Vec<u8>`.\n\n# Example\n\n```rust\nextern crate base64;\n\nfn main() {\n    let bytes = base64::decode_engine(\n        \"aGVsbG8gd29ybGR+Cg==\",\n        &base64::engine::DEFAULT_ENGINE,\n    ).unwrap();\n    println!(\"{:?}\", bytes);\n\n    // custom engine setup\n    let bytes_url = base64::decode_engine(\n        \"aGVsbG8gaW50ZXJuZXR-Cg\",\n        &base64::engine::fast_portable::FastPortable::from(\n            &base64::alphabet::URL_SAFE,\n            base64::engine::fast_portable::NO_PAD),\n\n    ).unwrap();\n    println!(\"{:?}\", bytes_url);\n}\n```","links":{"Engine":"0:397:1739"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}],["engine",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"E"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7780:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3401:3751":{"id":"2:3401:3751","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:60675":{"id":"5:6091:60675","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:3103-0:600:1636":{"id":"a:2:9340:3103-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:45":{"id":"0:45","crate_id":0,"name":null,"span":{"filename":"src/chunked_encoder.rs","begin":[90,0],"end":[94,1]},"visibility":{"restricted":{"parent":"0:4:1623","path":"::chunked_encoder"}},"docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:47:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3198-0:556:1788":{"id":"b:2:3198-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3201:3253":{"id":"2:3201:3253","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:141":{"id":"0:141","crate_id":0,"name":null,"span":{"filename":"src/read/decoder.rs","begin":[59,0],"end":[70,1]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Engine","id":"0:397:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"io::Read","id":"1:4666:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:145:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3213-0:89:1851":{"id":"b:2:3213-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:585:2339":{"id":"0:585:2339","crate_id":0,"name":"UnprintableByte","span":{"filename":"src/alphabet.rs","begin":[115,4],"end":[115,23]},"visibility":"default","docs":"All bytes must be printable (in the range `[32, 126]`).","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"primitive","inner":"u8"}]}},"5:6085:2517":{"id":"5:6085:2517","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:89:1851":{"id":"b:2:3202-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:73:1848":{"id":"b:2:4002-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:559":{"id":"0:559","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[236,9],"end":[236,14]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:560:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3384:4106":{"id":"2:3384:4106","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13525:32447":{"id":"2:13525:32447","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16010:2626"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49832:3348","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:28:1748":{"id":"b:2:3198-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4741:2819":{"id":"1:4741:2819","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:58114","1:4743:39899","1:4744:58115","1:4745:58116"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:430:1416":{"id":"0:430:1416","crate_id":0,"name":"try_from","span":{"filename":"src/alphabet.rs","begin":[102,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3182:227","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:609:1542":{"id":"0:609:1542","crate_id":0,"name":"0","span":{"filename":"src/decode.rs","begin":[27,22],"end":[27,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:3516:2071":{"id":"2:3516:2071","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13073:2748":{"id":"2:13073:2748","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13074:126","2:13075:2335"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:209:2000":{"id":"0:209:2000","crate_id":0,"name":"panicked","span":{"filename":"src/write/encoder.rs","begin":[82,4],"end":[82,18]},"visibility":{"restricted":{"parent":"0:170:1837","path":"::write::encoder"}},"docs":"panic safety: don't write again in destructor if writer panicked while we were writing to it","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:154:1907":{"id":"0:154:1907","crate_id":0,"name":"read_from_delegate","span":{"filename":"src/read/decoder.rs","begin":[114,4],"end":[125,5]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":"Read into the remaining space in the buffer after the current contents.\nMust only be called when there is space to read into in the buffer.\nReturns the number of bytes read.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:357:2302":{"id":"0:357:2302","crate_id":0,"name":"write_u64","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[430,0],"end":[432,1]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["value",{"kind":"primitive","inner":"u64"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:155:1911":{"id":"0:155:1911","crate_id":0,"name":"decode_to_buf","span":{"filename":"src/read/decoder.rs","begin":[131,4],"end":[159,5]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":"Decode the requested number of bytes from the b64 buffer into the provided buffer. It's the\ncaller's responsibility to choose the number of b64 bytes to decode correctly.\n\nReturns a Result with the number of decoded bytes written to `buf`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["num_bytes",{"kind":"primitive","inner":"usize"}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4078:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13521:54729":{"id":"2:13521:54729","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16010:2626"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13536:54402":{"id":"2:13536:54402","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:2753","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23545:4283":{"id":"2:23545:4283","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23546:1270","2:23547:1269","2:23548:1267","2:23549:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:22957:4291","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5008:3717":{"id":"1:5008:3717","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:3470","1:5010:56439"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:600:1636":{"id":"b:2:3213-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23169:16503":{"id":"2:23169:16503","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23170:7381","2:23171:58552","2:23172:58553"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23162:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2869-0:73:1848":{"id":"b:2:2869-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13574:2702":{"id":"2:13574:2702","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13134:2753","str::matches":"1:16010:2626","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2621"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49762:3355","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1075:3685":{"id":"1:1075:3685","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:3314","1:1077:4615","1:1078:54290","1:1079:54289","1:1080:54291","1:1081:54288","1:1082:54287"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:0:1640":{"id":"0:0:1640","crate_id":0,"name":"base64","span":{"filename":"src/lib.rs","begin":[1,0],"end":[124,26]},"visibility":"public","docs":"\n# Alphabets\n\nAn [alphabet::Alphabet] defines what ASCII symbols are used to encode to or decode from.\n\nConstants in [alphabet] like [alphabet::STANDARD] or [alphabet::URL_SAFE] provide commonly used\nalphabets, but you can also build your own custom `Alphabet` if needed.\n\n# Engines\n\nOnce you have an `Alphabet`, you can pick which `Engine` you want. A few parts of the public\nAPI provide a default, but otherwise the user must provide an `Engine` to use.\n\nSee [engine::Engine] for more on what engine to choose, or use [engine::DEFAULT_ENGINE] if you\njust want plain old standard base64 and don't have other requirements.\n\n## Config\n\nIn addition to an `Alphabet`, constructing an `Engine` also requires an [engine::Config]. Each\n`Engine` has a corresponding `Config` implementation.\n\n[encode()] and [decode()] use the standard alphabet and default engine in an RFC 4648 standard\nsetup.\n\n# Encoding\n\nSeveral different encoding functions are available to you depending on your desire for\nconvenience vs performance.\n\n| Function                | Output                       | Allocates                      |\n| ----------------------- | ---------------------------- | ------------------------------ |\n| `encode`                | Returns a new `String`       | Always                         |\n| `encode_engine`         | Returns a new `String`       | Always                         |\n| `encode_engine_string`     | Appends to provided `String` | Only if `String` needs to grow |\n| `encode_engine_slice`   | Writes to provided `&[u8]`   | Never - fastest                |\n\nAll of the encoding functions that take an `Engine` will pad as per the engine's config.\n\n# Decoding\n\nJust as for encoding, there are different decoding functions available.\n\n| Function                | Output                        | Allocates                      |\n| ----------------------- | ----------------------------- | ------------------------------ |\n| `decode`                | Returns a new `Vec<u8>`       | Always                         |\n| `decode_engine`         | Returns a new `Vec<u8>`       | Always                         |\n| `decode_engine_vec`     | Appends to provided `Vec<u8>` | Only if `Vec` needs to grow    |\n| `decode_engine_slice`   | Writes to provided `&[u8]`    | Never - fastest                |\n\nUnlike encoding, where all possible input is valid, decoding can fail (see [DecodeError]).\n\nInput can be invalid because it has invalid characters or invalid padding. (No padding at all is\nvalid, but excess padding is not.) Whitespace in the input is invalid, just like any other\nnon-base64 byte.\n\n# `Read` and `Write`\n\nTo decode a [std::io::Read] of b64 bytes, wrap a reader (file, network socket, etc) with\n[read::DecoderReader].\n\nTo write raw bytes and have them b64 encoded on the fly, wrap a [std::io::Write] with\n[write::EncoderWriter].\n\nThere is some performance overhead (15% or so) because of the necessary buffer shuffling --\nstill fast enough that almost nobody cares. Also, these implementations do not heap allocate.\n\n# `Display`\n\nSee [display] for how to transparently base64 data via a `Display` implementation.\n\n# Panics\n\nIf length calculations result in overflowing `usize`, a panic will result.\n\nThe `_slice` flavors of encode or decode will panic if the provided output slice is too small.","links":{"alphabet::URL_SAFE":"0:435:2358","read::DecoderReader":"0:126:1865","engine::DEFAULT_ENGINE":"0:408:1854","encode()":"0:464:598","display":"0:52:1624","std::io::Write":"1:4723:1984","DecodeError":"0:600:1636","alphabet::Alphabet":"0:564:2161","alphabet::STANDARD":"0:434:1785","alphabet":"0:409:1628","decode()":"0:522:532","engine::Config":"0:404:1738","write::EncoderWriter":"0:197:1948","engine::Engine":"0:397:1739","std::io::Read":"1:4666:1868"},"attrs":["#![deny(missing_docs, trivial_casts, trivial_numeric_casts,\nunused_extern_crates, unused_import_braces, unused_results,\nvariant_size_differences, warnings)]","#![forbid(unsafe_code)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:4:1623","0:52:1624","0:98:1625","0:169:1626","0:299:1627","0:409:1628","0:440:598","0:498:532","0:482","0:485","0:488","0:492","0:495","0:539","0:542","0:545","0:549","0:552","0:555:1638"],"is_stripped":false}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:3645","1:2575:2533","1:2576:2537","1:2577:3646"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:214:660":{"id":"0:214:660","crate_id":0,"name":"fmt","span":{"filename":"src/write/encoder.rs","begin":[86,4],"end":[95,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:565:2216":{"id":"0:565:2216","crate_id":0,"name":"symbols","span":{"filename":"src/alphabet.rs","begin":[23,4],"end":[23,43]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"64"}}},"b:2:2869-0:89:1851":{"id":"b:2:2869-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":["2:2871:2691"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:98:1625":{"id":"0:98:1625","crate_id":0,"name":"read","span":{"filename":"src/read/mod.rs","begin":[1,0],"end":[6,18]},"visibility":"public","docs":"Implementations of `io::Read` to transparently decode base64.","links":{},"attrs":["#[cfg(any(feature = \"std\", test))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:99:1864","0:166"],"is_stripped":false}},"2:23020:3680":{"id":"2:23020:3680","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23010:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13612:60036":{"id":"2:13612:60036","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16004:2621","self::pattern":"2:13134:2753"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:3104-0:564:2161":{"id":"a:2:9339:3104-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4002-0:126:1865":{"id":"b:2:4002-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:123:1745":{"id":"0:123:1745","crate_id":0,"name":"BUF_SIZE","span":{"filename":"src/read/decoder.rs","begin":[7,0],"end":[7,40]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"1024","value":"1_024usize","is_literal":true}},"b:2:3202-0:42:1775":{"id":"b:2:3202-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8475:136":{"id":"2:8475:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8477:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9339:3104":{"id":"2:9339:3104","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:396:2252":{"id":"0:396:2252","crate_id":0,"name":"NO_PAD","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[307,0],"end":[307,92]},"visibility":"public","docs":"Don't add padding when encoding.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"2:13164:3340":{"id":"2:13164:3340","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:73:1848":{"id":"a:2:3269:211-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:166":{"id":"0:166","crate_id":0,"name":null,"span":{"filename":"src/read/mod.rs","begin":[3,0],"end":[3,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::decoder::DecoderReader","name":"DecoderReader","id":"0:126:1865","glob":false}},"a:2:3310:3162-0:564:2161":{"id":"a:2:3310:3162-0:564:2161","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:556:1788":{"id":"b:2:2872-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:386:2183":{"id":"0:386:2183","crate_id":0,"name":"read_u64","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[220,0],"end":[222,1]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"u64"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:567":{"id":"0:567","crate_id":0,"name":null,"span":{"filename":"src/alphabet.rs","begin":[21,9],"end":[21,14]},"visibility":{"restricted":{"parent":"0:409:1628","path":"::alphabet"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:568:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2872-0:28:1748":{"id":"b:2:2872-0:28:1748","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ChunkedEncoder","id":"0:28:1748","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13593:60031":{"id":"2:13593:60031","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6790:3688":{"id":"1:6790:3688","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:7140"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22831:4290":{"id":"2:22831:4290","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22832:4282","2:22833:58577","2:22834:58817","2:22835:58818","2:22836:58819","2:22837:42888","2:22838:58820","2:22839:58821","2:22840:58822","2:22841:58823","2:22842:58824","2:22843:58825","2:22844:58826","2:22845:58827","2:22846:58828","2:22847:58829","2:22848:58651","2:22849:58830","2:22850:58831","2:22851:58832","2:22852:58833","2:22853:58578","2:22854:58579","2:22855:58580","2:22856:58581"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13586:60027":{"id":"2:13586:60027","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:3104-0:89:1851":{"id":"a:2:9339:3104-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3376:4102":{"id":"2:3376:4102","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:293":{"id":"0:293","crate_id":0,"name":null,"span":{"filename":"src/write/mod.rs","begin":[5,0],"end":[5,57]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::encoder_string_writer::EncoderStringWriter","name":"EncoderStringWriter","id":"0:255:1949","glob":false}},"a:2:9339:3104-0:42:1775":{"id":"a:2:9339:3104-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3368:2734":{"id":"2:3368:2734","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9339:3104-0:579:2336":{"id":"a:2:9339:3104-0:579:2336","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ParseAlphabetError","id":"0:579:2336","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:42:1775":{"id":"a:2:3269:211-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:220-0:126:1865":{"id":"a:2:3281:220-0:126:1865","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecoderReader","id":"0:126:1865","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:600:1636":{"id":"b:2:2872-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8960:2731":{"id":"2:8960:2731","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:432:660":{"id":"0:432:660","crate_id":0,"name":"fmt","span":{"filename":"src/alphabet.rs","begin":[122,4],"end":[129,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:341:2257":{"id":"0:341:2257","crate_id":0,"name":"INPUT_BLOCK_LEN","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[17,0],"end":[17,76]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"_","value":"32usize","is_literal":false}},"a:2:9339:3104-0:73:1848":{"id":"a:2:9339:3104-0:73:1848","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9340:3103","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:3104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Base64Display","id":"0:73:1848","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:283:2089":{"id":"0:283:2089","crate_id":0,"name":"Utf8SingleCodeUnitWriter","span":{"filename":"src/write/encoder_string_writer.rs","begin":[120,0],"end":[122,1]},"visibility":{"restricted":{"parent":"0:242:1947","path":"::write::encoder_string_writer"}},"docs":"A `Write` that only can handle bytes that are valid single-byte UTF-8 code units.\n\nThis is safe because we only use it when writing base64, which is always valid UTF-8.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"StrConsumer","id":"0:276:1950","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":false,"fields":["0:285:2092"],"impls":["a:2:3310:3162-0:283:2089","a:2:3269:211-0:283:2089","a:2:9340:3103-0:283:2089","a:2:9339:3104-0:283:2089","a:2:3281:220-0:283:2089","b:2:3198-0:283:2089","b:2:2872-0:283:2089","b:2:2869-0:283:2089","b:2:4002-0:283:2089","b:2:3202-0:283:2089","b:2:3213-0:283:2089","b:2:3208-0:283:2089","0:286"]}},"1:5789:3704":{"id":"1:5789:3704","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:56633"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13571:60023":{"id":"2:13571:60023","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:3341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310:1786":{"id":"0:310:1786","crate_id":0,"name":"fast_portable","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[1,0],"end":[307,92]},"visibility":"public","docs":"Provides the [FastPortable] engine and associated config types.","links":{"FastPortable":"0:362:1787"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:323:532","0:358","0:361:2163","0:362:1787","0:380:2169","0:383:2170","0:386:2183","0:556:1788","0:395:1789","0:396:2252"],"is_stripped":false}},"1:6959:3693":{"id":"1:6959:3693","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6960:56567"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:521:2537":{"id":"0:521:2537","crate_id":0,"name":"cause","span":{"filename":"src/decode.rs","begin":[54,4],"end":[56,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"error::Error","id":"1:2572:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:561":{"id":"0:561","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[236,16],"end":[236,20]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:97:1743":{"id":"0:97:1743","crate_id":0,"name":"write_encoded_bytes","span":{"filename":"src/display.rs","begin":[48,4],"end":[53,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["encoded",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:24:1741","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:438:2369":{"id":"0:438:2369","crate_id":0,"name":"IMAP_MUTF7","span":{"filename":"src/alphabet.rs","begin":[164,0],"end":[166,2]},"visibility":"public","docs":"The alphabet used in IMAP-modified UTF-7 (uses `+` and `,`).\n\nSee [RFC 3501](https://tools.ietf.org/html/rfc3501#section-5.1.3)","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"a:2:3281:220-0:42:1775":{"id":"a:2:3281:220-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3310:3162-0:600:1636":{"id":"a:2:3310:3162-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3104:2865":{"id":"2:3104:2865","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4051:3638":{"id":"2:4051:3638","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:3646"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:434:1785":{"id":"0:434:1785","crate_id":0,"name":"STANDARD","span":{"filename":"src/alphabet.rs","begin":[138,0],"end":[140,2]},"visibility":"public","docs":"The standard alphabet (uses `+` and `/`).\n\nSee [RFC 3548](https://tools.ietf.org/html/rfc3548#section-3).","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"Alphabet","id":"0:564:2161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:611":{"id":"0:611","crate_id":0,"name":null,"span":{"filename":"src/decode.rs","begin":[13,9],"end":[13,14]},"visibility":{"restricted":{"parent":"0:498:532","path":"::decode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:612:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46111:3639","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:556:1788":{"id":"b:5:787-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:3314","5:790:3315","5:791:3316"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:351:2273":{"id":"0:351:2273","crate_id":0,"name":"decode_chunk","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[316,0],"end":[396,1]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":"Decode 8 bytes of input into 6 bytes of output. 8 bytes of output will be written, but only the\nfirst 6 of those contain meaningful data.\n\n`input` is the bytes to decode, of which the first 8 bytes will be processed.\n`index_at_start_of_input` is the offset in the overall input (used for reporting errors\naccurately)\n`decode_table` is the lookup table for the particular base64 alphabet.\n`output` will have its first 8 bytes overwritten, of which only the first 6 are valid decoded\ndata.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["index_at_start_of_input",{"kind":"primitive","inner":"usize"}],["decode_table",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"array","inner":{"type":{"kind":"primitive","inner":"u8"},"len":"256"}}}}],["output",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}},{"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:4783:4266":{"id":"2:4783:4266","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:3262","2:4785:59304","2:4786:3264"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13500:60014":{"id":"2:13500:60014","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:339:2255":{"id":"0:339:2255","crate_id":0,"name":"DECODED_CHUNK_SUFFIX","span":{"filename":"src/engine/fast_portable/decode.rs","begin":[12,0],"end":[12,38]},"visibility":{"restricted":{"parent":"0:323:532","path":"::engine::fast_portable::decode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"2","value":"2usize","is_literal":true}},"5:6088:60674":{"id":"5:6088:60674","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[119,45],"end":[119,56]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::decode::DecodeError","name":"DecodeError","id":"0:600:1636","glob":false}},"0:395:1789":{"id":"0:395:1789","crate_id":0,"name":"PAD","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[304,0],"end":[304,62]},"visibility":"public","docs":"Include padding bytes when encoding.\n\nThis is the standard per the base64 RFC, but consider using [NO_PAD] instead as padding serves\nlittle purpose in practice.","links":{"NO_PAD":"0:396:2252"},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:2872-0:255:1949":{"id":"b:2:2872-0:255:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:3500","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderStringWriter","id":"0:255:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"items":["2:2874:53769"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:3162-0:556:1788":{"id":"a:2:3310:3162-0:556:1788","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:617:604":{"id":"0:617:604","crate_id":0,"name":"eq","span":{"filename":"src/decode.rs","begin":[13,23],"end":[13,32]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13568:60022":{"id":"2:13568:60022","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:220-0:600:1636":{"id":"a:2:3281:220-0:600:1636","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"DecodeError","id":"0:600:1636","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13597:60033":{"id":"2:13597:60033","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16004:2621","self::pattern":"2:13134:2753"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:2742","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:135:1889":{"id":"0:135:1889","crate_id":0,"name":"b64_len","span":{"filename":"src/read/decoder.rs","begin":[44,4],"end":[44,18]},"visibility":{"restricted":{"parent":"0:99:1864","path":"::read::decoder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:3423:4215":{"id":"2:3423:4215","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:362:1787":{"id":"b:2:3198-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3253"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:22920:4292":{"id":"2:22920:4292","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22921:58577","2:22922:1227","2:22923:1228","2:22924:58578","2:22925:58579","2:22926:58580","2:22927:58581","2:22928:58582","2:22929:58583","2:22930:58584"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3681","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:99:1864":{"id":"0:99:1864","crate_id":0,"name":"decoder","span":{"filename":"src/read/decoder.rs","begin":[1,0],"end":[293,1]},"visibility":{"restricted":{"parent":"0:98:1625","path":"::read"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:123:1745","0:124:1869","0:125:1870","0:126:1865"],"is_stripped":false}},"a:2:3281:220-0:197:1948":{"id":"a:2:3281:220-0:197:1948","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'e","kind":{"lifetime":{"outlives":[]}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EncoderWriter","id":"0:197:1948","args":{"angle_bracketed":{"args":[{"lifetime":"'e"},{"type":{"kind":"generic","inner":"E"}},{"type":{"kind":"generic","inner":"W"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3269:211-0:89:1851":{"id":"a:2:3269:211-0:89:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"'b","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FormatterSink","id":"0:89:1851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"lifetime":"'b"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:371:1738":{"id":"0:371:1738","crate_id":0,"name":"Config","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[38,4],"end":[38,37]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:3435:4221":{"id":"2:3435:4221","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:3162-0:42:1775":{"id":"a:2:3310:3162-0:42:1775","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:3162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"StringSink","id":"0:42:1775","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:558:2214":{"id":"0:558:2214","crate_id":0,"name":"decode_allow_trailing_bits","span":{"filename":"src/engine/fast_portable/mod.rs","begin":[239,4],"end":[239,36]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:3358:4095":{"id":"2:3358:4095","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:397:1739":{"id":"0:397:1739","crate_id":0,"name":"Engine","span":{"filename":"src/engine/mod.rs","begin":[26,0],"end":[71,1]},"visibility":"public","docs":"An `Engine` provides low-level encoding and decoding operations that all other higher-level parts of the API use. Users of the library will generally not need to implement this.\n\nDifferent implementations offer different characteristics. The library currently ships with\na general-purpose [FastPortable] impl that offers good speed and works on any CPU, with more choices\ncoming later, like a constant-time one when side channel resistance is called for, and vendor-specific vectorized ones for more speed.\n\nSee [DEFAULT_ENGINE] if you just want standard base64. Otherwise, when possible, it's\nrecommended to store the engine in a `const` so that references to it won't pose any lifetime\nissues, and to avoid repeating the cost of engine setup.","links":{"FastPortable":"0:362:1787","DEFAULT_ENGINE":"0:408:1854"},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:398:1738","0:399:2125","0:400:598","0:401:2134","0:402:532","0:403:1753"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:370"]}},"5:789:3314":{"id":"5:789:3314","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:3202-0:362:1787":{"id":"b:2:3202-0:362:1787","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortable","id":"0:362:1787","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/engine/fast_portable/mod.rs","begin":[287,0],"end":[292,1]},"visibility":{"restricted":{"parent":"0:310:1786","path":"::engine::fast_portable"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"FastPortableConfig","id":"0:556:1788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:392:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5727:3700":{"id":"1:5727:3700","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728:6030","1:5729:56126","1:5730:56127"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:485":{"id":"0:485","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[113,32],"end":[113,45]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"import","inner":{"source":"crate::encode::encode_engine","name":"encode_engine","id":"0:466:1629","glob":false}},"2:8488:3164":{"id":"2:8488:3164","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8490:2588","2:8492:3260","2:8493:3261"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:518:660":{"id":"0:518:660","crate_id":0,"name":"fmt","span":{"filename":"src/decode.rs","begin":[31,4],"end":[41,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10372:109":{"id":"2:10372:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10373:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:464:598":{"id":"0:464:598","crate_id":0,"name":"encode","span":{"filename":"src/encode.rs","begin":[24,0],"end":[26,1]},"visibility":"public","docs":"Encode arbitrary octets as base64 using the [default engine](DEFAULT_ENGINE).\nReturns a `String`.\n\n# Example\n\n```rust\nextern crate base64;\n\nfn main() {\n    let b64 = base64::encode(b\"hello world\");\n    println!(\"{}\", b64);\n}\n```","links":{"DEFAULT_ENGINE":"0:408:1854"},"attrs":["#[cfg(any(feature = \"alloc\", feature = \"std\", test))]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["input",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3166:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2691"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:2102","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:3247","2:2960:1761","2:2961:3252"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"paths":{"17:13180:6462":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:51865:4307":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:88:39793":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:1488:3861":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:11434:6032":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:2912:5223":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:10827:5371":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"5:7824:5527":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"0:404:1738":{"crate_id":0,"path":["base64","engine","Config"],"kind":"trait"},"17:1311:5399":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:7975:5543":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"5:7212:2728":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12582:6265":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:11750:6100":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:5407:4938":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:12262:3780":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:50274:3333":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"5:3044:59863":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:53225:4320":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:4378:2895":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:15754:5571":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:52892:4348":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10377:5352":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:3341:3948":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:16014:2628":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:12124:3768":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:6031:8150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:3041:5226":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:4127:7757":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:13862:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:10061:5935":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:4397:3967":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:12275:6199":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:6004:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:299:5830":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:15483:54075":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:50282:3335":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"5:3772:3471":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:11479:3694":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:10331:5316":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:7828:4075":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:2162:2728":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:6764:2808":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:12138:3771":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:15130:3853":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"12:2269:3870":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:6976:8294":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:3368:2734":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:10710:2823":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:10684:12250":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"0:195:1953":{"crate_id":0,"path":["base64","write","encoder","MAX_INPUT_LEN"],"kind":"constant"},"17:13221:6475":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:49780:3356":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:5185:2785":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:2751:3633":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:15391:3982":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:12699:6289":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:45892:4249":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"17:13532:6554":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:4230:7780":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:11186:6018":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:15201:3791":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:8182:2850":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:6181:8218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13986:6688":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12051:6162":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:2773:5247":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:4732:56463":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:7264:5065":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:10874:2836":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:9649:5921":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:10353:5354":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:5790:4962":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:7629:3838":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:9162:5340":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"18:713:3244":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:51126:7037":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:3040:8296":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:11402:3719":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:2188:3746":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:14043:58937":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:11005:3681":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:4028:7708":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:3933:7654":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:7024:5269":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:4321:7806":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:47085:7019":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:4208:7778":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:11218:3471":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"18:721:5808":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:15092:3780":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"16:7226:5122":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:8929:47048":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:12137:5540":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"1:2171:3743":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:23162:3681":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:12252:3884":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:37731:3244":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:50337:4545":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"2:3389:4205":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:50055:4176":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:47778:2895":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:10566:3903":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:3320:5285":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:4135:7762":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:10106:5393":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:1195:61151":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:13394:6515":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:28134:4252":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:3970:5513":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:15975:11244":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"12:2059:3744":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:9467:5738":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:2594:5730":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"17:11947:6143":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:11696:6094":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:10081:5288":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:12343:6212":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"18:668:5425":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:3427:4217":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:2793:3634":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:9343:3677":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:22884:4278":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:4670:2808":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:12227:4016":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:4332:7812":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:46835:4133":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:13159:3341":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:12004:3842":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:9809:61201":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:4885:4413":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:1663:3862":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:1694:7582":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"0:4:1623":{"crate_id":0,"path":["base64","chunked_encoder"],"kind":"module"},"1:7677:3841":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:13318:6494":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:6319:4001":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:5505:4946":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"18:695:5426":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:5237:7957":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:14210:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"5:374:4656":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:3429:4976":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:51917:7042":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:10844:5316":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:14601:3939":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:11434:4003":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:8463:2893":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:3648:2740":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13912:6673":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:5472:4944":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:7649:3839":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"9:809:3821":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"12:183:4873":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:8250:2744":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:49385:4477":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:3505:2829":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:12659:6284":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:1493:3862":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:49365:4475":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:1597:3470":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:50167:7031":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"16:4614:5697":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:51792:4321":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:1501:3864":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:3366:1867":{"crate_id":1,"path":["std","io"],"kind":"module"},"0:276:1950":{"crate_id":0,"path":["base64","write","encoder_string_writer","StrConsumer"],"kind":"trait"},"0:601:1915":{"crate_id":0,"path":["base64","decode","DecodeError","InvalidByte"],"kind":"variant"},"5:1215:4670":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:571:7433":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:3365:4972":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:45981:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"0:242:1947":{"crate_id":0,"path":["base64","write","encoder_string_writer"],"kind":"module"},"2:24749:3930":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"12:933:3864":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:48916:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:50133:4179":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:47076:3484":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:3406:3752":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"5:8379:2724":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:2310:4719":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:2543:5310":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"0:600:1636":{"crate_id":0,"path":["base64","decode","DecodeError"],"kind":"enum"},"1:4432:2844":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:46553:4533":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:1091:5513":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13685:6618":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:47980:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:53576:7074":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"0:169:1626":{"crate_id":0,"path":["base64","write"],"kind":"module"},"17:10950:6005":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:13465:6535":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:10975:6007":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:9133:47053":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:6937:3674":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"0:555:1638":{"crate_id":0,"path":["base64","PAD_BYTE"],"kind":"constant"},"17:11231:5341":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:6413:4884":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:13282:6489":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:1011:3470":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:10558:5951":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:10611:5957":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:13627:6576":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:9861:5561":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:7333:5069":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:12598:6269":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:1694:4668":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:5030:2782":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"5:2553:4676":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:38951:3242":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"12:2066:3745":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:2062:2808":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:7786:5060":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"9:722:4737":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"0:28:1748":{"crate_id":0,"path":["base64","chunked_encoder","ChunkedEncoder"],"kind":"struct"},"17:11254:5339":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:16019:2633":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:1606:7515":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:23951:4505":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:1428:3471":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:11232:3724":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:10375:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:8239:58367":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"1:13939:54217":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:13865:6659":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"0:339:2255":{"crate_id":0,"path":["base64","engine","fast_portable","decode","DECODED_CHUNK_SUFFIX"],"kind":"constant"},"12:1203:4867":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:14550:3741":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:12037:4485":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"16:7279:5271":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:16025:2639":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:547:4958":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:1526:7472":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:2283:4240":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:49516:3346":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:23217:4301":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:15498:4896":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:3717:4531":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:3038:3314":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:7174:5117":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:4434:2845":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:10646:11239":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:1415:3470":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:1721:7595":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:9404:5825":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:4350:5690":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:8289:3927":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"2:48657:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:3297:3241":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:820:5561":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"12:787:3862":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:23850:3681":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:10957:3803":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:12155:6183":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:11847:6131":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:2794:4975":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"0:475:2420":{"crate_id":0,"path":["base64","encode","encode_with_padding"],"kind":"function"},"6:1537:7477":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:4532:7898":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:10095:5392":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:1651:3872":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"6:4055:7720":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:9210:47054":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:1524:3867":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:4198:7777":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:49938:4167":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:4230:5688":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:6208:5097":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:53351:4305":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:13359:5726":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"17:8954:5306":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:49558:2827":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:11428:3983":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:1704:7588":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:5039:4416":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"0:423:2318":{"crate_id":0,"path":["base64","alphabet","ALPHABET_SIZE"],"kind":"constant"},"12:869:2728":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:1075:3685":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:10458:5875":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:10635:5959":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:5775:3702":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:3200:2816":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"12:2412:7383":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:14242:2842":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"6:3877:7616":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:6893:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:10059:4454":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:12771:6024":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:10660:4150":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:5456:4941":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:12076:56122":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"12:777:2895":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:50535:3636":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:11077:1741":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:6922:8284":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:10372:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:10705:4679":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:9766:5559":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:11738:6099":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:1621:7527":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:3775:4276":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:1939:2892":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:11499:6051":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:46826:4132":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:51738:4314":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:4510:2842":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:10788:5993":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:13453:6529":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:13386:6513":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:4416:7850":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:24647:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"16:5580:4950":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"0:383:2170":{"crate_id":0,"path":["base64","engine","fast_portable","decode_table"],"kind":"function"},"17:11572:6068":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:7507:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"0:353:2260":{"crate_id":0,"path":["base64","engine","fast_portable","decode","num_chunks"],"kind":"function"},"17:9839:5316":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:6202:8232":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:4394:3966":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:11250:3725":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"16:7514:5070":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:7870:5056":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:4922:5707":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:12004:4484":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:10804:3937":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:50503:4494":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:11457:8150":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:1482:2892":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:7761:5127":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:12171:3773":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:1634:7534":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12327:6207":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:46686:2823":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"12:815:3863":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:13356:6508":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:8973:3809":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"9:27:4785":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"18:812:5412":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:15235:3798":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"0:299:1627":{"crate_id":0,"path":["base64","engine"],"kind":"module"},"12:1703:4880":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:696:3902":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:13205:6472":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:1132:3640":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:13331:6500":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:7823:5061":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"0:439:2373":{"crate_id":0,"path":["base64","alphabet","BIN_HEX"],"kind":"constant"},"2:12594:1340":{"crate_id":2,"path":["core","str"],"kind":"module"},"10:0:2595":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:923:4707":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:9849:61197":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:8130:2728":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:7420:5071":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"16:6366:4885":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:8438:4127":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:6111:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:15986:54067":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:13961:3843":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:13587:54218":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:48891:3877":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:16008:2624":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:5376:3982":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:7406:5053":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:52259:4342":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:8176:4625":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:1712:7589":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:6265:8257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:13054:6419":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:49726:3358":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"0:607:1918":{"crate_id":0,"path":["base64","decode","DecodeError","InvalidLastSymbol"],"kind":"variant"},"5:6973:1502":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"6:6853:8276":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:48928:3821":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:14103:5567":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"6:1764:7610":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:11414:4055":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:4607:2851":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:52534:4304":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:7250:5124":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:23744:3679":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:3559:4248":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"0:341:2257":{"crate_id":0,"path":["base64","engine","fast_portable","decode","INPUT_BLOCK_LEN"],"kind":"constant"},"2:5165:2783":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:5584:11245":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:46139:4231":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:13154:6456":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"1:12116:3470":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:9600:61205":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"19:117:7328":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"16:5561:4949":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:3516:2071":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:52021:7045":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"6:6668:8266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:4270:4002":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:4671:5699":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"0:354:2274":{"crate_id":0,"path":["base64","engine","fast_portable","decode","decode_chunk_precise"],"kind":"function"},"16:3018:5225":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"0:408:1854":{"crate_id":0,"path":["base64","engine","DEFAULT_ENGINE"],"kind":"constant"},"15:248:4888":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:6934:8286":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:4454:7868":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:10420:5347":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:3981:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"16:3145:5236":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"5:5889:5525":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"2:56063:4258":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"17:13098:6450":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:10477:5312":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:12456:6247":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:5384:4937":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:46583:4535":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:6269:5100":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:56460:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:5727:3700":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:4346:7817":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:3274:2102":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12262:6198":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:52685:4328":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"5:8160:2895":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"0:464:598":{"crate_id":0,"path":["base64","encode","encode"],"kind":"function"},"0:337:2253":{"crate_id":0,"path":["base64","engine","fast_portable","decode","INPUT_CHUNK_LEN"],"kind":"constant"},"2:5408:2730":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:11779:6111":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:11193:3721":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"2:48645:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"16:3800:5686":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:13574:6565":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:7894:5086":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:50082:4177":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:8203:2895":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:11539:6062":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"0:357:2302":{"crate_id":0,"path":["base64","engine","fast_portable","decode","write_u64"],"kind":"function"},"2:12852:3370":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:4741:2819":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:49296:4470":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"12:1147:3871":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:10866:3960":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:14322:2889":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"0:406:2125":{"crate_id":0,"path":["base64","engine","DecodeEstimate"],"kind":"trait"},"5:1618:2895":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:12203:3775":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:6554:5106":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:10236:5309":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:14609:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:4474:7875":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:15970:8523":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:3743:5367":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:51619:4338":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:14643:57991":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:14804:5729":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:7117:3091":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:6780:5111":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:10435:5944":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:12917:6309":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:5632:4952":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:51691:4326":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:7379:2895":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:13272:6488":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:56434:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13884:6664":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:12408:6242":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"18:858:5416":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:13799:6642":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:16002:2619":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12521:6256":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:46408:4355":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"12:940:3865":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:10304:5291":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:6391:5102":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:11268:3784":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"5:2330:4672":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:9999:660":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:24115:4396":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:7158:5116":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:11354:3983":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:10393:2771":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"0:588:2340":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","ReservedByte"],"kind":"variant"},"2:13938:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:11491:3353":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:56499:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13306:6491":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:6591:5108":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:13540:6557":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:12480:6250":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:12168:5966":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:1236:5835":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:3896:7626":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:4362:7826":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:14:1626":{"crate_id":2,"path":["core","write"],"kind":"macro"},"0:123:1745":{"crate_id":0,"path":["base64","read","decoder","BUF_SIZE"],"kind":"constant"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:12023:3844":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"5:3048:59866":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:11082:5305":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:1149:7088":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:13153:3342":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:24919:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:46746:4120":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:50440:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:11588:6073":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"5:8106:2890":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:6132:8182":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:5544:8085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:10565:3681":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:16016:2630":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:4965:2780":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:7467:5051":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:15019:3844":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"11:46:7385":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"17:13760:6631":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12373:6231":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:46807:4130":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:9476:5827":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:15122:7146":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:50278:3334":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:13429:6521":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"14:194:45395":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:7205:5120":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:7927:3926":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"2:9340:3103":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:2889:5241":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:32414:2887":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"0:438:2369":{"crate_id":0,"path":["base64","alphabet","IMAP_MUTF7"],"kind":"constant"},"2:11014:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:1619:3869":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:8967:4202":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:10864:5996":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:7933:4234":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:4356:7823":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:11001:6009":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:57795:7087":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"17:12741:6293":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:13780:6637":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:5308:7993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:11363:4468":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:7255:7100":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4340:7815":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:11297:8379":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:49866:3361":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:6964:8292":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"0:283:2089":{"crate_id":0,"path":["base64","write","encoder_string_writer","Utf8SingleCodeUnitWriter"],"kind":"struct"},"14:189:5712":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"12:880:2892":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"12:2392:7380":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:7303:5125":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:11086:2818":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:11328:6024":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:6964:3100":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:11143:2827":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:47762:3470":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:6247:8254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:2916:415":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:9551:5338":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:6152:5049":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:7795:3849":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:24613:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:5295:45472":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4142:7764":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:3882:2838":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:49528:2745":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"18:783:5806":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:3488:2892":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:3960:7677":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:49662:3354":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:8523:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:2433:7097":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:53535:7071":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:16018:2632":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:5797:3706":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:634:7468":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:11519:4472":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"12:472:61189":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:6662:8264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:14034:3842":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"5:3341:4648":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"18:745:61208":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:5416:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:4008:5838":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:13746:6625":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:3218:5229":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:7663:3840":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:51435:4317":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:13898:6666":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:16004:2621":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:10389:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:12537:6258":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"0:42:1775":{"crate_id":0,"path":["base64","chunked_encoder","StringSink"],"kind":"struct"},"17:10160:5938":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:539:7410":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:10655:3749":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:49990:4174":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:1438:2895":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:13119:6455":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:5183:7931":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:47094:2851":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:6424:5103":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:4308:7802":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:11199:6020":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:50154:4181":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"18:767:5817":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:13733:6619":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:49138:4613":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:46477:4594":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:15229:3797":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:13370:6510":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:11482:5714":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:46146:2781":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"16:5360:4936":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:672:40193":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:7928:4230":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:6695:8161":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:10001:47101":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:4051:3638":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:13772:6634":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:6126:8181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"9:0:2594":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:10377:5739":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:12773:7134":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"2:22663:59168":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:4160:7775":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:11317:54076":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:10701:5729":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:5753:4960":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:47770:3471":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:50290:3337":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:4088:7736":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:2843:5221":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:1507:3865":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:48190:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:12234:6193":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:9886:5925":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:9659:61199":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:46661:4114":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:13520:6551":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:9943:61198":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:4116:7752":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:11098:2820":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:46566:4534":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:1642:3871":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13924:6675":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:10543:5948":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:15474:7149":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:46191:4374":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:9971:61196":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:5363:8030":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:46507:4596":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"12:2280:3871":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"12:971:3867":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12195:6188":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"9:900:7386":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:4790:5703":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"12:1162:4865":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"14:56:5714":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:9718:3975":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"16:5717:4956":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:16024:2638":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:10814:5370":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"0:351:2273":{"crate_id":0,"path":["base64","engine","fast_portable","decode","decode_chunk"],"kind":"function"},"1:2456:7098":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:50144:4180":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"5:8330:4658":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:5433:4940":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:23014:3678":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"6:4081:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:5421:4939":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"9:234:4761":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"18:637:5806":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:9759:5923":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:32480:59079":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"1:3351:3953":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:24186:4392":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:50119:4178":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:51381:4325":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:15331:3726":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:2508:4267":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:3423:4215":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:6859:3669":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:46048:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:2314:5353":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"18:621:5805":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:9060:4017":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:8263:3876":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:10587:3911":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:4287:7790":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:10385:2768":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"18:152:53342":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:5785:3703":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:50294:3338":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:1497:3863":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:13488:6540":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:8121:4709":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:13609:6573":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:13377:6512":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"6:6905:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:894:3906":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:11604:6074":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:15412:3989":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:12712:6290":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"0:472:1631":{"crate_id":0,"path":["base64","encode","encode_engine_slice"],"kind":"function"},"1:5981:4057":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:15509:4896":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:4471:2846":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:11809:6123":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"16:5766:4961":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:4464:7874":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:1544:7480":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:4748:2822":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13402:6517":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:53515:7069":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"12:432:4870":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:11360:3984":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:5475:8071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:618:7458":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:3759:3470":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:52181:4335":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:7332:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:4955:5708":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:9339:3104":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:607:5833":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:2200:5515":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:7441:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"12:1682:4879":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:52228:4339":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:13446:6528":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:16021:2635":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:13620:6574":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:5452:8065":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:16020:2634":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:11678:6085":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:49534:3347":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:10266:5350":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"12:399:4871":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:5373:3981":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:10816:3939":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:14633:2818":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:14821:3846":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:4296:7795":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:4315:7803":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:1558:7485":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8488:3770":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"7:85:44726":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:51817:4303":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:3435:4221":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:13923:3841":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"0:585:2339":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","UnprintableByte"],"kind":"variant"},"1:4032:3805":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:11378:5298":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:5735:3701":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"1:14239:2846":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:5231:5711":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:4110:7749":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"0:386:2183":{"crate_id":0,"path":["base64","engine","fast_portable","read_u64"],"kind":"function"},"2:10322:1984":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:8803:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:10489:5317":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:6101:5045":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:3194:3938":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:48148:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:5387:8042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:3376:4102":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:9368:5824":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:13819:6645":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:5146:7905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"4:0:2592":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:7615:3837":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:7477:5072":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:46631:5534":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:5290:7981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:6082:3991":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"18:838:3342":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:48375:2769":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:48715:2765":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"0:469:1630":{"crate_id":0,"path":["base64","encode","encode_engine_string"],"kind":"function"},"2:5605:4285":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:14570:8385":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:22831:4290":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"11:0:2596":{"crate_id":11,"path":["adler"],"kind":"module"},"2:49680:3353":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"18:775:5806":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"5:7257:5513":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:24022:4506":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"9:603:8515":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:49501:2746":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:9729:61203":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:5579:8110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:3364:4098":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:49841:3363":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:4400:3968":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:53146:4336":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:3506:5233":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:14952:5569":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:8115:2895":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:12132:2895":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:6491:5104":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:4448:5693":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:3342:3753":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:22933:3681":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:51965:7043":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:7295:5067":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:5156:4422":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:5741:3683":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:24201:6984":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"6:3993:7690":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:32379:2886":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"14:250:6878":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:3772:5685":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"0:196:1954":{"crate_id":0,"path":["base64","write","encoder","MIN_ENCODE_CHUNK_SIZE"],"kind":"constant"},"17:13163:6460":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:46878:2824":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:8680:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:24783:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:12756:6297":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:7792:3847":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:47103:7020":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:46677:4113":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:46755:7016":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:7453:5050":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:4306:3471":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:24209:6985":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:51412:4313":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"0:99:1864":{"crate_id":0,"path":["base64","read","decoder"],"kind":"module"},"0:361:2163":{"crate_id":0,"path":["base64","engine","fast_portable","INVALID_VALUE"],"kind":"constant"},"6:6226:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:1588:7505":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:9461:2742":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:0:2601":{"crate_id":17,"path":["object"],"kind":"module"},"2:50302:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:1017:3927":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:13564:6562":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"18:661:5424":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:3325:3943":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:12735:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:11100:5343":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:4417:5692":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"14:11:5712":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:47658:3100":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:6518:5105":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"0:437:2365":{"crate_id":0,"path":["base64","alphabet","BCRYPT"],"kind":"constant"},"2:3758:4253":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:23208:3681":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:12221:6191":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:5226:7949":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:3894:4663":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:6211:8235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:49857:3360":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:11970:6150":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:5271:7979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:4506:5695":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:24302:4563":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:53599:7075":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:11794:6117":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:5298:7986":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:45940:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:6110:5088":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:601:7450":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:12552:6262":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:9065:47051":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:4704:5700":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:11409:4052":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:4215:2728":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:13497:6543":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:6697:8163":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"17:10253:5351":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:23219:4282":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:10962:6006":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:6682:5063":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:45864:3473":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:533:7408":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"18:645:5423":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:4402:7845":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:3352:4092":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"18:755:61206":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:6807:5112":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"15:230:4887":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:12671:6285":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:6583:4123":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:8639:4008":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:12467:6248":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:11243:2827":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:432:2743":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:510:5831":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"18:867:5417":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:47718:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"0:395:1789":{"crate_id":0,"path":["base64","engine","fast_portable","PAD"],"kind":"constant"},"16:6744:5260":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:10117:5394":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"5:5875:5522":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:49708:3357":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"18:651:5420":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:24249:39208":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:51769:4318":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:5485:8073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:2183:3745":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:7111:5527":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:8193:5543":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:46857:4135":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:12494:6252":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:13847:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:1518:3866":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"12:979:3868":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:48106:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:15072:8387":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:6240:8251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"0:73:1848":{"crate_id":0,"path":["base64","display","Base64Display"],"kind":"struct"},"16:7216:5121":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:7884:5057":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:11615:3823":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:5927:4967":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"12:1103:3869":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:13659:3807":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:50458:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"16:6605:5064":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:6032:4980":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:6787:3740":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:11015:6010":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:11286:3364":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:2777:4675":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:1576:7496":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:10801:5995":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:11118:47056":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:47114:6970":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:13164:3340":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"5:8298:4657":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"9:996:4802":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:11436:4469":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:3740:4111":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"0:524:1633":{"crate_id":0,"path":["base64","decode","decode_engine"],"kind":"function"},"2:50270:3332":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:4425:7853":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:13348:6505":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:8963:3472":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:46379:4352":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:1152:7090":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"6:5201:7944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:3039:59864":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:14588:7145":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:56421:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:12158:3772":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:3337:2733":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11822:6127":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:1041:3738":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:13582:6566":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:12581:4608":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:57774:7086":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:545:7413":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:12242:3892":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:3287:5232":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:6959:3693":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:51541:4346":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:49961:4168":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:11194:3470":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"0:434:1785":{"crate_id":0,"path":["base64","alphabet","STANDARD"],"kind":"constant"},"2:2269:4236":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:51588:4334":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"18:611:5421":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"0:170:1837":{"crate_id":0,"path":["base64","write","encoder"],"kind":"module"},"5:6954:4620":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:48368:2768":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"18:821:5413":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:2194:6962":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"14:231:2727":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:48612:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"1:11575:3821":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:4734:5701":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:50517:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:5672:4953":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:1633:3870":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"0:362:1787":{"crate_id":0,"path":["base64","engine","fast_portable","FastPortable"],"kind":"struct"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:48022:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:23010:3681":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:8488:3164":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:10938:6004":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:12795:6307":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"14:244:6876":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:14159:4495":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:14149:4268":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:13897:58936":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:46111:3639":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"0:197:1948":{"crate_id":0,"path":["base64","write","encoder","EncoderWriter"],"kind":"struct"},"2:49356:4474":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:12040:6161":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:1457:3871":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:51454:7040":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:11358:5299":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:4066:3637":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"6:6054:8168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:13477:6536":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:9280:5914":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:2502:2317":{"crate_id":1,"path":["std","error"],"kind":"module"},"12:2404:61193":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"5:6688:4644":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:13547:6558":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"12:764:3471":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:13422:3996":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:1600:7513":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:3080:482":{"crate_id":2,"path":["core","convert"],"kind":"module"},"17:9440:5826":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:51276:4345":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:46423:4598":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:1674:3863":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:6685:8275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:10452:5564":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:16029:2643":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:5789:3704":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:22644:59069":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:7286:7100":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:24579:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:1530:3868":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:5273:4978":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:9689:61204":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:5328:8009":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:3682:2830":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:6790:3688":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:6024:8146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:13041:6412":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"12:2036:2895":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:12605:1778":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:5285:7980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:6021:5220":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:12742:3937":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:5815:4963":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:4067:7725":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:6150:8192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"18:897:5419":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:6928:8285":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:10321:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"16:3264:5231":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"9:1020:4803":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:22684:59163":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:1157:11242":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:53398:4323":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:16017:2631":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"5:1653:3861":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11070:2850":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:11120:2823":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:8003:4203":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:50547:3635":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:53691:7079":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:24885:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:11640:6081":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"0:397:1739":{"crate_id":0,"path":["base64","engine","Engine"],"kind":"trait"},"18:705:5806":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:5402:8044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:9296:5823":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:47641:3471":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:14808:3716":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:7453:5513":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:11277:6021":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:48064:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:46025:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:51147:7038":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:51220:4324":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:6199:4000":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:50298:3339":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"0:98:1625":{"crate_id":0,"path":["base64","read"],"kind":"module"},"2:3746:4235":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:2512:5349":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:6644:5109":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:8908:3484":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:11555:6066":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:11962:6148":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:3431:4219":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:22957:4291":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"18:802:5411":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:5175:7929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:5423:8057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:48946:7029":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:10620:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:3411:4210":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:13786:3851":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:53504:7068":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:46514:4597":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:49435:4479":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:5719:3699":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:46471:3361":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:24148:6979":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:1190:11243":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:12010:6158":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:24817:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:6077:8169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"18:136:53341":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:527:7405":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:24227:39216":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:12073:6171":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:4535:5696":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:32580:59077":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"5:1644:3860":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:52102:4347":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:8391:2725":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:5538:8084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:6176:5096":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:11304:47057":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"12:1784:5511":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:11398:3350":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:5436:8061":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:6636:5066":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:6014:5093":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"1:2159:2895":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:9627:54207":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:10571:5954":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:10128:5395":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:8474:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:3338:4971":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:4995:5709":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:24953:4509":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"12:2419:2744":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:9733:3976":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:6510:4122":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:15185:3790":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:3604:5844":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:6357:5101":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:4038:7714":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"5:1441:3869":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:49457:4481":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"18:169:53343":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"0:409:1628":{"crate_id":0,"path":["base64","alphabet"],"kind":"module"},"1:3339:3947":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:900:3907":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:46798:4129":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"9:963:4801":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:4300:2852":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"16:5595:4951":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:48907:4151":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:5257:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:9139:3096":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:10952:3802":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:49142:4612":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:11616:6077":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"5:4699:5518":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:5500:3989":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:11674:3826":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:4538:7901":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:12065:54206":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"0:582:2343":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","DuplicatedByte"],"kind":"variant"},"2:53437:4343":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:4723:1984":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:11147:6016":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"6:3972:7680":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:24681:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"5:6475:2728":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:3939:5687":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:1727:7598":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:4740:4288":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:9933:5926":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:10988:6008":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:12926:3364":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:47633:3470":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:48938:7028":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"0:580:1917":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError","InvalidLength"],"kind":"variant"},"1:8925:4030":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"2:52499:4322":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:11420:3994":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"12:928:3861":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:5736:4957":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:10577:54074":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"5:7849:5532":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:994:4708":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:2945:5246":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:5314:5913":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"0:0:1640":{"crate_id":0,"path":["base64"],"kind":"module"},"16:5960:4969":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:6999:5113":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:4890:5706":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"14:47:5712":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"0:440:598":{"crate_id":0,"path":["base64","encode"],"kind":"module"},"2:52342:4327":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:47896:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"6:1740:7601":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:7378:5054":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:49576:3350":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:6238:5052":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:49832:3348":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:3658:5542":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:48618:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"5:4443:3470":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:47812:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:10623:5958":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:1472:2728":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:14317:3486":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:6577:5107":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:9174:7101":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:5996:5092":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:5564:8099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12632:6282":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:8132:3927":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:5952:4053":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:13810:6643":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:25323:4404":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:3396:3746":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:3396:3750":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:5207:7947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:6940:8287":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:12118:6178":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:11668:3470":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:4641:5698":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:11714:6095":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:6899:8278":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:11453:3739":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:3648:2835":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"6:1669:7563":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:7549:5058":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:681:5834":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:4639:2808":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:5:1502":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"18:740:5812":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"0:480:1737":{"crate_id":0,"path":["base64","encode","add_padding"],"kind":"function"},"0:194:1745":{"crate_id":0,"path":["base64","write","encoder","BUF_SIZE"],"kind":"constant"},"17:2484:47139":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:49467:4482":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"5:5536:4631":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:23756:59073":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:4386:7839":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:4148:7766":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:50286:3336":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:13172:6461":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:4526:7896":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11045:47055":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:3241:5230":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:11406:6028":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:24295:8303":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"16:7195:5119":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"12:379:4872":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:5858:4048":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"2:46888:4137":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:46433:4599":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"0:125:1870":{"crate_id":0,"path":["base64","read","decoder","DECODED_CHUNK_SIZE"],"kind":"constant"},"2:3401:3751":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:37707:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:12891:3369":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:46533:4357":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"0:396:2252":{"crate_id":0,"path":["base64","engine","fast_portable","NO_PAD"],"kind":"constant"},"17:12610:6271":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"0:323:532":{"crate_id":0,"path":["base64","engine","fast_portable","decode"],"kind":"module"},"2:11325:4467":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:16005:2622":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:11653:6083":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:5213:7948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"0:342:2258":{"crate_id":0,"path":["base64","engine","fast_portable","decode","DECODED_BLOCK_LEN"],"kind":"constant"},"17:9245:5295":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:49422:4114":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:11159:6017":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:13192:6467":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13240:6476":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:13554:6559":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:11180:3720":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"1:9639:54214":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"0:528:1634":{"crate_id":0,"path":["base64","decode","decode_engine_vec"],"kind":"function"},"2:53035:4316":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:12208:6190":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:23545:4283":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"5:2218:4651":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:9848:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:8548:3163":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"12:750:3470":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:7119:4981":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:13637:6581":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:3275:3239":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:10673:47239":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:13364:39455":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:3323:3942":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"9:776:4783":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:10403:5315":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:23169:16503":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"0:349:2213":{"crate_id":0,"path":["base64","engine","fast_portable","decode","decode_helper"],"kind":"function"},"2:46548:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:12946:6329":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:10279:5288":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:3172:5227":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"12:1256:3872":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:12257:3885":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:2166:2892":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:14565:8383":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"18:730:61207":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:10332:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:52468:4319":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:11477:3354":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:51349:7039":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:51642:4341":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:13942:6681":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"0:564:2161":{"crate_id":0,"path":["base64","alphabet","Alphabet"],"kind":"struct"},"2:10610:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:6557:3735":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:53524:7070":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:51840:4306":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:46778:4128":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:14236:2844":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:49347:4473":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:10516:5318":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:4434:7859":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:3329:3470":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:10200:5940":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:46104:4254":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:1472:3870":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:6706:59255":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:8646:4010":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:3812:4277":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:7042:5270":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:47938:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:12815:3368":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:4446:7863":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:12725:6291":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:13788:6638":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"6:5395:8043":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:13590:6568":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"15:269:4892":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:161:39860":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:48679:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"16:2754:4973":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:3384:4106":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:23073:4282":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"12:353:7377":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:47701:3002":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:9063:3887":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:14000:6691":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:16022:2636":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:46708:4116":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"5:69:2891":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:10366:5834":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:5653:3713":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:3104:2865":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:11835:6128":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:11130:2824":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:22682:59167":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"0:477:1632":{"crate_id":0,"path":["base64","encode","encoded_len"],"kind":"function"},"0:255:1949":{"crate_id":0,"path":["base64","write","encoder_string_writer","EncoderStringWriter"],"kind":"struct"},"17:10407:5348":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:49822:3349":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:48731:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:7571:5046":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:1551:7482":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"14:0:2598":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:10054:4453":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"6:4218:7779":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:13062:6421":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:12142:6180":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:4921:4414":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:11506:3092":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:3581:2739":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:46867:4136":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"12:2032:3470":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:565:7430":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"12:1183:4866":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:4473:2847":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"16:6949:5266":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"0:89:1851":{"crate_id":0,"path":["base64","display","FormatterSink"],"kind":"struct"},"16:2733:4974":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:3336:3744":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:14575:3711":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:10926:6003":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:10799:3684":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:53476:4308":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:53561:7073":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:46737:4119":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:9961:5927":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:5330:5914":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:6965:4125":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:9034:47050":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:5375:8035":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:53614:7076":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:16028:2642":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:13568:7097":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"2:48361:2766":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:8410:4662":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:11932:6139":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:12442:6245":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:3380:4104":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:24317:4523":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:24265:39217":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:5707:4954":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"17:13258:6484":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:32776:4296":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:8690:4011":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:46727:4118":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:49477:4483":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:2458:7099":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:3561:2834":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:13842:6658":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:12247:4022":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"6:1748:7605":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:5444:8063":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:5101:4421":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:3358:4095":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:12287:6200":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"9:1056:4796":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:1733:3995":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"0:124:1869":{"crate_id":0,"path":["base64","read","decoder","BASE64_CHUNK_SIZE"],"kind":"constant"},"17:10887:5997":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:5488:4945":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4061:7722":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:5111:2781":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:6252:5099":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"0:27:1745":{"crate_id":0,"path":["base64","chunked_encoder","BUF_SIZE"],"kind":"constant"},"5:8138:4710":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:4386:5691":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:12982:6360":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:24173:4391":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:5995:8134":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:3195:5228":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:6620:5253":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:13933:6679":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:4098:7743":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:5208:2784":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"0:533:1635":{"crate_id":0,"path":["base64","decode","decode_engine_slice"],"kind":"function"},"0:466:1629":{"crate_id":0,"path":["base64","encode","encode_engine"],"kind":"function"},"16:3118:5237":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:48232:4538":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"1:10840:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:11685:3827":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"12:466:61192":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:46816:4131":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:4516:7891":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:8481:3769":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"5:8197:2895":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:3883:7617":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:47787:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"9:749:4738":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:47710:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"0:579:2336":{"crate_id":0,"path":["base64","alphabet","ParseAlphabetError"],"kind":"enum"},"6:3966:7678":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:8027:3927":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"16:4762:5702":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:56447:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:8738:4020":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:38888:2864":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"9:157:4753":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:7742:3269":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:6166:5095":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"5:3370:3743":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:48354:2767":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:5244:7959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"12:1238:4868":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:11340:5733":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"6:1567:7490":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:47854:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:15032:3845":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:51172:4344":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:10140:5316":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:46071:4530":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:4157:5374":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:50494:4493":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:13963:6684":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:46500:4595":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:11628:6078":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"1:8839:7101":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:8255:3810":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:46717:4117":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:13598:6569":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:2155:3470":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:2866:3500":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:10599:5956":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:7073:5114":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"9:927:44823":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"5:7620:2898":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:51493:7041":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:7843:5128":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:10379:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:3907:7634":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:4242:5513":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:9719:5922":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:51307:4333":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:542:4984":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:4277:7783":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:783:5561":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"17:10529:5947":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:46446:3362":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"12:2398:7381":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:49448:4480":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"16:7342:5083":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:3549:6711":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:50266:3330":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:49626:3351":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:8313:4534":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:12405:7098":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:10448:5314":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:7932:54219":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"5:3951:2892":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:53495:7067":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:11519:6061":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:51243:4312":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:12385:6233":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"5:3362:3745":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:24715:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"17:11915:6133":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:53288:4340":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:10391:2770":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:46370:7007":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:13073:2748":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:4440:7860":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:10149:5925":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:11150:2828":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:23550:16522":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"1:4666:1868":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:4783:4266":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"6:6640:8263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:49396:4478":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:3839:5513":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:11337:5300":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:46002:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:53629:7077":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11767:6108":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:8849:5337":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:6087:5047":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:9771:5560":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:8960:2731":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:7146:5115":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:2816:5240":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:24132:8300":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:2397:7096":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:8902:47047":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:4852:5705":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"0:24:1741":{"crate_id":0,"path":["base64","chunked_encoder","Sink"],"kind":"trait"},"5:6257:2898":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"1:3197:1625":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:8475:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"0:338:2254":{"crate_id":0,"path":["base64","engine","fast_portable","decode","DECODED_CHUNK_LEN"],"kind":"constant"},"17:12095:6172":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:2395:7095":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:16026:2640":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:12783:6300":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:12685:6286":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:16027:2641":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:49875:3362":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:51195:4332":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:56473:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:7738:5126":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:12010:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:9005:47049":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:12028:6159":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:5971:8117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"7:38:44719":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:10211:5941":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:12645:6283":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:23020:3680":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"12:2052:3743":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"18:886:5418":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:46132:4230":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"6:157:39859":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"0:41:1752":{"crate_id":0,"path":["base64","chunked_encoder","max_input_length"],"kind":"function"},"2:13973:6975":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:49850:3359":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:7804:5059":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:6861:3672":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:10468:5313":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:10677:3873":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:53550:7072":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:521:7402":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:10502:5946":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:49812:2828":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:52421:4315":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:22616:3244":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:2866:5222":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"13:0:2591":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:13144:2742":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:5008:3717":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"5:5788:5513":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:3091:5284":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:10224:5942":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:10962:1919":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:10028:5932":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:593:7445":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:10809:3711":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:16009:2625":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:1626:7529":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:12875:3367":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:13978:6685":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:7856:5129":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:2397:2888":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:12038:3845":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:46493:3360":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:9332:5296":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:16010:2626":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:1662:7559":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:49544:2825":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:9574:5307":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:5968:4056":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4075:7730":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"0:556:1788":{"crate_id":0,"path":["base64","engine","fast_portable","FastPortableConfig"],"kind":"struct"},"6:5430:8058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:16003:2620":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:4373:7834":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:7732:3843":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:47069:6969":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:1486:3872":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:11598:3822":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:3064:5283":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:13210:4170":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:1531:7474":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:9843:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"0:126:1865":{"crate_id":0,"path":["base64","read","decoder","DecoderReader"],"kind":"struct"},"1:1446:3859":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:607:7453":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:5034:4415":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:4485:7881":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:5837:3503":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:49608:3352":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"12:1666:4878":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:10584:5373":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:3987:7687":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:4509:7888":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:2968:5224":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:15353:3981":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:10656:5961":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:46769:4121":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:12083:8382":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:23854:4262":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:24093:6977":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"12:952:3866":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:32420:4548":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"5:1843:5513":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:4020:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:4477:5694":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"12:2072:3746":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:51997:7044":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:12507:6253":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:8479:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:22661:59165":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"18:830:5414":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:8146:59836":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:15053:3895":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"2:51474:4302":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:7642:2899":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:10667:3755":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:3372:3898":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:6691:5110":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"0:498:532":{"crate_id":0,"path":["base64","decode"],"kind":"module"},"6:513:7397":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12568:6263":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:16011:2627":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:11458:6046":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:16007:2623":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:4379:7837":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:49375:4476":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"12:2045:2892":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:9341:3102":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:5522:4947":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:46364:3361":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"12:162:4869":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"11:54:4855":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"2:32428:59076":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"6:6094:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:46787:4124":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"12:2040:2728":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:4684:2817":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"1:12053:3846":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:3310:3162":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:22629:59069":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:14936:5568":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"5:4643:5518":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:1459:3860":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:2177:3744":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:9264:5913":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:11137:2825":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:51330:4337":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"0:340:2256":{"crate_id":0,"path":["base64","engine","fast_portable","decode","CHUNKS_PER_FAST_LOOP_BLOCK"],"kind":"constant"},"2:50450:7036":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:10527:6972":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:6126:5094":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"14:216:45401":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:5346:5048":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:46392:4353":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:8362:8298":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:10826:3712":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:6699:8165":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"17:11993:6155":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:11981:6153":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:49976:4171":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:626:7463":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"0:380:2169":{"crate_id":0,"path":["base64","engine","fast_portable","encode_table"],"kind":"function"},"6:5979:8122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"12:114:61188":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:5960:4054":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:3488:5234":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:6731:5259":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12247:6195":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:16023:2637":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:10618:3486":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:1635:3859":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:10381:2766":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:3736:2837":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:15216:3792":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:9799:5924":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:6768:5262":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:13506:6544":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:11665:6084":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:10661:11241":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"12:856:3860":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"5:8344:4659":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:12302:3896":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"1:8388:3821":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:6459:3691":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:14246:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:6136:5089":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:10052:5934":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:49762:3355":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:10858:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:4304:5689":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"5:6672:4631":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:11658:3824":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:11365:3985":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:45956:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:3577:2738":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"6:6117:8178":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:2262:4673":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"13:120:45367":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:56486:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6569:5255":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:3920:7644":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:580:7439":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"0:52:1624":{"crate_id":0,"path":["base64","display"],"kind":"module"},"9:692:4736":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"0:605:1917":{"crate_id":0,"path":["base64","decode","DecodeError","InvalidLength"],"kind":"variant"},"16:0:2600":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:9594:5557":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:2991:5235":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"12:0:2597":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"16:3714:5684":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:12431:6243":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:11726:6098":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:5029:5710":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"6:612:7455":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"12:895:4857":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:10427:5562":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:8446:2892":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"5:4599:5516":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"16:4823:5704":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:7236:5123":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:6863:3673":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:46454:4593":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:46699:4115":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:46641:7015":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:4512:2843":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:9634:5558":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:10317:5294":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:46847:4134":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:10882:2838":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:4048:7717":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:12187:3774":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:3287:2787":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:48594:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4242:7781":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:6718:5258":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:1680:7571":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:50324:3899":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"6:6951:8291":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"0:522:532":{"crate_id":0,"path":["base64","decode","decode"],"kind":"function"},"17:11026:6011":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:6437:3688":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:12182:6187":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:11156:3719":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"6:6013:8141":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:6219:5098":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:47649:2895":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:3103:3681":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:5930:4051":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"9:686:4734":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:9896:61200":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:6072:5068":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:9186:5304":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:5855:4964":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:12061:8381":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"0:436:2362":{"crate_id":0,"path":["base64","alphabet","CRYPT"],"kind":"constant"},"17:10071:5398":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:4256:7782":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:1235:4671":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:9769:61202":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:3392:5238":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:5647:3715":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:586:7442":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:53652:7078":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:9528:2825":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:9088:47052":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:6911:8280":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:8442:4126":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:47624:3262":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"12:2253:3869":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:4012:7703":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:3347:4090":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:24330:4522":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"9:469:8505":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:11208:3723":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"2:3417:4204":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"18:791:5410":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:13134:2753":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:12307:6206":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:4493:7883":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:4392:7842":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"5:3375:4649":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:11505:4471":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:50007:4175":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:8380:3927":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"17:13296:6490":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"12:1121:3870":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:14626:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:15045:57993":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:7392:5055":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:12282:3895":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:10383:2767":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:6685:3683":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:10041:5933":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:14958:5570":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:46898:4077":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:10592:3925":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:22920:4292":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:24851:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:3440:4224":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:10387:2769":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"13:232:7376":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:5975:5091":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:1607:3471":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"0:310:1786":{"crate_id":0,"path":["base64","engine","fast_portable"],"kind":"module"},"17:10179:5939":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"5:5415:2808":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:4515:4696":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"9:41:4786":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:12744:5566":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:6464:5062":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:47591:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:4728:4287":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:2292:4241":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:7185:5118":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"0:435:2358":{"crate_id":0,"path":["base64","alphabet","URL_SAFE"],"kind":"constant"},"9:1075:4804":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"5:5833:3502":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"15:0:2599":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:11524:3811":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:16015:2629":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:47692:3101":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:48627:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"18:850:5415":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:10912:5999":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:48899:7023":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:4005:7699":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:1912:41167":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:32239:4558":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:4179:7776":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"12:843:3859":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:294:5829":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:3522:5840":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"8:0:2593":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"18:0:2602":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:4410:7849":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"}},"external_crates":{"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}