{"root":"0:0:1614","crate_version":"0.12.1","includes_private":true,"index":{"1:6787:3997":{"id":"1:6787:3997","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6788:8472","1:6789:56261"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:647":{"id":"0:647","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,65],"end":[53,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::rwlock::RwLock","name":"RwLock","id":"0:528:1609","glob":false}},"2:13536:54566":{"id":"2:13536:54566","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:69:1587":{"id":"b:2:4002-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[322,0],"end":[395,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockUpgrade","id":"20:543:2327","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:433:2383","0:434:2386","0:435:2388","0:436:2390","0:437:2392"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:543:2327":{"id":"20:543:2327","crate_id":20,"name":"RawRwLockUpgrade","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:544:2383","20:545:2386","20:546:2388","20:547:2390","20:548:2392"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"20:512:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:418:2370":{"id":"0:418:2370","crate_id":0,"name":"downgrade","span":{"filename":"src/raw_rwlock.rs","begin":[193,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:146:1593":{"id":"0:146:1593","crate_id":0,"name":"const_mutex","span":{"filename":"src/mutex.rs","begin":[92,0],"end":[94,1]},"visibility":"public","docs":"Creates a new mutex in an unlocked state ready for use.\n\nThis allows creating a mutex in a constant context on stable Rust.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"Mutex","id":"0:144:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"0:532:1610":{"id":"0:532:1610","crate_id":0,"name":"RwLockReadGuard","span":{"filename":"src/rwlock.rs","begin":[100,0],"end":[100,78]},"visibility":"public","docs":"RAII structure used to release the shared read access of a lock when\ndropped.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::RwLockReadGuard","id":"20:645:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"2:13500:60430":{"id":"2:13500:60430","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:295:1599":{"id":"b:2:3202-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:682:2186":{"id":"0:682:2186","crate_id":0,"name":"InProgress","span":{"filename":"src/once.rs","begin":[30,4],"end":[30,14]},"visibility":"default","docs":"A thread is currently executing a closure.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:222:1573":{"id":"0:222:1573","crate_id":0,"name":"raw_fair_mutex","span":{"filename":"src/raw_fair_mutex.rs","begin":[8,0],"end":[65,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:229:1598"],"is_stripped":false}},"2:13623:3870":{"id":"2:13623:3870","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16004:2670"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49866:3871","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6790:3885":{"id":"1:6790:3885","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:7332"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13520:54889":{"id":"2:13520:54889","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16010:2675"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:505:1603":{"id":"b:2:4002-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13543:3232":{"id":"2:13543:3232","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670","`None`":"2:47591:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10387:3197":{"id":"2:10387:3197","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10388:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3269:211-0:677:1597":{"id":"a:2:3269:211-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:305:2283":{"id":"0:305:2283","crate_id":0,"name":"unlock_fair","span":{"filename":"src/raw_mutex.rs","begin":[121,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:563:1580":{"id":"0:563:1580","crate_id":0,"name":"deadlock","span":{"filename":"src/deadlock.rs","begin":[1,0],"end":[232,1]},"visibility":"crate","docs":"\\[Experimental\\] Deadlock detection\n\nThis feature is optional and can be enabled via the `deadlock_detection` feature flag.\n\n# Example\n\n```\n#[cfg(feature = \"deadlock_detection\")]\n{ // only for #[cfg]\nuse std::thread;\nuse std::time::Duration;\nuse parking_lot::deadlock;\n\n// Create a background thread which checks for deadlocks every 10s\nthread::spawn(move || {\n    loop {\n        thread::sleep(Duration::from_secs(10));\n        let deadlocks = deadlock::check_deadlock();\n        if deadlocks.is_empty() {\n            continue;\n        }\n\n        println!(\"{} deadlocks detected\", deadlocks.len());\n        for (i, threads) in deadlocks.iter().enumerate() {\n            println!(\"Deadlock #{}\", i);\n            for t in threads {\n                println!(\"Thread Id {:#?}\", t.thread_id());\n                println!(\"{:#?}\", t.backtrace());\n            }\n        }\n    }\n});\n} // only for #[cfg]\n```","links":{},"attrs":["#[cfg(not(feature = \"deadlock_detection\"))]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"2:23854:4411":{"id":"2:23854:4411","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23855:4428"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23850:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:426":{"id":"0:426","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[270,0],"end":[292,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockRecursive","id":"20:537:2377","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:427:2378","0:428:2379"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10389:189":{"id":"2:10389:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10390:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3279:106":{"id":"2:3279:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"23:393:5599":{"id":"23:393:5599","crate_id":23,"name":"ToSmallVec","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["23:395:61642"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"A"},"bounds":[{"trait_bound":{"trait":{"name":"Array","id":"23:377:5597","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:580":{"id":"0:580","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[42,27],"end":[42,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fair_mutex::const_fair_mutex","name":"const_fair_mutex","id":"0:129:1589","glob":false}},"0:112:2027":{"id":"0:112:2027","crate_id":0,"name":"IntType","span":{"filename":"src/elision.rs","begin":[14,4],"end":[14,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}},"b:2:4002-0:662:1588":{"id":"b:2:4002-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/raw_mutex.rs","begin":[141,0],"end":[178,1]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawMutexTimed","id":"20:42:2285","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:308:121","0:309:1723","0:310:2286","0:311:2287"],"negative":false,"synthetic":false,"blanket_impl":null}},"20:512:1600":{"id":"20:512:1600","crate_id":20,"name":"RawRwLock","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:513:2092","20:514:1583","20:515:2353","20:516:2356","20:517:2358","20:518:2345","20:519:2349","20:520:2350","20:521:2284","20:522:2361"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:428:2379":{"id":"0:428:2379","crate_id":0,"name":"try_lock_shared_recursive","span":{"filename":"src/raw_rwlock.rs","begin":[281,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:662:1588":{"id":"b:2:2872-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6557:3993":{"id":"1:6557:3993","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6558:56955","1:6559:56956"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6105:3955":{"id":"5:6105:3955","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:404:2345":{"id":"0:404:2345","crate_id":0,"name":"lock_exclusive","span":{"filename":"src/raw_rwlock.rs","begin":[67,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:78:1812":{"id":"0:78:1812","crate_id":0,"name":"notify_all_slow","span":{"filename":"src/condvar.rs","begin":[198,4],"end":[239,5]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14246:141":{"id":"2:14246:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14247:277","2:14248:518","2:14249:280","2:14250:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:127:1590":{"id":"0:127:1590","crate_id":0,"name":"FairMutex","span":{"filename":"src/fair_mutex.rs","begin":[78,0],"end":[78,57]},"visibility":"public","docs":"A mutual exclusive primitive that is always fair, useful for protecting shared data\n\nThis mutex will block threads waiting for the lock to become available. The\nmutex can be statically initialized or created by the `new`\nconstructor. Each mutex has a type parameter which represents the data that\nit is protecting. The data can only be accessed through the RAII guards\nreturned from `lock` and `try_lock`, which guarantees that the data is only\never accessed when the mutex is locked.\n\nThe regular mutex provided by `parking_lot` uses eventual fairness\n(after some time it will default to the fair algorithm), but eventual\nfairness does not provide the same guarantees an always fair method would.\nFair mutexes are generally slower, but sometimes needed.\n\nIn a fair mutex the waiters form a queue, and the lock is always granted to\nthe next requester in the queue, in first-in first-out order. This ensures\nthat one thread cannot starve others by quickly re-acquiring the lock after\nreleasing it.\n\nA fair mutex may not be interesting if threads have different priorities (this is known as\npriority inversion).\n\n# Differences from the standard library `Mutex`\n\n- No poisoning, the lock is released normally on panic.\n- Only requires 1 byte of space, whereas the standard library boxes the\n  `FairMutex` due to platform limitations.\n- Can be statically constructed.\n- Does not require any drop glue when dropped.\n- Inline fast path for the uncontended case.\n- Efficient handling of micro-contention using adaptive spinning.\n- Allows raw locking & unlocking without a guard.\n\n# Examples\n\n```\nuse parking_lot::FairMutex;\nuse std::sync::{Arc, mpsc::channel};\nuse std::thread;\n\nconst N: usize = 10;\n\n// Spawn a few threads to increment a shared variable (non-atomically), and\n// let the main thread know once all increments are done.\n//\n// Here we're using an Arc to share memory among threads, and the data inside\n// the Arc is protected with a mutex.\nlet data = Arc::new(FairMutex::new(0));\n\nlet (tx, rx) = channel();\nfor _ in 0..10 {\n    let (data, tx) = (Arc::clone(&data), tx.clone());\n    thread::spawn(move || {\n        // The shared state can only be accessed once the lock is held.\n        // Our non-atomic increment is safe because we're the only thread\n        // which can access the shared state when the lock is held.\n        let mut data = data.lock();\n        *data += 1;\n        if *data == N {\n            tx.send(()).unwrap();\n        }\n        // the lock is unlocked here when `data` goes out of scope.\n    });\n}\n\nrx.recv().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::Mutex","id":"20:47:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/raw_mutex.rs","begin":[119,0],"end":[139,1]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["bump"],"trait":{"name":"RawMutexFair","id":"20:39:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:305:2283","0:306:1945"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:120:1570":{"id":"0:120:1570","crate_id":0,"name":"fair_mutex","span":{"filename":"src/fair_mutex.rs","begin":[8,0],"end":[275,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:127:1590","0:129:1589","0:131:1591","0:134:1592"],"is_stripped":false}},"b:2:3213-0:69:1587":{"id":"b:2:3213-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14322:4034":{"id":"2:14322:4034","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14323:56157","2:14324:56158","2:14325:5594","2:14326:56159","2:14327:56160","2:14328:56161","2:14329:3260"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3559:2860":{"id":"2:3559:2860","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3561:237","2:3562:206","2:3563:59402"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3519:130":{"id":"2:3519:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3521:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:452:2384":{"id":"0:452:2384","crate_id":0,"name":"try_lock_upgradable_fast","span":{"filename":"src/raw_rwlock.rs","begin":[570,4],"end":[586,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10381:3194":{"id":"2:10381:3194","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10382:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:197:1542":{"id":"0:197:1542","crate_id":0,"name":"0","span":{"filename":"src/once.rs","begin":[83,16],"end":[83,24]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AtomicU8","id":"2:47854:91","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:538:1607":{"id":"0:538:1607","crate_id":0,"name":"MappedRwLockReadGuard","span":{"filename":"src/rwlock.rs","begin":[113,0],"end":[113,90]},"visibility":"public","docs":"An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedRwLockReadGuard` and `RwLockReadGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::MappedRwLockReadGuard","id":"20:821:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:221:660":{"id":"0:221:660","crate_id":0,"name":"fmt","span":{"filename":"src/once.rs","begin":[326,4],"end":[330,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10322:3189":{"id":"2:10322:3189","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10323:1533","2:10324:56778","2:10326:56777"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:295:1599":{"id":"b:2:3213-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:596":{"id":"0:596","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[43,35],"end":[43,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::mutex::MappedMutexGuard","name":"MappedMutexGuard","id":"0:151:1594","glob":false}},"a:2:3281:220-0:505:1603":{"id":"a:2:3281:220-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:238:2284":{"id":"0:238:2284","crate_id":0,"name":"is_locked","span":{"filename":"src/raw_fair_mutex.rs","begin":[35,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2921:183":{"id":"2:2921:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2923:604","2:2924:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13144:4332":{"id":"2:13144:4332","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13146:4334","2:13147:59119","2:13148:59120","2:13149:59121","2:13150:59123","2:13151:59122","2:13152:59124"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8960:3716":{"id":"2:8960:3716","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:111:2026":{"id":"0:111:2026","crate_id":0,"name":"AtomicElisionExt","span":{"filename":"src/elision.rs","begin":[13,0],"end":[25,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:112:2027","0:113:2028","0:114:2030"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:116"]}},"b:2:3208-0:195:1596":{"id":"b:2:3208-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:106:660":{"id":"0:106:660","crate_id":0,"name":"fmt","span":{"filename":"src/condvar.rs","begin":[518,4],"end":[520,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3376:2837":{"id":"2:3376:2837","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3378:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:297":{"id":"0:297","crate_id":0,"name":null,"span":{"filename":"src/raw_mutex.rs","begin":[58,0],"end":[117,1]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_locked"],"trait":{"name":"RawMutex","id":"20:32:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:298:2092","0:299:1583","0:300:1860","0:301:2114","0:302:1853","0:303:2284"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:555:2173":{"id":"0:555:2173","crate_id":0,"name":"UncheckedOptionExt","span":{"filename":"src/util.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:557:2244"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:558"]}},"0:677:1597":{"id":"0:677:1597","crate_id":0,"name":"OnceState","span":{"filename":"src/once.rs","begin":[22,0],"end":[34,1]},"visibility":"public","docs":"Current state of a `Once`.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:678:2182","0:680:2184","0:682:2186","0:684:2188"],"impls":["0:192","a:2:3310:2896-0:677:1597","a:2:3269:211-0:677:1597","a:2:9340:2993-0:677:1597","a:2:9339:2994-0:677:1597","a:2:3281:220-0:677:1597","b:2:3198-0:677:1597","b:2:2872-0:677:1597","b:2:2869-0:677:1597","b:2:4002-0:677:1597","b:2:3202-0:677:1597","b:2:3213-0:677:1597","b:2:3208-0:677:1597","b:5:787-0:677:1597","0:686","0:687","0:689","0:690","0:692","0:693","0:695"]}},"0:298:2092":{"id":"0:298:2092","crate_id":0,"name":"INIT","span":{"filename":"src/raw_mutex.rs","begin":[59,4],"end":[61,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}},"2:13562:54901":{"id":"2:13562:54901","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:16010:2675","prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49662:4569","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:377:5597":{"id":"23:377:5597","crate_id":23,"name":"Array","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["23:378:3236","23:379:1304"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:528:1609":{"id":"0:528:1609","crate_id":0,"name":"RwLock","span":{"filename":"src/rwlock.rs","begin":[89,0],"end":[89,52]},"visibility":"public","docs":"A reader-writer lock\n\nThis type of lock allows a number of readers or at most one writer at any\npoint in time. The write portion of this lock typically allows modification\nof the underlying data (exclusive access) and the read portion of this lock\ntypically allows for read-only access (shared access).\n\nThis lock uses a task-fair locking policy which avoids both reader and\nwriter starvation. This means that readers trying to acquire the lock will\nblock even if the lock is unlocked when there are writers waiting to acquire\nthe lock. Because of this, attempts to recursively acquire a read lock\nwithin a single thread may result in a deadlock.\n\nThe type parameter `T` represents the data that this lock protects. It is\nrequired that `T` satisfies `Send` to be shared across threads and `Sync` to\nallow concurrent access through readers. The RAII guards returned from the\nlocking methods implement `Deref` (and `DerefMut` for the `write` methods)\nto allow access to the contained of the lock.\n\n# Fairness\n\nA typical unfair lock can often end up in a situation where a single thread\nquickly acquires and releases the same lock in succession, which can starve\nother threads waiting to acquire the rwlock. While this improves throughput\nbecause it doesn't force a context switch when a thread tries to re-acquire\na rwlock it has just released, this can starve other threads.\n\nThis rwlock uses [eventual fairness](https://trac.webkit.org/changeset/203350)\nto ensure that the lock will be fair on average without sacrificing\nthroughput. This is done by forcing a fair unlock on average every 0.5ms,\nwhich will force the lock to go to the next thread waiting for the rwlock.\n\nAdditionally, any critical section longer than 1ms will always use a fair\nunlock, which has a negligible impact on throughput considering the length\nof the critical section.\n\nYou can also force a fair unlock by calling `RwLockReadGuard::unlock_fair`\nor `RwLockWriteGuard::unlock_fair` when unlocking a mutex instead of simply\ndropping the guard.\n\n# Differences from the standard library `RwLock`\n\n- Supports atomically downgrading a write lock into a read lock.\n- Task-fair locking policy instead of an unspecified platform default.\n- No poisoning, the lock is released normally on panic.\n- Only requires 1 word of space, whereas the standard library boxes the\n  `RwLock` due to platform limitations.\n- Can be statically constructed.\n- Does not require any drop glue when dropped.\n- Inline fast path for the uncontended case.\n- Efficient handling of micro-contention using adaptive spinning.\n- Allows raw locking & unlocking without a guard.\n- Supports eventual fairness so that the rwlock is fair on average.\n- Optionally allows making the rwlock fair by calling\n  `RwLockReadGuard::unlock_fair` and `RwLockWriteGuard::unlock_fair`.\n\n# Examples\n\n```\nuse parking_lot::RwLock;\n\nlet lock = RwLock::new(5);\n\n// many reader locks can be held at once\n{\n    let r1 = lock.read();\n    let r2 = lock.read();\n    assert_eq!(*r1, 5);\n    assert_eq!(*r2, 5);\n} // read locks are dropped at this point\n\n// only one write lock may be held, however\n{\n    let mut w = lock.write();\n    *w += 1;\n    assert_eq!(*w, 6);\n} // write lock is dropped here\n```","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::RwLock","id":"20:560:1609","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:508:2092":{"id":"0:508:2092","crate_id":0,"name":"INIT","span":{"filename":"src/remutex.rs","begin":[16,4],"end":[16,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"RawThreadId"}},"2:13550:32506":{"id":"2:13550:32506","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12926:4563","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3310:2896":{"id":"2:3310:2896","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22920:4439":{"id":"2:22920:4439","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22921:58997","2:22922:1227","2:22923:1228","2:22924:58998","2:22925:58999","2:22926:59000","2:22927:59001","2:22928:59002","2:22929:59003","2:22930:59004"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3581:2852":{"id":"2:3581:2852","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3583:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3577:2851","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8438:2913":{"id":"2:8438:2913","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8440:3281"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:466:2393":{"id":"0:466:2393","crate_id":0,"name":"try_upgrade_slow","span":{"filename":"src/raw_rwlock.rs","begin":[851,4],"end":[867,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13510:2425":{"id":"2:13510:2425","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13577:60440":{"id":"2:13577:60440","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"prim@char":"1:16004:2670","self::pattern":"2:13134:4331","`DoubleEndedIterator`":"2:8523:120","str::matches":"1:16010:2675"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49780:4603","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4723:3189":{"id":"1:4723:3189","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4724:2528","1:4725:58414","1:4727:58415","1:4728:4991","1:4729:58416","1:4730:58417","1:4731:56777","1:4740:3260"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3278:217":{"id":"2:3278:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4748:3929":{"id":"1:4748:3929","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4749:53916","1:4750:53917","1:4751:53919","1:4753:3928","1:4754:53918","1:4756:53920","1:4757:5067"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4666:3909","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:97:1881":{"id":"0:97:1881","crate_id":0,"name":"wait_while_until","span":{"filename":"src/condvar.rs","begin":[461,4],"end":[472,5]},"visibility":"public","docs":"Waits on this condition variable for a notification, timing out after\nthe specified time instant. If the provided condition evaluates to\n`false`, then the thread is no longer blocked and the operation is\ncompleted. If the condition evaluates to `true`, then the thread is\nblocked again and waits for another notification before repeating\nthis process.\n\nThe semantics of this function are equivalent to `wait()` except that\nthe thread will be blocked roughly until `timeout` is reached. This\nmethod should not be used for precise timing due to anomalies such as\npreemption or platform differences that may not cause the maximum\namount of time waited to be precisely `timeout`.\n\nNote that the best effort is made to ensure that the time waited is\nmeasured with a monotonic clock, and not affected by the changes made to\nthe system time.\n\nThe returned `WaitTimeoutResult` value indicates if the timeout is\nknown to have elapsed.\n\nLike `wait`, the lock specified will be re-acquired when this function\nreturns, regardless of whether the timeout elapsed or not.\n\n# Panics\n\nThis function will panic if another thread is waiting on the `Condvar`\nwith a different `Mutex` object.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex_guard",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MutexGuard","id":"0:148:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],["condition",{"kind":"generic","inner":"F"}],["timeout",{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13624:60454":{"id":"2:13624:60454","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16004:2670"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49875:4609","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:311:2287":{"id":"0:311:2287","crate_id":0,"name":"try_lock_for","span":{"filename":"src/raw_mutex.rs","begin":[163,4],"end":[177,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:42:2285":{"id":"20:42:2285","crate_id":20,"name":"RawMutexTimed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:43:121","20:44:1723","20:45:2287","20:46:2286"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"20:32:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3269:211":{"id":"2:3269:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:484:2411":{"id":"0:484:2411","crate_id":0,"name":"lock_common","span":{"filename":"src/raw_rwlock.rs","begin":[1062,4],"end":[1136,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":"Common code for acquiring a lock","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["token",{"kind":"resolved_path","inner":{"name":"ParkToken","id":"22:391:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["try_lock",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"usize"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}]}],["validate_flags",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"impl FnMut(&mut usize) -> bool","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"usize"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:505:1603":{"id":"b:2:3208-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[25,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:68:1727"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:474:2397":{"id":"0:474:2397","crate_id":0,"name":"bump_upgradable_slow","span":{"filename":"src/raw_rwlock.rs","begin":[920,4],"end":[924,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13556:60436":{"id":"2:13556:60436","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670","str::split":"1:16010:2675","`DoubleEndedIterator`":"2:8523:120","str::rsplit_terminator":"1:16010:2675"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49608:4595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3:1568":{"id":"0:3:1568","crate_id":0,"name":"condvar","span":{"filename":"src/condvar.rs","begin":[8,0],"end":[1271,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:662:1588","0:69:1587"],"is_stripped":false}},"b:2:4002-0:195:1596":{"id":"b:2:4002-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:790:3291":{"id":"5:790:3291","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:154:1572":{"id":"0:154:1572","crate_id":0,"name":"once","span":{"filename":"src/once.rs","begin":[8,0],"end":[458,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:188:2176","0:189:2177","0:190:2178","0:191:2179","0:677:1597","0:195:1596"],"is_stripped":false}},"0:680:2184":{"id":"0:680:2184","crate_id":0,"name":"Poisoned","span":{"filename":"src/once.rs","begin":[27,4],"end":[27,12]},"visibility":"default","docs":"A closure was executed but panicked.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:669:604":{"id":"0:669:604","crate_id":0,"name":"eq","span":{"filename":"src/condvar.rs","begin":[22,16],"end":[22,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:430:2381":{"id":"0:430:2381","crate_id":0,"name":"try_lock_shared_recursive_for","span":{"filename":"src/raw_rwlock.rs","begin":[296,4],"end":[306,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"qualified_path","inner":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"20:530:2372","args":null}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13609:60451":{"id":"2:13609:60451","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:443:2400":{"id":"0:443:2400","crate_id":0,"name":"downgrade_to_upgradable","span":{"filename":"src/raw_rwlock.rs","begin":[439,4],"end":[449,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:2866:4394":{"id":"2:2866:4394","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2868:2463"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:489:2348":{"id":"0:489:2348","crate_id":0,"name":"deadlock_acquire","span":{"filename":"src/raw_rwlock.rs","begin":[1139,4],"end":[1142,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:239":{"id":"0:239","crate_id":0,"name":null,"span":{"filename":"src/raw_fair_mutex.rs","begin":[40,0],"end":[50,1]},"visibility":{"restricted":{"parent":"0:222:1573","path":"::raw_fair_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["bump"],"trait":{"name":"RawMutexFair","id":"20:39:2281","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:240:2283","0:241:1945"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:687":{"id":"0:687","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[21,15],"end":[21,20]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:688:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13571:60439":{"id":"2:13571:60439","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2871:2461":{"id":"2:2871:2461","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3358:2833":{"id":"2:3358:2833","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3360:181","2:3361:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:195:1596":{"id":"b:2:3198-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:233:2092":{"id":"0:233:2092","crate_id":0,"name":"INIT","span":{"filename":"src/raw_fair_mutex.rs","begin":[15,4],"end":[15,76]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"generic","inner":"Self"},"default":"_"}},"2:3812:2863":{"id":"2:3812:2863","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:540:2380":{"id":"20:540:2380","crate_id":20,"name":"RawRwLockRecursiveTimed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:541:2381","20:542:2382"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockRecursive","id":"20:537:2377","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockTimed","id":"20:530:2372","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:301:2114":{"id":"0:301:2114","crate_id":0,"name":"try_lock","span":{"filename":"src/raw_mutex.rs","begin":[78,4],"end":[97,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13159:4335":{"id":"2:13159:4335","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13161:3227","2:13162:59820","2:13163:59821"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13153:4334","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:200:1326":{"id":"0:200:1326","crate_id":0,"name":"state","span":{"filename":"src/once.rs","begin":[94,4],"end":[105,5]},"visibility":"public","docs":"Returns the current state of this `Once`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:670:907":{"id":"0:670:907","crate_id":0,"name":"ne","span":{"filename":"src/condvar.rs","begin":[22,16],"end":[22,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:662:1588":{"id":"b:2:3208-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10372:109":{"id":"2:10372:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10373:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3431:2848":{"id":"2:3431:2848","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3433:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:306:1945":{"id":"0:306:1945","crate_id":0,"name":"bump","span":{"filename":"src/raw_mutex.rs","begin":[134,4],"end":[138,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:414:2364":{"id":"0:414:2364","crate_id":0,"name":"unlock_exclusive_fair","span":{"filename":"src/raw_rwlock.rs","begin":[162,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13559:60437":{"id":"2:13559:60437","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"1:16010:2675","self::pattern":"2:13134:4331","prim@char":"1:16004:2670","str::split":"1:16010:2675"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49626:4596","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:634":{"id":"0:634","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[50,4],"end":[50,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::remutex::ReentrantMutexGuard","name":"ReentrantMutexGuard","id":"0:515:1605","glob":false}},"5:6104:61093":{"id":"5:6104:61093","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8368:216","`Box<str>`":"5:432:2899"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2899","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:650":{"id":"0:650","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,73],"end":[53,88]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::rwlock::RwLockReadGuard","name":"RwLockReadGuard","id":"0:532:1610","glob":false}},"0:390:2179":{"id":"0:390:2179","crate_id":0,"name":"PARKED_BIT","span":{"filename":"src/raw_rwlock.rs","begin":[35,0],"end":[35,33]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"0b0001","value":"1usize","is_literal":true}},"0:688:408":{"id":"0:688:408","crate_id":0,"name":"clone","span":{"filename":"src/once.rs","begin":[21,15],"end":[21,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:71":{"id":"0:71","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[94,0],"end":[508,1]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:72:920","0:73:1789","0:74:1791","0:77:1811","0:78:1812","0:81:1827","0:83:1846","0:85:1831","0:89:1865","0:91:1868","0:94:1875","0:97:1881","0:100:1886"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:462:2385":{"id":"0:462:2385","crate_id":0,"name":"lock_upgradable_slow","span":{"filename":"src/raw_rwlock.rs","begin":[743,4],"end":[779,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:686":{"id":"0:686","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[21,9],"end":[21,13]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13521:54890":{"id":"2:13521:54890","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16010:2675"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8479:151":{"id":"2:8479:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8480:3236","2:8481:3237","2:8482:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3281:220-0:677:1597":{"id":"a:2:3281:220-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3204:681":{"id":"2:3204:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13503:60432":{"id":"2:13503:60432","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16010:2675"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:300:1860":{"id":"0:300:1860","crate_id":0,"name":"lock","span":{"filename":"src/raw_mutex.rs","begin":[66,4],"end":[75,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:399:1600":{"id":"0:399:1600","crate_id":0,"name":"RawRwLock","span":{"filename":"src/raw_rwlock.rs","begin":[55,0],"end":[57,1]},"visibility":"public","docs":"Raw reader-writer lock type backed by the parking lot.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:400:1326"],"impls":["0:449","a:2:3310:2896-0:399:1600","a:2:3269:211-0:399:1600","a:2:9340:2993-0:399:1600","a:2:9339:2994-0:399:1600","a:2:3281:220-0:399:1600","b:2:3198-0:399:1600","b:2:2872-0:399:1600","b:2:2869-0:399:1600","b:2:4002-0:399:1600","b:2:3202-0:399:1600","b:2:3213-0:399:1600","b:2:3208-0:399:1600","0:401","0:412","0:417","0:419","0:426","0:429","0:432","0:438","0:441","0:444"]}},"2:4000:68":{"id":"2:4000:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4001:1429"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:13592:60446":{"id":"2:13592:60446","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:313:1795":{"id":"0:313:1795","crate_id":0,"name":"mark_parked_if_locked","span":{"filename":"src/raw_mutex.rs","begin":[184,4],"end":[200,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:395:2339":{"id":"0:395:2339","crate_id":0,"name":"ONE_READER","span":{"filename":"src/raw_rwlock.rs","begin":[47,0],"end":[47,34]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"0b10000","value":"16usize","is_literal":true}},"a:2:3269:211-0:399:1600":{"id":"a:2:3269:211-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:0:1614":{"id":"0:0:1614","crate_id":0,"name":"parking_lot","span":{"filename":"src/lib.rs","begin":[8,0],"end":[56,19]},"visibility":"public","docs":"This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n`Once` that are smaller, faster and more flexible than those in the Rust\nstandard library. It also provides a `ReentrantMutex` type.","links":{},"attrs":["#![warn(missing_docs)]","#![warn(rust_2018_idioms)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:3:1568","0:107:1569","0:120:1570","0:137:1571","0:154:1572","0:222:1573","0:247:1574","0:322:1575","0:491:1576","0:521:1577","0:547:1578","0:563:1580","0:571:1583","0:573","0:576","0:580","0:583","0:586","0:589","0:593","0:596","0:599","0:602","0:606","0:609","0:612","0:615","0:618","0:622","0:625","0:628","0:631","0:634","0:638","0:641","0:644","0:647","0:650","0:653","0:656","0:659"],"is_stripped":false}},"5:791:3292":{"id":"5:791:3292","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:662:1588":{"id":"b:2:3198-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:399:1600":{"id":"b:2:3198-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4002-0:399:1600":{"id":"b:2:4002-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2926:124":{"id":"2:2926:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:413:2363":{"id":"0:413:2363","crate_id":0,"name":"unlock_shared_fair","span":{"filename":"src/raw_rwlock.rs","begin":[156,4],"end":[159,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:231:1542":{"id":"0:231:1542","crate_id":0,"name":"0","span":{"filename":"src/raw_fair_mutex.rs","begin":[12,24],"end":[12,32]},"visibility":{"restricted":{"parent":"0:222:1573","path":"::raw_fair_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:668":{"id":"0:668","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[22,16],"end":[22,25]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:669:604","0:670:907"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:612":{"id":"0:612","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[45,0],"end":[45,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::raw_fair_mutex::RawFairMutex","name":"RawFairMutex","id":"0:229:1598","glob":false}},"a:2:3281:220-0:195:1596":{"id":"a:2:3281:220-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:446:2404":{"id":"0:446:2404","crate_id":0,"name":"try_lock_upgradable_for","span":{"filename":"src/raw_rwlock.rs","begin":[467,4],"end":[477,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13533:54564":{"id":"2:13533:54564","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22884:4424":{"id":"2:22884:4424","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22885:4428","2:22886:58997","2:22887:1227","2:22888:1228","2:22889:42996","2:22890:59065","2:22891:59066","2:22892:59067","2:22893:59068","2:22894:59069","2:22895:58998","2:22896:58999","2:22897:59000","2:22898:59001","2:22899:59002","2:22900:59003","2:22901:59004"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5008:3976":{"id":"1:5008:3976","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5009:3714","1:5010:56750"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13525:32649":{"id":"2:13525:32649","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16010:2675"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49832:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:602":{"id":"0:602","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[43,60],"end":[43,70]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::mutex::MutexGuard","name":"MutexGuard","id":"0:148:1595","glob":false}},"2:3175:135":{"id":"2:3175:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3177:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:114:2030":{"id":"0:114:2030","crate_id":0,"name":"elision_fetch_sub_release","span":{"filename":"src/elision.rs","begin":[24,4],"end":[24,77]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["val",{"kind":"qualified_path","inner":{"name":"IntType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:111:2026","args":null}}}]],"output":{"kind":"qualified_path","inner":{"name":"IntType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:111:2026","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"5:6088:61090":{"id":"5:6088:61090","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[59,0],"end":[152,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_locked","is_locked_exclusive"],"trait":{"name":"RawRwLock","id":"20:512:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:402:2092","0:403:1583","0:404:2345","0:405:2349","0:406:2350","0:407:2353","0:408:2356","0:409:2358","0:410:2284","0:411:2361"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:561:1459":{"id":"0:561:1459","crate_id":0,"name":"unreachable","span":{"filename":"src/util.rs","begin":[27,0],"end":[33,1]},"visibility":{"restricted":{"parent":"0:547:1578","path":"::util"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"never"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"}}},"0:424:2375":{"id":"0:424:2375","crate_id":0,"name":"try_lock_exclusive_for","span":{"filename":"src/raw_rwlock.rs","begin":[236,4],"end":[250,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13506:56236":{"id":"2:13506:56236","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12605:4675"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:518:1602":{"id":"0:518:1602","crate_id":0,"name":"MappedReentrantMutexGuard","span":{"filename":"src/remutex.rs","begin":[68,0],"end":[69,70]},"visibility":"public","docs":"An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedReentrantMutexGuard` and `ReentrantMutexGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::MappedReentrantMutexGuard","id":"20:436:1602","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:473:2368":{"id":"0:473:2368","crate_id":0,"name":"bump_exclusive_slow","span":{"filename":"src/raw_rwlock.rs","begin":[913,4],"end":[917,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:562:1867":{"id":"0:562:1867","crate_id":0,"name":"to_deadline","span":{"filename":"src/util.rs","begin":[36,0],"end":[38,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:513:1601":{"id":"0:513:1601","crate_id":0,"name":"const_reentrant_mutex","span":{"filename":"src/remutex.rs","begin":[46,0],"end":[52,1]},"visibility":"public","docs":"Creates a new reentrant mutex in an unlocked state ready for use.\n\nThis allows creating a reentrant mutex in a constant context on stable Rust.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"ReentrantMutex","id":"0:511:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13501:60431":{"id":"2:13501:60431","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[506,0],"end":[1149,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:450:2354","0:451:2357","0:452:2384","0:453:2387","0:454:2346","0:456:2352","0:458:2355","0:460:2360","0:462:2385","0:464:2389","0:466:2393","0:467:2391","0:468:2371","0:470:2401","0:472:2366","0:473:2368","0:474:2397","0:475:2413","0:479:2412","0:484:2411","0:489:2348","0:490:2351"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3247:115":{"id":"2:3247:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3411:2844":{"id":"2:3411:2844","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:181","2:3414:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13518:4045":{"id":"2:13518:4045","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"str::slice_mut_unchecked":"1:16010:2675","`str`":"1:16010:2675","crate::ops::Index":"2:3577:2851"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:399:1600":{"id":"b:2:2869-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3202-0:69:1587":{"id":"b:2:3202-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10391:3198":{"id":"2:10391:3198","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10392:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:89:1865":{"id":"0:89:1865","crate_id":0,"name":"wait_for","span":{"filename":"src/condvar.rs","begin":[379,4],"end":[386,5]},"visibility":"public","docs":"Waits on this condition variable for a notification, timing out after a\nspecified duration.\n\nThe semantics of this function are equivalent to `wait()` except that\nthe thread will be blocked for roughly no longer than `timeout`. This\nmethod should not be used for precise timing due to anomalies such as\npreemption or platform differences that may not cause the maximum\namount of time waited to be precisely `timeout`.\n\nNote that the best effort is made to ensure that the time waited is\nmeasured with a monotonic clock, and not affected by the changes made to\nthe system time.\n\nThe returned `WaitTimeoutResult` value indicates if the timeout is\nknown to have elapsed.\n\nLike `wait`, the lock specified will be re-acquired when this function\nreturns, regardless of whether the timeout elapsed or not.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex_guard",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MutexGuard","id":"0:148:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:676:408":{"id":"0:676:408","crate_id":0,"name":"clone","span":{"filename":"src/condvar.rs","begin":[22,37],"end":[22,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:439:2395":{"id":"0:439:2395","crate_id":0,"name":"unlock_upgradable_fair","span":{"filename":"src/raw_rwlock.rs","begin":[399,4],"end":[417,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:475:2413":{"id":"0:475:2413","crate_id":0,"name":"wake_parked_threads","span":{"filename":"src/raw_rwlock.rs","begin":[935,4],"end":[969,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":"Common code for waking up parked threads after releasing WRITER_BIT or\nUPGRADABLE_BIT.\n\n# Safety\n\n`callback` must uphold the requirements of the `callback` parameter to\n`parking_lot_core::unpark_filter`. Meaning no panics or calls into any function in\n`parking_lot`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["new_state",{"kind":"primitive","inner":"usize"}],["callback",{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"22:316:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"22:376:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"impl FnOnce(usize, UnparkResult) -> UnparkToken","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"UnparkResult","id":"22:316:1719","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"22:376:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:433:2383":{"id":"0:433:2383","crate_id":0,"name":"lock_upgradable","span":{"filename":"src/raw_rwlock.rs","begin":[324,4],"end":[330,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:467:2391":{"id":"0:467:2391","crate_id":0,"name":"upgrade_slow","span":{"filename":"src/raw_rwlock.rs","begin":[870,4],"end":[872,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:69:1587":{"id":"a:2:3269:211-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:195:1596":{"id":"b:2:3202-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:420:121":{"id":"0:420:121","crate_id":0,"name":"Duration","span":{"filename":"src/raw_rwlock.rs","begin":[206,4],"end":[206,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:23217:4441":{"id":"2:23217:4441","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:23854:4411","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23208:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13618:54454":{"id":"2:13618:54454","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2994-0:295:1599":{"id":"a:2:9339:2994-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13499:1995":{"id":"2:13499:1995","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13522:4626":{"id":"2:13522:4626","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49528:4590","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2994-0:229:1598":{"id":"a:2:9339:2994-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:505:1603":{"id":"b:2:2869-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:695":{"id":"0:695","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[21,37],"end":[21,42]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:696:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3202-0:662:1588":{"id":"b:2:3202-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8523:120":{"id":"2:8523:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8524:3227","2:8525:3228","2:8526:3229","2:8527:3230","2:8531:3231","2:8534:3232"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:415:2365":{"id":"0:415:2365","crate_id":0,"name":"bump_shared","span":{"filename":"src/raw_rwlock.rs","begin":[175,4],"end":[181,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13619:54451":{"id":"2:13619:54451","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:299:1583":{"id":"0:299:1583","crate_id":0,"name":"GuardMarker","span":{"filename":"src/raw_mutex.rs","begin":[63,4],"end":[63,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"GuardNoSend","id":"20:8:1586","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3213-0:505:1603":{"id":"b:2:3213-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:229:1598":{"id":"a:2:3269:211-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3337:2829":{"id":"2:3337:2829","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3339:181","2:3340:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6107:54452":{"id":"5:6107:54452","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16010:2675"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:403:1583":{"id":"0:403:1583","crate_id":0,"name":"GuardMarker","span":{"filename":"src/raw_rwlock.rs","begin":[64,4],"end":[64,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"GuardNoSend","id":"20:8:1586","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13862:150":{"id":"2:13862:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13863:181","2:13864:150","2:13865:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3342:2834":{"id":"2:3342:2834","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"21:28:53714":{"id":"21:28:53714","crate_id":21,"name":"Strategy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:29:61633"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2869-0:229:1598":{"id":"b:2:2869-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13529:32634":{"id":"2:13529:32634","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49850:4607","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10383:3195":{"id":"2:10383:3195","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10384:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13509:54869":{"id":"2:13509:54869","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16021:2684"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6437:3885":{"id":"1:6437:3885","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6438:4197","1:6439:4198","1:6440:7331","1:6441:54107","1:6443:54111","1:6445:54108","1:6446:54109","1:6448:54110"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3277:218":{"id":"2:3277:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:409:2358":{"id":"0:409:2358","crate_id":0,"name":"unlock_shared","span":{"filename":"src/raw_rwlock.rs","begin":[129,4],"end":[139,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:464:2389":{"id":"0:464:2389","crate_id":0,"name":"unlock_upgradable_slow","span":{"filename":"src/raw_rwlock.rs","begin":[782,4],"end":[848,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["force_fair",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310:2286":{"id":"0:310:2286","crate_id":0,"name":"try_lock_until","span":{"filename":"src/raw_mutex.rs","begin":[146,4],"end":[160,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23169:16681":{"id":"2:23169:16681","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23170:8551","2:23171:58972","2:23172:58973"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23162:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:535:1612":{"id":"0:535:1612","crate_id":0,"name":"RwLockWriteGuard","span":{"filename":"src/rwlock.rs","begin":[104,0],"end":[104,80]},"visibility":"public","docs":"RAII structure used to release the exclusive write access of a lock when\ndropped.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::RwLockWriteGuard","id":"20:695:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"a:2:3310:2896-0:677:1597":{"id":"a:2:3310:2896-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:85:1831":{"id":"0:85:1831","crate_id":0,"name":"wait_until_internal","span":{"filename":"src/condvar.rs","begin":[296,4],"end":[358,5]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:411:2361":{"id":"0:411:2361","crate_id":0,"name":"is_locked_exclusive","span":{"filename":"src/raw_rwlock.rs","begin":[148,4],"end":[151,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:677:1597":{"id":"b:2:3202-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:672":{"id":"0:672","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[22,27],"end":[22,29]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:571:1583":{"id":"0:571:1583","crate_id":0,"name":"GuardMarker","span":{"filename":"src/lib.rs","begin":[39,0],"end":[39,41]},"visibility":"crate","docs":null,"links":{},"attrs":["#[cfg(not(feature = \"send_guard\"))]"],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::GuardNoSend","id":"20:8:1586","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}},"2:10655:4008":{"id":"2:10655:4008","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10656:146","2:10657:33855","2:10658:56828"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3368:2835":{"id":"2:3368:2835","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:544:1611":{"id":"0:544:1611","crate_id":0,"name":"RwLockUpgradableReadGuard","span":{"filename":"src/rwlock.rs","begin":[126,0],"end":[126,98]},"visibility":"public","docs":"RAII structure used to release the upgradable read access of a lock when\ndropped.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::RwLockUpgradableReadGuard","id":"20:760:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:435:2388":{"id":"0:435:2388","crate_id":0,"name":"unlock_upgradable","span":{"filename":"src/raw_rwlock.rs","begin":[346,4],"end":[364,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13568:60438":{"id":"2:13568:60438","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:2993-0:677:1597":{"id":"a:2:9340:2993-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:100:1886":{"id":"0:100:1886","crate_id":0,"name":"wait_while_for","span":{"filename":"src/condvar.rs","begin":[496,4],"end":[507,5]},"visibility":"public","docs":"Waits on this condition variable for a notification, timing out after a\nspecified duration. If the provided condition evaluates to `false`,\nthen the thread is no longer blocked and the operation is completed.\nIf the condition evaluates to `true`, then the thread is blocked again\nand waits for another notification before repeating this process.\n\nThe semantics of this function are equivalent to `wait()` except that\nthe thread will be blocked for roughly no longer than `timeout`. This\nmethod should not be used for precise timing due to anomalies such as\npreemption or platform differences that may not cause the maximum\namount of time waited to be precisely `timeout`.\n\nNote that the best effort is made to ensure that the time waited is\nmeasured with a monotonic clock, and not affected by the changes made to\nthe system time.\n\nThe returned `WaitTimeoutResult` value indicates if the timeout is\nknown to have elapsed.\n\nLike `wait`, the lock specified will be re-acquired when this function\nreturns, regardless of whether the timeout elapsed or not.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex_guard",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MutexGuard","id":"0:148:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],["condition",{"kind":"generic","inner":"F"}],["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:295:1599":{"id":"b:2:3208-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:789:3290":{"id":"5:789:3290","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"a:2:3310:2896-0:69:1587":{"id":"a:2:3310:2896-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"20:523:2362":{"id":"20:523:2362","crate_id":20,"name":"RawRwLockFair","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:524:2363","20:525:2364","20:526:2365","20:527:2367"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"20:512:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:445:2403":{"id":"0:445:2403","crate_id":0,"name":"try_lock_upgradable_until","span":{"filename":"src/raw_rwlock.rs","begin":[454,4],"end":[464,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:557:2244":{"id":"0:557:2244","crate_id":0,"name":"unchecked_unwrap","span":{"filename":"src/util.rs","begin":[12,4],"end":[12,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}},"2:4051:3880":{"id":"2:4051:3880","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4052:58235"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:671":{"id":"0:671","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[22,27],"end":[22,29]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22957:4438":{"id":"2:22957:4438","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22958:4428","2:22959:1247","2:22960:1272"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:402:2092":{"id":"0:402:2092","crate_id":0,"name":"INIT","span":{"filename":"src/raw_rwlock.rs","begin":[60,4],"end":[62,6]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_const","inner":{"type":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}},"0:246:2287":{"id":"0:246:2287","crate_id":0,"name":"try_lock_for","span":{"filename":"src/raw_fair_mutex.rs","begin":[62,4],"end":[64,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"qualified_path","inner":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"20:42:2285","args":null}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13507:60433":{"id":"2:13507:60433","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:193:2192":{"id":"0:193:2192","crate_id":0,"name":"poisoned","span":{"filename":"src/once.rs","begin":[42,4],"end":[47,5]},"visibility":"public","docs":"Returns whether the associated `Once` has been poisoned.\n\nOnce an initialization routine for a `Once` has panicked it will forever\nindicate to future forced initialization routines that it is poisoned.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3406:2842":{"id":"2:3406:2842","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:181","2:3409:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:229:1598":{"id":"b:2:2872-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3281:220-0:295:1599":{"id":"a:2:3281:220-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3212:1417":{"id":"2:3212:1417","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234:1583":{"id":"0:234:1583","crate_id":0,"name":"GuardMarker","span":{"filename":"src/raw_fair_mutex.rs","begin":[17,4],"end":[17,69]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"GuardMarker","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"trait":{"name":"RawMutex","id":"20:32:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:451:2357":{"id":"0:451:2357","crate_id":0,"name":"try_lock_shared_slow","span":{"filename":"src/raw_rwlock.rs","begin":[539,4],"end":[567,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["recursive",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232":{"id":"0:232","crate_id":0,"name":null,"span":{"filename":"src/raw_fair_mutex.rs","begin":[14,0],"end":[38,1]},"visibility":{"restricted":{"parent":"0:222:1573","path":"::raw_fair_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_locked"],"trait":{"name":"RawMutex","id":"20:32:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:233:2092","0:234:1583","0:235:1860","0:236:2114","0:237:1853","0:238:2284"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3169:74":{"id":"2:3169:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3171:3225"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13600:15392":{"id":"2:13600:15392","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2869-0:295:1599":{"id":"b:2:2869-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:684:2188":{"id":"0:684:2188","crate_id":0,"name":"Done","span":{"filename":"src/once.rs","begin":[33,4],"end":[33,8]},"visibility":"default","docs":"A closure has completed successfully.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"2:13617:4718":{"id":"2:13617:4718","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13597:60449":{"id":"2:13597:60449","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:207:2242":{"id":"0:207:2242","crate_id":0,"name":"call_once_slow","span":{"filename":"src/once.rs","begin":[205,4],"end":[315,5]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["ignore_poison",{"kind":"primitive","inner":"bool"}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":null}}},"generic_params":[]}],"lifetime":null}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6103:61092":{"id":"5:6103:61092","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3269:211-0:295:1599":{"id":"a:2:3269:211-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13153:4334":{"id":"2:13153:4334","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13155:4353","2:13156:922","2:13157:59451","2:13158:59452"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4002-0:295:1599":{"id":"b:2:4002-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:667":{"id":"0:667","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[22,16],"end":[22,25]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13164:4330":{"id":"2:13164:4330","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10620:146":{"id":"2:10620:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10621:652","2:10622:2528","2:10623:54244","2:10624:54245","2:10625:54246","2:10626:54247","2:10627:54248","2:10628:54249","2:10629:54250","2:10630:54251","2:10631:54252","2:10632:54253","2:10633:54254","2:10634:54255","2:10635:54256","2:10636:1533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8442:4292":{"id":"2:8442:4292","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8444:3282"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/util.rs","begin":[15,0],"end":[23,1]},"visibility":{"restricted":{"parent":"0:547:1578","path":"::util"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UncheckedOptionExt","id":"0:555:2173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:560:2244"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:236:2114":{"id":"0:236:2114","crate_id":0,"name":"try_lock","span":{"filename":"src/raw_fair_mutex.rs","begin":[25,4],"end":[27,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:3290","5:785:3291","5:786:3292"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:694:604":{"id":"0:694:604","crate_id":0,"name":"eq","span":{"filename":"src/once.rs","begin":[21,26],"end":[21,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4002-0:677:1597":{"id":"b:2:4002-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:659":{"id":"0:659","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[56,0],"end":[56,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"::lock_api","name":"lock_api","id":"20:0:1584","glob":false}},"0:454:2346":{"id":"0:454:2346","crate_id":0,"name":"lock_exclusive_slow","span":{"filename":"src/raw_rwlock.rs","begin":[612,4],"end":[645,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13590:60445":{"id":"2:13590:60445","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:547:1578":{"id":"0:547:1578","crate_id":0,"name":"util","span":{"filename":"src/util.rs","begin":[8,0],"end":[38,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:555:2173","0:561:1459","0:562:1867"],"is_stripped":false}},"2:13583:60442":{"id":"2:13583:60442","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13134:4331","`DoubleEndedIterator`":"2:8523:120","prim@char":"1:16004:2670","str::match_indices":"1:16010:2675"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49726:4600","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[43,22],"end":[43,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::mutex::const_mutex","name":"const_mutex","id":"0:146:1593","glob":false}},"2:3364:2832":{"id":"2:3364:2832","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3365:181","2:3366:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:190:2178":{"id":"0:190:2178","crate_id":0,"name":"LOCKED_BIT","span":{"filename":"src/once.rs","begin":[17,0],"end":[17,25]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"4","value":"4u8","is_literal":true}},"0:199:920":{"id":"0:199:920","crate_id":0,"name":"new","span":{"filename":"src/once.rs","begin":[88,4],"end":[90,5]},"visibility":"public","docs":"Creates a new `Once` value.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:434:2386":{"id":"0:434:2386","crate_id":0,"name":"try_lock_upgradable","span":{"filename":"src/raw_rwlock.rs","begin":[333,4],"end":[343,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322:1575":{"id":"0:322:1575","crate_id":0,"name":"raw_rwlock","span":{"filename":"src/raw_rwlock.rs","begin":[8,0],"end":[1149,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:390:2179","0:391:2331","0:392:2333","0:393:2335","0:394:2337","0:395:2339","0:396:2341","0:397:2342","0:398:2343","0:399:1600"],"is_stripped":false}},"1:7795:4099":{"id":"1:7795:4099","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7796:58251"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3384:2838":{"id":"2:3384:2838","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3386:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10610:142":{"id":"2:10610:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10611:715","2:10613:56212"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:528:2369":{"id":"20:528:2369","crate_id":20,"name":"RawRwLockDowngrade","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:529:2370"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"20:512:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:678:2182":{"id":"0:678:2182","crate_id":0,"name":"New","span":{"filename":"src/once.rs","begin":[24,4],"end":[24,7]},"visibility":"default","docs":"A closure has not been executed yet","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain"}},"0:81:1827":{"id":"0:81:1827","crate_id":0,"name":"wait","span":{"filename":"src/condvar.rs","begin":[255,4],"end":[257,5]},"visibility":"public","docs":"Blocks the current thread until this condition variable receives a\nnotification.\n\nThis function will atomically unlock the mutex specified (represented by\n`mutex_guard`) and block the current thread. This means that any calls\nto `notify_*()` which happen logically after the mutex is unlocked are\ncandidates to wake this thread up. When this function call returns, the\nlock specified will have been re-acquired.\n\n# Panics\n\nThis function will panic if another thread is waiting on the `Condvar`\nwith a different `Mutex` object.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex_guard",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MutexGuard","id":"0:148:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:440:2396":{"id":"0:440:2396","crate_id":0,"name":"bump_upgradable","span":{"filename":"src/raw_rwlock.rs","begin":[420,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:399:1600":{"id":"b:2:3208-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13620:54450":{"id":"2:13620:54450","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8475:136":{"id":"2:8475:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8477:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5789:3900":{"id":"1:5789:3900","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:56947"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:308:121":{"id":"0:308:121","crate_id":0,"name":"Duration","span":{"filename":"src/raw_mutex.rs","begin":[142,4],"end":[142,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:631":{"id":"0:631","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,67],"end":[49,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::remutex::ReentrantMutex","name":"ReentrantMutex","id":"0:511:1604","glob":false}},"2:13606:60450":{"id":"2:13606:60450","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3310:2896-0:662:1588":{"id":"a:2:3310:2896-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2872-0:677:1597":{"id":"b:2:2872-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3505:1721":{"id":"2:3505:1721","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3506:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3492:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:191:2179":{"id":"0:191:2179","crate_id":0,"name":"PARKED_BIT","span":{"filename":"src/once.rs","begin":[18,0],"end":[18,25]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"8","value":"8u8","is_literal":true}},"a:2:3310:2896-0:195:1596":{"id":"a:2:3310:2896-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:606":{"id":"0:606","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[44,21],"end":[44,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::once::Once","name":"Once","id":"0:195:1596","glob":false}},"2:13514:54867":{"id":"2:13514:54867","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:315:2313":{"id":"0:315:2313","crate_id":0,"name":"lock_slow","span":{"filename":"src/raw_mutex.rs","begin":[210,4],"end":[289,5]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:458:2355":{"id":"0:458:2355","crate_id":0,"name":"lock_shared_slow","span":{"filename":"src/raw_rwlock.rs","begin":[676,4],"end":[720,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["recursive",{"kind":"primitive","inner":"bool"}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:1569":{"id":"0:107:1569","crate_id":0,"name":"elision","span":{"filename":"src/elision.rs","begin":[8,0],"end":[112,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:111:2026","0:115:2031"],"is_stripped":false}},"2:13574:2749":{"id":"2:13574:2749","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:8523:120","str::matches":"1:16010:2675","self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49762:4602","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:2993-0:662:1588":{"id":"a:2:9340:2993-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13508:304":{"id":"2:13508:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:16010:2675","`u8`":"1:16021:2684"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6685:3866":{"id":"1:6685:3866","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6686:56898","1:6687:8357","1:6688:8358","1:6689:8360","1:6690:8359","1:6691:8361","1:6692:8362","1:6693:8364","1:6694:6067","1:6695:8367","1:6696:8368","1:6697:8369","1:6698:8370","1:6699:8371","1:6700:8372","1:6701:8365","1:6702:8366"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:693":{"id":"0:693","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[21,26],"end":[21,35]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:694:604"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:491:1576":{"id":"0:491:1576","crate_id":0,"name":"remutex","span":{"filename":"src/remutex.rs","begin":[8,0],"end":[149,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:505:1603","0:511:1604","0:513:1601","0:515:1605","0:518:1602"],"is_stripped":false}},"a:2:3281:220-0:69:1587":{"id":"a:2:3281:220-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:400:1326":{"id":"0:400:1326","crate_id":0,"name":"state","span":{"filename":"src/raw_rwlock.rs","begin":[56,4],"end":[56,22]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AtomicUsize","id":"2:48190:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:240:2283":{"id":"0:240:2283","crate_id":0,"name":"unlock_fair","span":{"filename":"src/raw_fair_mutex.rs","begin":[42,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:68:1727":{"id":"0:68:1727","crate_id":0,"name":"timed_out","span":{"filename":"src/condvar.rs","begin":[28,4],"end":[30,5]},"visibility":"public","docs":"Returns whether the wait was known to have timed out.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3435:2849":{"id":"2:3435:2849","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3437:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13594:60448":{"id":"2:13594:60448","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13164:4330","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:399:1600":{"id":"b:2:3213-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3208-0:229:1598":{"id":"b:2:3208-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:609":{"id":"0:609","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[44,27],"end":[44,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::once::OnceState","name":"OnceState","id":"0:677:1597","glob":false}},"2:13615:4529":{"id":"2:13615:4529","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13073:2952","`FromStr`":"2:13073:2952"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13073:2952","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13073:2952","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:599":{"id":"0:599","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[43,53],"end":[43,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::mutex::Mutex","name":"Mutex","id":"0:144:162","glob":false}},"0:244:1723":{"id":"0:244:1723","crate_id":0,"name":"Instant","span":{"filename":"src/raw_fair_mutex.rs","begin":[54,4],"end":[54,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"trait":{"name":"RawMutexTimed","id":"20:42:2285","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:3734:137":{"id":"2:3734:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3736:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3740:2857":{"id":"2:3740:2857","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3742:57656"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"20:265:2437":{"id":"20:265:2437","crate_id":20,"name":"GetThreadId","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:266:2092","20:267:2439"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:2572:127":{"id":"1:2572:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2573:54216","1:2575:58704","1:2576:58705","1:2577:58235"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10379:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13512:2123":{"id":"2:13512:2123","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47591:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13519:60434":{"id":"2:13519:60434","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3581:2852","`str`":"1:16010:2675","str::slice_unchecked":"1:16010:2675"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13516:54868":{"id":"2:13516:54868","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11014:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:12581:4711":{"id":"2:12581:4711","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12582:3236","2:12583:59587"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3492:116":{"id":"2:3492:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:221","2:3494:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4666:3909":{"id":"1:4666:3909","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4667:2527","1:4668:56270","1:4670:56271","1:4671:56272","1:4672:3923","1:4673:56269","1:4674:56268","1:4676:56273","1:4677:3260","1:4678:4050","1:4679:3244","1:4681:2243"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:456:2352":{"id":"0:456:2352","crate_id":0,"name":"unlock_exclusive_slow","span":{"filename":"src/raw_rwlock.rs","begin":[648,4],"end":[673,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["force_fair",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:204:2252":{"id":"0:204:2252","crate_id":0,"name":"call_once_force","span":{"filename":"src/once.rs","begin":[179,4],"end":[191,5]},"visibility":"public","docs":"Performs the same function as `call_once` except ignores poisoning.\n\nIf this `Once` has been poisoned (some initialization panicked) then\nthis function will continue to attempt to call initialization functions\nuntil one of them doesn't panic.\n\nThe closure `f` is yielded a structure which can be used to query the\nstate of this `Once` (whether initialization has previously panicked or\nnot).","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:69:1587":{"id":"b:2:3198-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:77:1811":{"id":"0:77:1811","crate_id":0,"name":"notify_all","span":{"filename":"src/condvar.rs","begin":[187,4],"end":[195,5]},"visibility":"public","docs":"Wakes up all blocked threads on this condvar.\n\nReturns the number of threads woken up.\n\nThis method will ensure that any current waiters on the condition\nvariable are awoken. Calls to `notify_all()` are not buffered in any\nway.\n\nTo wake up only one thread, see `notify_one()`.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2957:177":{"id":"2:2957:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2958:415","2:2959:3176","2:2960:3173","2:2961:3224"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3310:2896-0:505:1603":{"id":"a:2:3310:2896-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:243:121":{"id":"0:243:121","crate_id":0,"name":"Duration","span":{"filename":"src/raw_fair_mutex.rs","begin":[53,4],"end":[53,68]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"trait":{"name":"RawMutexTimed","id":"20:42:2285","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13580:60441":{"id":"2:13580:60441","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670","str::rmatch_indices":"1:16010:2675","`DoubleEndedIterator`":"2:8523:120"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49708:4599","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:195:1596":{"id":"b:2:3213-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:94:1875":{"id":"0:94:1875","crate_id":0,"name":"wait_while","span":{"filename":"src/condvar.rs","begin":[425,4],"end":[431,5]},"visibility":"public","docs":"Blocks the current thread until this condition variable receives a\nnotification. If the provided condition evaluates to `false`, then the\nthread is no longer blocked and the operation is completed. If the\ncondition evaluates to `true`, then the thread is blocked again and\nwaits for another notification before repeating this process.\n\nThis function will atomically unlock the mutex specified (represented by\n`mutex_guard`) and block the current thread. This means that any calls\nto `notify_*()` which happen logically after the mutex is unlocked are\ncandidates to wake this thread up. When this function call returns, the\nlock specified will have been re-acquired.\n\n# Panics\n\nThis function will panic if another thread is waiting on the `Condvar`\nwith a different `Mutex` object.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex_guard",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MutexGuard","id":"0:148:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],["condition",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3440:2850":{"id":"2:3440:2850","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3442:1237"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8548:2897":{"id":"2:8548:2897","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8549:793","2:8550:1995"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3104:4373":{"id":"2:3104:4373","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3103:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:438":{"id":"0:438","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[397,0],"end":[425,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["bump_upgradable"],"trait":{"name":"RawRwLockUpgradeFair","id":"20:549:2394","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:439:2395","0:440:2396"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13588:60444":{"id":"2:13588:60444","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4783:4415":{"id":"2:4783:4415","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4784:3236","2:4785:59721","2:4786:3239"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:314:1816":{"id":"0:314:1816","crate_id":0,"name":"mark_parked","span":{"filename":"src/raw_mutex.rs","begin":[205,4],"end":[207,5]},"visibility":"crate","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:69:1587":{"id":"b:2:2872-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2869-0:677:1597":{"id":"b:2:2869-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3310:2896-0:399:1600":{"id":"a:2:3310:2896-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:391:2331":{"id":"0:391:2331","crate_id":0,"name":"WRITER_PARKED_BIT","span":{"filename":"src/raw_rwlock.rs","begin":[37,0],"end":[37,40]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"0b0010","value":"2usize","is_literal":true}},"0:398:2343":{"id":"0:398:2343","crate_id":0,"name":"TOKEN_UPGRADABLE","span":{"filename":"src/raw_rwlock.rs","begin":[52,0],"end":[52,75]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"22:391:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"20:32:1599":{"id":"20:32:1599","crate_id":20,"name":"RawMutex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:33:2092","20:34:1583","20:35:1860","20:36:2114","20:37:1853","20:38:2284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3522:131":{"id":"2:3522:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:137:1571":{"id":"0:137:1571","crate_id":0,"name":"mutex","span":{"filename":"src/mutex.rs","begin":[8,0],"end":[312,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:144:162","0:146:1593","0:148:1595","0:151:1594"],"is_stripped":false}},"2:3372:2839":{"id":"2:3372:2839","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:1356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13530:54905":{"id":"2:13530:54905","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:309:1723":{"id":"0:309:1723","crate_id":0,"name":"Instant","span":{"filename":"src/raw_mutex.rs","begin":[143,4],"end":[143,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:447:2405":{"id":"0:447:2405","crate_id":0,"name":"try_upgrade_until","span":{"filename":"src/raw_rwlock.rs","begin":[480,4],"end":[490,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:392:2333":{"id":"0:392:2333","crate_id":0,"name":"UPGRADABLE_BIT","span":{"filename":"src/raw_rwlock.rs","begin":[40,0],"end":[40,37]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"0b0100","value":"4usize","is_literal":true}},"2:23545:4429":{"id":"2:23545:4429","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23546:1270","2:23547:1269","2:23548:1267","2:23549:1266"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:22957:4438","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:419":{"id":"0:419","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[205,0],"end":[268,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockTimed","id":"20:530:2372","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:420:121","0:421:1723","0:422:2373","0:423:2374","0:424:2375","0:425:2376"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:22831:4437":{"id":"2:22831:4437","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22832:4428","2:22833:58997","2:22834:59235","2:22835:59236","2:22836:59237","2:22837:42996","2:22838:59238","2:22839:59239","2:22840:59240","2:22841:59241","2:22842:59242","2:22843:59243","2:22844:59244","2:22845:59245","2:22846:59246","2:22847:59247","2:22848:59069","2:22849:59248","2:22850:59249","2:22851:59250","2:22852:59251","2:22853:58998","2:22854:58999","2:22855:59000","2:22856:59001"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:22933:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:436:2390":{"id":"0:436:2390","crate_id":0,"name":"upgrade","span":{"filename":"src/raw_rwlock.rs","begin":[367,4],"end":[376,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13498:793":{"id":"2:13498:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:664:1542":{"id":"0:664:1542","crate_id":0,"name":"0","span":{"filename":"src/condvar.rs","begin":[23,29],"end":[23,33]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:3274:1829":{"id":"2:3274:1829","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13547:53920":{"id":"2:13547:53920","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"1:16010:2675","self::pattern":"2:13134:4331","prim@char":"1:16004:2670","str::split_whitespace":"1:16010:2675","`DoubleEndedIterator`":"2:8523:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49558:3933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:312":{"id":"0:312","crate_id":0,"name":null,"span":{"filename":"src/raw_mutex.rs","begin":[180,0],"end":[331,1]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:313:1795","0:314:1816","0:315:2313","0:319:2315","0:321:2316"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3352:2830":{"id":"2:3352:2830","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:181","2:3355:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3729:224":{"id":"2:3729:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3730:181","2:3731:2857","2:3732:686","2:3733:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3734:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3729:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:641":{"id":"0:641","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,18],"end":[53,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::rwlock::MappedRwLockReadGuard","name":"MappedRwLockReadGuard","id":"0:538:1607","glob":false}},"b:2:3213-0:229:1598":{"id":"b:2:3213-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13553:54899":{"id":"2:13553:54899","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8523:120","str::split":"1:16010:2675","self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49576:4566","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:622":{"id":"0:622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,4],"end":[49,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::remutex::const_reentrant_mutex","name":"const_reentrant_mutex","id":"0:513:1601","glob":false}},"a:2:9340:2993-0:195:1596":{"id":"a:2:9340:2993-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6091:61091":{"id":"5:6091:61091","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3213-0:677:1597":{"id":"b:2:3213-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:319:2315":{"id":"0:319:2315","crate_id":0,"name":"unlock_slow","span":{"filename":"src/raw_mutex.rs","begin":[292,4],"end":[323,5]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["force_fair",{"kind":"primitive","inner":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3525:132":{"id":"2:3525:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3527:181","2:3528:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:242":{"id":"0:242","crate_id":0,"name":null,"span":{"filename":"src/raw_fair_mutex.rs","begin":[52,0],"end":[65,1]},"visibility":{"restricted":{"parent":"0:222:1573","path":"::raw_fair_mutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawMutexTimed","id":"20:42:2285","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:243:121","0:244:1723","0:245:2286","0:246:2287"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:144:162":{"id":"0:144:162","crate_id":0,"name":"Mutex","span":{"filename":"src/mutex.rs","begin":[87,0],"end":[87,49]},"visibility":"public","docs":"A mutual exclusion primitive useful for protecting shared data\n\nThis mutex will block threads waiting for the lock to become available. The\nmutex can be statically initialized or created by the `new`\nconstructor. Each mutex has a type parameter which represents the data that\nit is protecting. The data can only be accessed through the RAII guards\nreturned from `lock` and `try_lock`, which guarantees that the data is only\never accessed when the mutex is locked.\n\n# Fairness\n\nA typical unfair lock can often end up in a situation where a single thread\nquickly acquires and releases the same mutex in succession, which can starve\nother threads waiting to acquire the mutex. While this improves throughput\nbecause it doesn't force a context switch when a thread tries to re-acquire\na mutex it has just released, this can starve other threads.\n\nThis mutex uses [eventual fairness](https://trac.webkit.org/changeset/203350)\nto ensure that the lock will be fair on average without sacrificing\nthroughput. This is done by forcing a fair unlock on average every 0.5ms,\nwhich will force the lock to go to the next thread waiting for the mutex.\n\nAdditionally, any critical section longer than 1ms will always use a fair\nunlock, which has a negligible impact on throughput considering the length\nof the critical section.\n\nYou can also force a fair unlock by calling `MutexGuard::unlock_fair` when\nunlocking a mutex instead of simply dropping the `MutexGuard`.\n\n# Differences from the standard library `Mutex`\n\n- No poisoning, the lock is released normally on panic.\n- Only requires 1 byte of space, whereas the standard library boxes the\n  `Mutex` due to platform limitations.\n- Can be statically constructed.\n- Does not require any drop glue when dropped.\n- Inline fast path for the uncontended case.\n- Efficient handling of micro-contention using adaptive spinning.\n- Allows raw locking & unlocking without a guard.\n- Supports eventual fairness so that the mutex is fair on average.\n- Optionally allows making the mutex fair by calling `MutexGuard::unlock_fair`.\n\n# Examples\n\n```\nuse parking_lot::Mutex;\nuse std::sync::{Arc, mpsc::channel};\nuse std::thread;\n\nconst N: usize = 10;\n\n// Spawn a few threads to increment a shared variable (non-atomically), and\n// let the main thread know once all increments are done.\n//\n// Here we're using an Arc to share memory among threads, and the data inside\n// the Arc is protected with a mutex.\nlet data = Arc::new(Mutex::new(0));\n\nlet (tx, rx) = channel();\nfor _ in 0..10 {\n    let (data, tx) = (Arc::clone(&data), tx.clone());\n    thread::spawn(move || {\n        // The shared state can only be accessed once the lock is held.\n        // Our non-atomic increment is safe because we're the only thread\n        // which can access the shared state when the lock is held.\n        let mut data = data.lock();\n        *data += 1;\n        if *data == N {\n            tx.send(()).unwrap();\n        }\n        // the lock is unlocked here when `data` goes out of scope.\n    });\n}\n\nrx.recv().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::Mutex","id":"20:47:162","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"a:2:9340:2993-0:505:1603":{"id":"a:2:9340:2993-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2869-0:195:1596":{"id":"b:2:2869-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9339:2994-0:662:1588":{"id":"a:2:9339:2994-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:91:1868":{"id":"0:91:1868","crate_id":0,"name":"wait_while_until_internal","span":{"filename":"src/condvar.rs","begin":[389,4],"end":[407,5]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex_guard",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MutexGuard","id":"0:148:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],["condition",{"kind":"generic","inner":"F"}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3522:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:2993-0:229:1598":{"id":"a:2:9340:2993-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:237:1853":{"id":"0:237:1853","crate_id":0,"name":"unlock","span":{"filename":"src/raw_fair_mutex.rs","begin":[30,4],"end":[32,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:560:2244":{"id":"0:560:2244","crate_id":0,"name":"unchecked_unwrap","span":{"filename":"src/util.rs","begin":[17,4],"end":[22,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:441":{"id":"0:441","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[427,0],"end":[450,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockUpgradeDowngrade","id":"20:552:2398","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:442:2399","0:443:2400"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:421:1723":{"id":"0:421:1723","crate_id":0,"name":"Instant","span":{"filename":"src/raw_rwlock.rs","begin":[207,4],"end":[207,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13612:60452":{"id":"2:13612:60452","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13134:4331","prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:583":{"id":"0:583","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[42,45],"end":[42,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fair_mutex::FairMutex","name":"FairMutex","id":"0:127:1590","glob":false}},"2:3577:2851":{"id":"2:3577:2851","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3579:181","2:3580:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:6459:3888":{"id":"1:6459:3888","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6460:56858","1:6461:8432","1:6462:56859","1:6463:56860","1:6464:56861","1:6465:56862"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3775:2862":{"id":"2:3775:2862","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:116":{"id":"0:116","crate_id":0,"name":null,"span":{"filename":"src/elision.rs","begin":[39,0],"end":[51,1]},"visibility":{"restricted":{"parent":"0:107:1569","path":"::elision"}},"docs":null,"links":{},"attrs":["#[cfg(not(all(feature = \"hardware-lock-elision\",\nany(target_arch = \"x86\", target_arch = \"x86_64\"))))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AtomicElisionExt","id":"0:111:2026","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"AtomicUsize","id":"2:48190:92","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:117:2027","0:118:2028","0:119:2030"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:444":{"id":"0:444","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[452,0],"end":[504,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockUpgradeTimed","id":"20:555:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:445:2403","0:446:2404","0:447:2405","0:448:2406"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:9339:2994":{"id":"2:9339:2994","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:201:378":{"id":"0:201:378","crate_id":0,"name":"call_once","span":{"filename":"src/once.rs","begin":[157,4],"end":[167,5]},"visibility":"public","docs":"Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.\n\nThis method will block the calling thread if another initialization\nroutine is currently running.\n\nWhen this function returns, it is guaranteed that some initialization\nhas run and completed (it may not be the closure specified). It is also\nguaranteed that any memory writes performed by the executed closure can\nbe reliably observed by other threads at this point (there is a\nhappens-before relation between the closure and code executing after the\nreturn).\n\n# Examples\n\n```\nuse parking_lot::Once;\n\nstatic mut VAL: usize = 0;\nstatic INIT: Once = Once::new();\n\n// Accessing a `static mut` is unsafe much of the time, but if we do so\n// in a synchronized fashion (e.g. write once or read all) then we're\n// good to go!\n//\n// This function will only call `expensive_computation` once, and will\n// otherwise always return the value returned from the first invocation.\nfn get_cached_val() -> usize {\n    unsafe {\n        INIT.call_once(|| {\n            VAL = expensive_computation();\n        });\n        VAL\n    }\n}\n\nfn expensive_computation() -> usize {\n    // ...\n# 2\n}\n```\n\n# Panics\n\nThe closure `f` will only be executed once if this is called\nconcurrently amongst many threads. If that closure panics, however, then\nit will *poison* this `Once` instance, causing all future invocations of\n`call_once` to also panic.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3525:132","args":{"parenthesized":{"inputs":[],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3202-0:399:1600":{"id":"b:2:3202-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:618":{"id":"0:618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[47,0],"end":[47,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::raw_rwlock::RawRwLock","name":"RawRwLock","id":"0:399:1600","glob":false}},"0:131:1591":{"id":"0:131:1591","crate_id":0,"name":"FairMutexGuard","span":{"filename":"src/fair_mutex.rs","begin":[92,0],"end":[92,75]},"visibility":"public","docs":"An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\ndropped (falls out of scope), the lock will be unlocked.\n\nThe data protected by the mutex can be accessed through this guard via its\n`Deref` and `DerefMut` implementations.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::MutexGuard","id":"20:103:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"b:2:2872-0:295:1599":{"id":"b:2:2872-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:70:1326":{"id":"0:70:1326","crate_id":0,"name":"state","span":{"filename":"src/condvar.rs","begin":[91,4],"end":[91,30]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AtomicPtr","id":"2:9848:86","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"2:3423:2846":{"id":"2:3423:2846","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3425:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13497":{"id":"2:13497","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12594:1340","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13498:793","2:13499:1995","2:13500:60430","2:13501:60431","2:13503:60432","2:13506:56236","2:13507:60433","2:13508:304","2:13509:54869","2:13510:2425","2:13512:2123","2:13514:54867","2:13516:54868","2:13518:4045","2:13519:60434","2:13520:54889","2:13521:54890","2:13522:4626","2:13523:4360","2:13524:4050","2:13525:32649","2:13526:32639","2:13527:5067","2:13528:60435","2:13529:32634","2:13530:54905","2:13533:54564","2:13536:54566","2:13539:3271","2:13543:3232","2:13547:53920","2:13550:32506","2:13553:54899","2:13556:60436","2:13559:60437","2:13562:54901","2:13565:54903","2:13568:60438","2:13571:60439","2:13574:2749","2:13577:60440","2:13580:60441","2:13583:60442","2:13586:60443","2:13588:60444","2:13590:60445","2:13592:60446","2:13593:60447","2:13594:60448","2:13597:60449","2:13600:15392","2:13603:54906","2:13606:60450","2:13609:60451","2:13612:60452","2:13615:4529","2:13617:4718","2:13618:54454","2:13619:54451","2:13620:54450","2:13621:60453","2:13623:3870","2:13624:60454"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:192":{"id":"0:192","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[36,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:193:2192","0:194:2195"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:530:1606":{"id":"0:530:1606","crate_id":0,"name":"const_rwlock","span":{"filename":"src/rwlock.rs","begin":[94,0],"end":[96,1]},"visibility":"public","docs":"Creates a new instance of an `RwLock<T>` which is unlocked.\n\nThis allows creating a `RwLock<T>` in a constant context on stable Rust.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"RwLock","id":"0:528:1609","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"a:2:3269:211-0:505:1603":{"id":"a:2:3269:211-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5837:4726":{"id":"5:5837:4726","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:1933"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:245:2286":{"id":"0:245:2286","crate_id":0,"name":"try_lock_until","span":{"filename":"src/raw_fair_mutex.rs","begin":[57,4],"end":[59,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"qualified_path","inner":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"20:42:2285","args":null}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9340:2993-0:295:1599":{"id":"a:2:9340:2993-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5719:3895":{"id":"1:5719:3895","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5720:54388","1:5721:54390","1:5722:54389","1:5723:54391"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:656":{"id":"0:656","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,31],"end":[54,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::rwlock::RwLockWriteGuard","name":"RwLockWriteGuard","id":"0:535:1612","glob":false}},"b:2:2872-0:195:1596":{"id":"b:2:2872-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:425:2376":{"id":"0:425:2376","crate_id":0,"name":"try_lock_exclusive_until","span":{"filename":"src/raw_rwlock.rs","begin":[253,4],"end":[267,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:151:1594":{"id":"0:151:1594","crate_id":0,"name":"MappedMutexGuard","span":{"filename":"src/mutex.rs","begin":[110,0],"end":[110,79]},"visibility":"public","docs":"An RAII mutex guard returned by `MutexGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedMutexGuard` and `MutexGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::MappedMutexGuard","id":"20:163:1594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:129:1589":{"id":"0:129:1589","crate_id":0,"name":"const_fair_mutex","span":{"filename":"src/fair_mutex.rs","begin":[83,0],"end":[85,1]},"visibility":"public","docs":"Creates a new fair mutex in an unlocked state ready for use.\n\nThis allows creating a fair mutex in a constant context on stable Rust.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["val",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"FairMutex","id":"0:127:1590","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"}}},"2:10393:3199":{"id":"2:10393:3199","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10394:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5741:3866":{"id":"1:5741:3866","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5742:8014","1:5743:54233","1:5744:6025","1:5745:58257","1:5746:4197","1:5747:4198","1:5748:58258","1:5749:1304","1:5750:58259","1:5751:58260","1:5752:58261","1:5753:58262","1:5754:58263","1:5755:58264","1:5756:58265","1:5757:58266"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,54],"end":[49,65]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::remutex::RawThreadId","name":"RawThreadId","id":"0:505:1603","glob":false}},"a:2:3281:220-0:662:1588":{"id":"a:2:3281:220-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3216:127":{"id":"2:3216:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38888:3876","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13539:3271":{"id":"2:13539:3271","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47591:176","prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:511:1604":{"id":"0:511:1604","crate_id":0,"name":"ReentrantMutex","span":{"filename":"src/remutex.rs","begin":[41,0],"end":[41,80]},"visibility":"public","docs":"A mutex which can be recursively locked by a single thread.\n\nThis type is identical to `Mutex` except for the following points:\n\n- Locking multiple times from the same thread will work correctly instead of\n  deadlocking.\n- `ReentrantMutexGuard` does not give mutable references to the locked data.\n  Use a `RefCell` if you need this.\n\nSee [`Mutex`](type.Mutex.html) for more details about the underlying mutex\nprimitive.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::ReentrantMutex","id":"20:306:1604","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"a:2:3310:2896-0:295:1599":{"id":"a:2:3310:2896-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:696:660":{"id":"0:696:660","crate_id":0,"name":"fmt","span":{"filename":"src/once.rs","begin":[21,37],"end":[21,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115:2031":{"id":"0:115:2031","crate_id":0,"name":"have_elision","span":{"filename":"src/elision.rs","begin":[29,0],"end":[34,1]},"visibility":"public","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:295:1599":{"id":"0:295:1599","crate_id":0,"name":"RawMutex","span":{"filename":"src/raw_mutex.rs","begin":[32,0],"end":[56,1]},"visibility":"public","docs":"Raw mutex type backed by the parking lot.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:296:1326"],"impls":["0:312","a:2:3310:2896-0:295:1599","a:2:3269:211-0:295:1599","a:2:9340:2993-0:295:1599","a:2:9339:2994-0:295:1599","a:2:3281:220-0:295:1599","b:2:3198-0:295:1599","b:2:2872-0:295:1599","b:2:2869-0:295:1599","b:2:4002-0:295:1599","b:2:3202-0:295:1599","b:2:3213-0:295:1599","b:2:3208-0:295:1599","0:297","0:304","0:307"]}},"1:5727:3896":{"id":"1:5727:3896","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5728:6025","1:5729:56439","1:5730:56440"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13526:32639":{"id":"2:13526:32639","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16010:2675"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49841:4606","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:653":{"id":"0:653","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[54,4],"end":[54,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::rwlock::RwLockUpgradableReadGuard","name":"RwLockUpgradableReadGuard","id":"0:544:1611","glob":false}},"0:453:2387":{"id":"0:453:2387","crate_id":0,"name":"try_lock_upgradable_slow","span":{"filename":"src/raw_rwlock.rs","begin":[589,4],"end":[609,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:549:2394":{"id":"20:549:2394","crate_id":20,"name":"RawRwLockUpgradeFair","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:550:2395","20:551:2396"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"20:543:2327","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockFair","id":"20:523:2362","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3269:211-0:195:1596":{"id":"a:2:3269:211-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3178:228":{"id":"2:3178:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3180:127","2:3181:1417"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3347:2831":{"id":"2:3347:2831","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6863:3858":{"id":"1:6863:3858","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:58637"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:218":{"id":"0:218","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[318,0],"end":[323,1]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:219:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:407:2353":{"id":"0:407:2353","crate_id":0,"name":"lock_shared","span":{"filename":"src/raw_rwlock.rs","begin":[107,4],"end":[113,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3401:2841":{"id":"2:3401:2841","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:229:1598":{"id":"0:229:1598","crate_id":0,"name":"RawFairMutex","span":{"filename":"src/raw_fair_mutex.rs","begin":[12,0],"end":[12,34]},"visibility":"public","docs":"Raw fair mutex type backed by the parking lot.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:231:1542"],"impls":["a:2:3310:2896-0:229:1598","a:2:3269:211-0:229:1598","a:2:9340:2993-0:229:1598","a:2:9339:2994-0:229:1598","a:2:3281:220-0:229:1598","b:2:3198-0:229:1598","b:2:2872-0:229:1598","b:2:2869-0:229:1598","b:2:4002-0:229:1598","b:2:3202-0:229:1598","b:2:3213-0:229:1598","b:2:3208-0:229:1598","0:232","0:239","0:242"]}},"0:412":{"id":"0:412","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[154,0],"end":[189,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["bump_shared","bump_exclusive"],"trait":{"name":"RawRwLockFair","id":"20:523:2362","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:413:2363","0:414:2364","0:415:2365","0:416:2367"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:417":{"id":"0:417","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[191,0],"end":[203,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockDowngrade","id":"20:528:2369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:418:2370"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:195:1596":{"id":"0:195:1596","crate_id":0,"name":"Once","span":{"filename":"src/once.rs","begin":[83,0],"end":[83,26]},"visibility":"public","docs":"A synchronization primitive which can be used to run a one-time\ninitialization. Useful for one-time initialization for globals, FFI or\nrelated functionality.\n\n# Differences from the standard library `Once`\n\n- Only requires 1 byte of space, instead of 1 word.\n- Not required to be `'static`.\n- Relaxed memory barriers in the fast path, which can significantly improve\n  performance on some architectures.\n- Efficient handling of micro-contention using adaptive spinning.\n\n# Examples\n\n```\nuse parking_lot::Once;\n\nstatic START: Once = Once::new();\n\nSTART.call_once(|| {\n    // run initialization here\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:197:1542"],"impls":["0:198","a:2:3310:2896-0:195:1596","a:2:3269:211-0:195:1596","a:2:9340:2993-0:195:1596","a:2:9339:2994-0:195:1596","a:2:3281:220-0:195:1596","b:2:3198-0:195:1596","b:2:2872-0:195:1596","b:2:2869-0:195:1596","b:2:4002-0:195:1596","b:2:3202-0:195:1596","b:2:3213-0:195:1596","b:2:3208-0:195:1596","0:218","0:220"]}},"0:423:2374":{"id":"0:423:2374","crate_id":0,"name":"try_lock_shared_until","span":{"filename":"src/raw_rwlock.rs","begin":[223,4],"end":[233,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"qualified_path","inner":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"20:530:2372","args":null}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8963:3717":{"id":"2:8963:3717","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8680:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9340:2993":{"id":"2:9340:2993","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:188:2176":{"id":"0:188:2176","crate_id":0,"name":"DONE_BIT","span":{"filename":"src/once.rs","begin":[15,0],"end":[15,23]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"1","value":"1u8","is_literal":true}},"2:8967:4370":{"id":"2:8967:4370","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8003:4371","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3208-0:69:1587":{"id":"b:2:3208-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:189:2177":{"id":"0:189:2177","crate_id":0,"name":"POISON_BIT","span":{"filename":"src/once.rs","begin":[16,0],"end":[16,25]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"2","value":"2u8","is_literal":true}},"0:665":{"id":"0:665","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[22,9],"end":[22,14]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:666:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:321:2316":{"id":"0:321:2316","crate_id":0,"name":"bump_slow","span":{"filename":"src/raw_mutex.rs","begin":[326,4],"end":[330,5]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:675":{"id":"0:675","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[22,37],"end":[22,42]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:676:408"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3281:220-0:229:1598":{"id":"a:2:3281:220-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13073:2952":{"id":"2:13073:2952","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13074:126","2:13075:56763"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3202-0:505:1603":{"id":"b:2:3202-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:416:2367":{"id":"0:416:2367","crate_id":0,"name":"bump_exclusive","span":{"filename":"src/raw_rwlock.rs","begin":[184,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3380:2836":{"id":"2:3380:2836","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:410:2284":{"id":"0:410:2284","crate_id":0,"name":"is_locked","span":{"filename":"src/raw_rwlock.rs","begin":[142,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:72:920":{"id":"0:72:920","crate_id":0,"name":"new","span":{"filename":"src/condvar.rs","begin":[98,4],"end":[102,5]},"visibility":"public","docs":"Creates a new condition variable which is ready to be waited on and\nnotified.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:442:2399":{"id":"0:442:2399","crate_id":0,"name":"downgrade_upgradable","span":{"filename":"src/raw_rwlock.rs","begin":[429,4],"end":[436,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:6959:3890":{"id":"1:6959:3890","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6960:56881"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3648:2854":{"id":"2:3648:2854","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3650:59151","2:3651:59152","2:3652:54905"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8003:4371":{"id":"2:8003:4371","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8004:60107","2:8005:60108","2:8006:60112","2:8007:60110","2:8008:60109","2:8009:60113","2:8010:60111"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2967:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9339:2994-0:69:1587":{"id":"a:2:9339:2994-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5735:3897":{"id":"1:5735:3897","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5736:6025","1:5737:7338"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2872-0:505:1603":{"id":"b:2:2872-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:23020:3863":{"id":"2:23020:3863","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23010:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9340:2993-0:69:1587":{"id":"a:2:9340:2993-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:427:2378":{"id":"0:427:2378","crate_id":0,"name":"lock_shared_recursive","span":{"filename":"src/raw_rwlock.rs","begin":[272,4],"end":[278,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[85,0],"end":[316,1]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:199:920","0:200:1326","0:201:378","0:204:2252","0:207:2242"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:292:1714":{"id":"0:292:1714","crate_id":0,"name":"TOKEN_HANDOFF","span":{"filename":"src/raw_mutex.rs","begin":[23,0],"end":[23,61]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"22:376:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:692":{"id":"0:692","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[21,26],"end":[21,35]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3277:218","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2869-0:69:1587":{"id":"b:2:2869-0:69:1587","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:437:2392":{"id":"0:437:2392","crate_id":0,"name":"try_upgrade","span":{"filename":"src/raw_rwlock.rs","begin":[379,4],"end":[394,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13586:60443":{"id":"2:13586:60443","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8488:2898":{"id":"2:8488:2898","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8490:3233","2:8492:3234","2:8493:3235"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4004:1429":{"id":"2:4004:1429","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46111:3881","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3201:3226":{"id":"2:3201:3226","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3175:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5797:3902":{"id":"1:5797:3902","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5798:6025"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3213-0:662:1588":{"id":"b:2:3213-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3216:127","2:3217:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3198-0:229:1598":{"id":"b:2:3198-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:1075:3868":{"id":"1:1075:3868","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1076:3290","1:1077:4718","1:1078:54453","1:1079:54452","1:1080:54454","1:1081:54451","1:1082:54450"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3198-0:677:1597":{"id":"b:2:3198-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:405:2349":{"id":"0:405:2349","crate_id":0,"name":"try_lock_exclusive","span":{"filename":"src/raw_rwlock.rs","begin":[80,4],"end":[91,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3182:227":{"id":"2:3182:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3184:127","2:3185:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:662:1588":{"id":"0:662:1588","crate_id":0,"name":"WaitTimeoutResult","span":{"filename":"src/condvar.rs","begin":[23,0],"end":[23,35]},"visibility":"public","docs":"A type indicating whether a timed wait on a condition variable returned\ndue to a time out or not.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"tuple","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:664:1542"],"impls":["0:67","a:2:3310:2896-0:662:1588","a:2:3269:211-0:662:1588","a:2:9340:2993-0:662:1588","a:2:9339:2994-0:662:1588","a:2:3281:220-0:662:1588","b:2:3198-0:662:1588","b:2:2872-0:662:1588","b:2:2869-0:662:1588","b:2:4002-0:662:1588","b:2:3202-0:662:1588","b:2:3213-0:662:1588","b:2:3208-0:662:1588","b:5:787-0:662:1588","0:665","0:667","0:668","0:671","0:672","0:674","0:675"]}},"b:2:2869-0:662:1588":{"id":"b:2:2869-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2863:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2871:2461"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:83:1846":{"id":"0:83:1846","crate_id":0,"name":"wait_until","span":{"filename":"src/condvar.rs","begin":[283,4],"end":[292,5]},"visibility":"public","docs":"Waits on this condition variable for a notification, timing out after\nthe specified time instant.\n\nThe semantics of this function are equivalent to `wait()` except that\nthe thread will be blocked roughly until `timeout` is reached. This\nmethod should not be used for precise timing due to anomalies such as\npreemption or platform differences that may not cause the maximum\namount of time waited to be precisely `timeout`.\n\nNote that the best effort is made to ensure that the time waited is\nmeasured with a monotonic clock, and not affected by the changes made to\nthe system time.\n\nThe returned `WaitTimeoutResult` value indicates if the timeout is\nknown to have elapsed.\n\nLike `wait`, the lock specified will be re-acquired when this function\nreturns, regardless of whether the timeout elapsed or not.\n\n# Panics\n\nThis function will panic if another thread is waiting on the `Condvar`\nwith a different `Mutex` object.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex_guard",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"MutexGuard","id":"0:148:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:293:2178":{"id":"0:293:2178","crate_id":0,"name":"LOCKED_BIT","span":{"filename":"src/raw_mutex.rs","begin":[26,0],"end":[26,28]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":"This bit is set in the `state` of a `RawMutex` when that mutex is locked by some thread.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"0b01","value":"1u8","is_literal":true}},"2:13593:60447":{"id":"2:13593:60447","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8680:157":{"id":"2:8680:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8681:3236","2:8682:922","2:8683:3238","2:8686:3239","2:8687:495","2:8689:3240","2:8692:3241","2:8693:3242","2:8694:3243","2:8695:3244","2:8697:3245","2:8699:3246","2:8700:3247","2:8702:841","2:8705:3248","2:8712:2423","2:8714:3249","2:8717:3250","2:8718:3251","2:8719:3252","2:8721:3253","2:8723:3254","2:8726:1308","2:8727:2243","2:8728:3255","2:8732:3256","2:8735:3257","2:8736:3258","2:8737:3259","2:8739:3260","2:8740:1983","2:8742:3261","2:8745:3262","2:8747:3263","2:8757:3264","2:8772:3265","2:8774:3266","2:8778:3267","2:8787:3268","2:8790:3269","2:8792:3270","2:8795:276","2:8802:294","2:8809:3271","2:8816:3272","2:8825:3273","2:8835:1014","2:8842:3274","2:8849:3176","2:8850:3173","2:8851:3178","2:8863:3177","2:8870:3175","2:8882:3174","2:8889:3275","2:8890:3276","2:8895:3277","2:8898:3278","2:8901:3279","2:8902:3280","2:8904:3281","2:8906:3282","2:8908:415","2:8911:3283","2:8914:997","2:8917:3284","2:8920:604","2:8923:3285","2:8926:907","2:8928:826","2:8930:792","2:8932:713","2:8934:696","2:8936:3286","2:8937:3287","2:8945:3288"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:69:1587":{"id":"0:69:1587","crate_id":0,"name":"Condvar","span":{"filename":"src/condvar.rs","begin":[90,0],"end":[92,1]},"visibility":"public","docs":"A Condition Variable\n\nCondition variables represent the ability to block a thread such that it\nconsumes no CPU time while waiting for an event to occur. Condition\nvariables are typically associated with a boolean predicate (a condition)\nand a mutex. The predicate is always verified inside of the mutex before\ndetermining that thread must block.\n\nNote that this module places one additional restriction over the system\ncondition variables: each condvar can be used with only one mutex at a\ntime. Any attempt to use multiple mutexes on the same condition variable\nsimultaneously will result in a runtime panic. However it is possible to\nswitch to a different mutex if there are no threads currently waiting on\nthe condition variable.\n\n# Differences from the standard library `Condvar`\n\n- No spurious wakeups: A wait will only return a non-timeout result if it\n  was woken up by `notify_one` or `notify_all`.\n- `Condvar::notify_all` will only wake up a single thread, the rest are\n  requeued to wait for the `Mutex` to be unlocked by the thread that was\n  woken up.\n- Only requires 1 word of space, whereas the standard library boxes the\n  `Condvar` due to platform limitations.\n- Can be statically constructed.\n- Does not require any drop glue when dropped.\n- Inline fast path for the uncontended case.\n\n# Examples\n\n```\nuse parking_lot::{Mutex, Condvar};\nuse std::sync::Arc;\nuse std::thread;\n\nlet pair = Arc::new((Mutex::new(false), Condvar::new()));\nlet pair2 = pair.clone();\n\n// Inside of our lock, spawn a new thread, and then wait for it to start\nthread::spawn(move|| {\n    let &(ref lock, ref cvar) = &*pair2;\n    let mut started = lock.lock();\n    *started = true;\n    cvar.notify_one();\n});\n\n// wait for the thread to start up\nlet &(ref lock, ref cvar) = &*pair;\nlet mut started = lock.lock();\nif !*started {\n    cvar.wait(&mut started);\n}\n// Note that we used an if instead of a while loop above. This is only\n// possible because parking_lot's Condvar will never spuriously wake up.\n// This means that wait() will only return after notify_one or notify_all is\n// called.\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":["0:70:1326"],"impls":["0:71","a:2:3310:2896-0:69:1587","a:2:3269:211-0:69:1587","a:2:9340:2993-0:69:1587","a:2:9339:2994-0:69:1587","a:2:3281:220-0:69:1587","b:2:3198-0:69:1587","b:2:2872-0:69:1587","b:2:2869-0:69:1587","b:2:4002-0:69:1587","b:2:3202-0:69:1587","b:2:3213-0:69:1587","b:2:3208-0:69:1587","0:103","0:105"]}},"0:460:2360":{"id":"0:460:2360","crate_id":0,"name":"unlock_shared_slow","span":{"filename":"src/raw_rwlock.rs","begin":[723,4],"end":[740,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3198-0:505:1603":{"id":"b:2:3198-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3269:211-0:662:1588":{"id":"a:2:3269:211-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3269:211","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:468:2371":{"id":"0:468:2371","crate_id":0,"name":"downgrade_slow","span":{"filename":"src/raw_rwlock.rs","begin":[875,4],"end":[888,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:555:2402":{"id":"20:555:2402","crate_id":20,"name":"RawRwLockUpgradeTimed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:556:2404","20:557:2403","20:558:2406","20:559:2405"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"20:543:2327","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockTimed","id":"20:530:2372","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:450:2354":{"id":"0:450:2354","crate_id":0,"name":"try_lock_shared_fast","span":{"filename":"src/raw_rwlock.rs","begin":[508,4],"end":[536,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["recursive",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:666:660":{"id":"0:666:660","crate_id":0,"name":"fmt","span":{"filename":"src/condvar.rs","begin":[22,9],"end":[22,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10332:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10321:205","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5775:3898":{"id":"1:5775:3898","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:56240","1:5777:56241","1:5778:56242","1:5779:56243"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:194:2195":{"id":"0:194:2195","crate_id":0,"name":"done","span":{"filename":"src/once.rs","begin":[52,4],"end":[57,5]},"visibility":"public","docs":"Returns whether the associated `Once` has successfully executed a\nclosure.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:552:2398":{"id":"20:552:2398","crate_id":20,"name":"RawRwLockUpgradeDowngrade","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:553:2399","20:554:2400"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLockUpgrade","id":"20:543:2327","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"RawRwLockDowngrade","id":"20:528:2369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:296:1326":{"id":"0:296:1326","crate_id":0,"name":"state","span":{"filename":"src/raw_mutex.rs","begin":[55,4],"end":[55,19]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":"This atomic integer holds the current state of the mutex instance. Only the two lowest bits\nare used. See `LOCKED_BIT` and `PARKED_BIT` for the bitmask for these bits.\n\n# State table:\n\nPARKED_BIT | LOCKED_BIT | Description\n    0      |     0      | The mutex is not locked, nor is anyone waiting for it.\n-----------+------------+------------------------------------------------------------------\n    0      |     1      | The mutex is locked by exactly one thread. No other thread is\n           |            | waiting for it.\n-----------+------------+------------------------------------------------------------------\n    1      |     0      | The mutex is not locked. One or more thread is parked or about to\n           |            | park. At least one of the parked threads are just about to be\n           |            | unparked, or a thread heading for parking might abort the park.\n-----------+------------+------------------------------------------------------------------\n    1      |     1      | The mutex is locked by exactly one thread. One or more thread is\n           |            | parked or about to park, waiting for the lock to become available.\n           |            | In this state, PARKED_BIT is only ever cleared when a bucket lock\n           |            | is held (i.e. in a parking_lot_core callback). This ensures that\n           |            | we never end up in a situation where there are parked threads but\n           |            | PARKED_BIT is not set (which would result in those threads\n           |            | potentially never getting woken up).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"AtomicU8","id":"2:47854:91","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:472:2366":{"id":"0:472:2366","crate_id":0,"name":"bump_shared_slow","span":{"filename":"src/raw_rwlock.rs","begin":[907,4],"end":[910,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:589":{"id":"0:589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[42,72],"end":[42,92]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fair_mutex::MappedFairMutexGuard","name":"MappedFairMutexGuard","id":"0:134:1592","glob":false}},"2:13527:5067":{"id":"2:13527:5067","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49812:3934","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:408:2356":{"id":"0:408:2356","crate_id":0,"name":"try_lock_shared","span":{"filename":"src/raw_rwlock.rs","begin":[116,4],"end":[126,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6084:61089":{"id":"5:6084:61089","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2899","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:2899","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:4730","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2994-0:505:1603":{"id":"a:2:9339:2994-0:505:1603","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3202-0:229:1598":{"id":"b:2:3202-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3204:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5653:3972":{"id":"1:5653:3972","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5654:5529","1:5655:56236"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3281:220-0:399:1600":{"id":"a:2:3281:220-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3281:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:521:1577":{"id":"0:521:1577","crate_id":0,"name":"rwlock","span":{"filename":"src/rwlock.rs","begin":[8,0],"end":[642,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:528:1609","0:530:1606","0:532:1610","0:535:1612","0:538:1607","0:541:1608","0:544:1611"],"is_stripped":false}},"0:470:2401":{"id":"0:470:2401","crate_id":0,"name":"downgrade_to_upgradable_slow","span":{"filename":"src/raw_rwlock.rs","begin":[891,4],"end":[904,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:74:1791":{"id":"0:74:1791","crate_id":0,"name":"notify_one_slow","span":{"filename":"src/condvar.rs","begin":[139,4],"end":[175,5]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[cold]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mutex",{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6859:3854":{"id":"1:6859:3854","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6860:56033"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:104:59":{"id":"0:104:59","crate_id":0,"name":"default","span":{"filename":"src/condvar.rs","begin":[512,4],"end":[514,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119:2030":{"id":"0:119:2030","crate_id":0,"name":"elision_fetch_sub_release","span":{"filename":"src/elision.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:134:1592":{"id":"0:134:1592","crate_id":0,"name":"MappedFairMutexGuard","span":{"filename":"src/fair_mutex.rs","begin":[101,0],"end":[101,87]},"visibility":"public","docs":"An RAII mutex guard returned by `FairMutexGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedFairMutexGuard` and `FairMutexGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::MappedMutexGuard","id":"20:163:1594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:509:2439":{"id":"0:509:2439","crate_id":0,"name":"nonzero_thread_id","span":{"filename":"src/remutex.rs","begin":[18,4],"end":[27,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NonZeroUsize","id":"2:24749:2436","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13528:60435":{"id":"2:13528:60435","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49822:4604","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2994-0:399:1600":{"id":"a:2:9339:2994-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10379:119":{"id":"2:10379:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10380:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13847:138":{"id":"2:13847:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13848:181","2:13849:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13524:4050":{"id":"2:13524:4050","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49544:3931","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:397:2342":{"id":"0:397:2342","crate_id":0,"name":"TOKEN_EXCLUSIVE","span":{"filename":"src/raw_rwlock.rs","begin":[51,0],"end":[51,57]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"22:391:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"0:431:2382":{"id":"0:431:2382","crate_id":0,"name":"try_lock_shared_recursive_until","span":{"filename":"src/raw_rwlock.rs","begin":[309,4],"end":[319,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"qualified_path","inner":{"name":"Instant","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"20:530:2372","args":null}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:303:2284":{"id":"0:303:2284","crate_id":0,"name":"is_locked","span":{"filename":"src/raw_mutex.rs","begin":[113,4],"end":[116,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:541:1608":{"id":"0:541:1608","crate_id":0,"name":"MappedRwLockWriteGuard","span":{"filename":"src/rwlock.rs","begin":[122,0],"end":[122,92]},"visibility":"public","docs":"An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\nsubfield of the protected data.\n\nThe main difference between `MappedRwLockWriteGuard` and `RwLockWriteGuard` is that the\nformer doesn't support temporarily unlocking and re-locking, since that\ncould introduce soundness issues if the locked object is modified by another\nthread.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::MappedRwLockWriteGuard","id":"20:872:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"1:9343:3860":{"id":"1:9343:3860","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9344:58216","1:9345:58217","1:9346:58218","1:9347:58219","1:9348:58220","1:9349:39598","1:9350:58215"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:291:1715":{"id":"0:291:1715","crate_id":0,"name":"TOKEN_NORMAL","span":{"filename":"src/raw_mutex.rs","begin":[19,0],"end":[19,60]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"UnparkToken","id":"22:376:2288","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1340","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:61089","5:6085:3308","5:6088:61090","5:6091:61091","5:6103:61092","5:6104:61093","5:6105:3955","5:6106:54453","5:6107:54452"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:235:1860":{"id":"0:235:1860","crate_id":0,"name":"lock","span":{"filename":"src/raw_fair_mutex.rs","begin":[20,4],"end":[22,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:39:2281":{"id":"20:39:2281","crate_id":20,"name":"RawMutexFair","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:40:2283","20:41:1945"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawMutex","id":"20:32:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:422:2373":{"id":"0:422:2373","crate_id":0,"name":"try_lock_shared_for","span":{"filename":"src/raw_rwlock.rs","begin":[210,4],"end":[220,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"qualified_path","inner":{"name":"Duration","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"20:530:2372","args":null}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2872-0:399:1600":{"id":"b:2:2872-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2866:4394","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2874:2463"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3389:2843":{"id":"2:3389:2843","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:181","2:3391:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:302:1853":{"id":"0:302:1853","crate_id":0,"name":"unlock","span":{"filename":"src/raw_mutex.rs","begin":[100,4],"end":[110,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3208-0:677:1597":{"id":"b:2:3208-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3178:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3211:127","2:3212:1417"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:615":{"id":"0:615","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[46,0],"end":[46,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::raw_mutex::RawMutex","name":"RawMutex","id":"0:295:1599","glob":false}},"0:479:2412":{"id":"0:479:2412","crate_id":0,"name":"wait_for_readers","span":{"filename":"src/raw_rwlock.rs","begin":[974,4],"end":[1058,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Instant","id":"1:12262:1723","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}],["prev_value",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3417:2845":{"id":"2:3417:2845","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3419:181","2:3420:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5647:3974":{"id":"1:5647:3974","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5648:56258","1:5649:4809"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10565:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2888:104":{"id":"2:2888:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2889:408","2:2890:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3427:2847":{"id":"2:3427:2847","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3429:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:113:2028":{"id":"0:113:2028","crate_id":0,"name":"elision_compare_exchange_acquire","span":{"filename":"src/elision.rs","begin":[17,4],"end":[21,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["current",{"kind":"qualified_path","inner":{"name":"IntType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:111:2026","args":null}}}],["new",{"kind":"qualified_path","inner":{"name":"IntType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:111:2026","args":null}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:111:2026","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntType","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:111:2026","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3166:75":{"id":"2:3166:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:5:787-0:662:1588":{"id":"b:5:787-0:662:1588","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:3290","5:790:3291","5:791:3292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3217:1416":{"id":"2:3217:1416","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5833:4724":{"id":"5:5833:4724","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:644":{"id":"0:644","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,41],"end":[53,63]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::rwlock::MappedRwLockWriteGuard","name":"MappedRwLockWriteGuard","id":"0:541:1608","glob":false}},"0:117:2027":{"id":"0:117:2027","crate_id":0,"name":"IntType","span":{"filename":"src/elision.rs","begin":[40,4],"end":[40,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:576":{"id":"0:576","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[41,33],"end":[41,50]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::condvar::WaitTimeoutResult","name":"WaitTimeoutResult","id":"0:662:1588","glob":false}},"0:573":{"id":"0:573","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[41,24],"end":[41,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::condvar::Condvar","name":"Condvar","id":"0:69:1587","glob":false}},"b:2:3198-0:295:1599":{"id":"b:2:3198-0:295:1599","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3175:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3172:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3201:3226"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:73:1789":{"id":"0:73:1789","crate_id":0,"name":"notify_one","span":{"filename":"src/condvar.rs","begin":[128,4],"end":[136,5]},"visibility":"public","docs":"Wakes up one blocked thread on this condvar.\n\nReturns whether a thread was woken up.\n\nIf there is a blocked thread on this condition variable, then it will\nbe woken up from its call to `wait` or `wait_timeout`. Calls to\n`notify_one` are not buffered in any way.\n\nTo wake up all threads, see `notify_all()`.\n\n# Examples\n\n```\nuse parking_lot::Condvar;\n\nlet condvar = Condvar::new();\n\n// do something with condvar, share it with other threads\n\nif !condvar.notify_one() {\n    println!(\"Nobody was listening for this.\");\n}\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2994-0:195:1596":{"id":"a:2:9339:2994-0:195:1596","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"20:537:2377":{"id":"20:537:2377","crate_id":20,"name":"RawRwLockRecursive","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:538:2378","20:539:2379"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"20:512:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:674":{"id":"0:674","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[22,31],"end":[22,35]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3279:106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"WaitTimeoutResult","id":"0:662:1588","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:23550:16700":{"id":"2:23550:16700","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23551:59250","2:23552:59249","2:23553:59251"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23545:4429","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13565:54903":{"id":"2:13565:54903","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"1:16010:2675","prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49680:4570","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:787-0:677:1597":{"id":"b:5:787-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2888:104","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:783:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:789:3290","5:790:3291","5:791:3292"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:294:2179":{"id":"0:294:2179","crate_id":0,"name":"PARKED_BIT","span":{"filename":"src/raw_mutex.rs","begin":[29,0],"end":[29,28]},"visibility":{"restricted":{"parent":"0:247:1574","path":"::raw_mutex"}},"docs":"This bit is set in the `state` of a `RawMutex` just before parking a thread. A thread is being\nparked if it wants to lock the mutex, but it is currently being held by some other thread.","links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"u8"},"expr":"0b10","value":"2u8","is_literal":true}},"0:690":{"id":"0:690","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[21,22],"end":[21,24]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2926:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4741:3926":{"id":"1:4741:3926","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4742:58531","1:4743:40009","1:4744:58532","1:4745:58533"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3310:2896-0:229:1598":{"id":"a:2:3310:2896-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3310:2896","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:394:2337":{"id":"0:394:2337","crate_id":0,"name":"READERS_MASK","span":{"filename":"src/raw_rwlock.rs","begin":[45,0],"end":[45,36]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"_","value":"18_446_744_073_709_551_600usize","is_literal":false}},"0:103":{"id":"0:103","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[510,0],"end":[515,1]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3247:115","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:104:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:638":{"id":"0:638","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[53,4],"end":[53,16]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::rwlock::const_rwlock","name":"const_rwlock","id":"0:530:1606","glob":false}},"2:2967:184":{"id":"2:2967:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2969:997","2:2970:826","2:2971:792","2:2972:713","2:2973:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2921:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3172:149":{"id":"2:3172:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3174:3226"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:11014:214":{"id":"2:11014:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11016:181","2:11017:2425","2:11018:2123","2:11019:54867","2:11020:54868","2:11021:753","2:11022:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11005:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2874:2463":{"id":"2:2874:2463","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:515:1605":{"id":"0:515:1605","crate_id":0,"name":"ReentrantMutexGuard","span":{"filename":"src/remutex.rs","begin":[59,0],"end":[59,98]},"visibility":"public","docs":"An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\nis dropped (falls out of scope), the lock will be unlocked.\n\nThe data protected by the mutex can be accessed through this guard via its\n`Deref` implementation.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::ReentrantMutexGuard","id":"20:374:1605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"2:3516:1938":{"id":"2:3516:1938","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3517:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3396:2840":{"id":"2:3396:2840","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3398:181","2:3399:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:429":{"id":"0:429","crate_id":0,"name":null,"span":{"filename":"src/raw_rwlock.rs","begin":[294,0],"end":[320,1]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RawRwLockRecursiveTimed","id":"20:540:2380","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:430:2381","0:431:2382"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13621:60453":{"id":"2:13621:60453","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16004:2670"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49857:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6085:3308":{"id":"5:6085:3308","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:396:2341":{"id":"0:396:2341","crate_id":0,"name":"TOKEN_SHARED","span":{"filename":"src/raw_rwlock.rs","begin":[50,0],"end":[50,54]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"resolved_path","inner":{"name":"ParkToken","id":"22:391:2329","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"expr":"_","value":null,"is_literal":false}},"b:2:4002-0:229:1598":{"id":"b:2:4002-0:229:1598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4000:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawFairMutex","id":"0:229:1598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4004:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:118:2028":{"id":"0:118:2028","crate_id":0,"name":"elision_compare_exchange_acquire","span":{"filename":"src/elision.rs","begin":[43,4],"end":[45,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"primitive","inner":"usize"}],["_",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47718:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9339:2994-0:677:1597":{"id":"a:2:9339:2994-0:677:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9339:2994","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:105":{"id":"0:105","crate_id":0,"name":null,"span":{"filename":"src/condvar.rs","begin":[517,0],"end":[521,1]},"visibility":{"restricted":{"parent":"0:3:1568","path":"::condvar"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Condvar","id":"0:69:1587","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:106:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:148:1595":{"id":"0:148:1595","crate_id":0,"name":"MutexGuard","span":{"filename":"src/mutex.rs","begin":[101,0],"end":[101,67]},"visibility":"public","docs":"An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\ndropped (falls out of scope), the lock will be unlocked.\n\nThe data protected by the mutex can be accessed through this guard via its\n`Deref` and `DerefMut` implementations.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"lock_api::MutexGuard","id":"20:103:1595","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"RawMutex","id":"0:295:1599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"2:3211:127":{"id":"2:3211:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3182:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"2:3717:2855":{"id":"2:3717:2855","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3648:2854","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:247:1574":{"id":"0:247:1574","crate_id":0,"name":"raw_mutex","span":{"filename":"src/raw_mutex.rs","begin":[8,0],"end":[331,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:291:1715","0:292:1714","0:293:2178","0:294:2179","0:295:1599"],"is_stripped":false}},"a:2:9340:2993-0:399:1600":{"id":"a:2:9340:2993-0:399:1600","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9340:2993","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawRwLock","id":"0:399:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:393:2335":{"id":"0:393:2335","crate_id":0,"name":"WRITER_BIT","span":{"filename":"src/raw_rwlock.rs","begin":[43,0],"end":[43,33]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"constant","inner":{"type":{"kind":"primitive","inner":"usize"},"expr":"0b1000","value":"8usize","is_literal":true}},"0:219:59":{"id":"0:219:59","crate_id":0,"name":"default","span":{"filename":"src/once.rs","begin":[320,4],"end":[322,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:586":{"id":"0:586","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[42,56],"end":[42,70]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::fair_mutex::FairMutexGuard","name":"FairMutexGuard","id":"0:131:1591","glob":false}},"2:13603:54906":{"id":"2:13603:54906","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:16004:2670","self::pattern":"2:13134:4331"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47591:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13144:4332","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13159:4335","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2863:97":{"id":"2:2863:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2865:2461"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3274:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:406:2350":{"id":"0:406:2350","crate_id":0,"name":"unlock_exclusive","span":{"filename":"src/raw_rwlock.rs","begin":[94,4],"end":[104,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"20:530:2372":{"id":"20:530:2372","crate_id":20,"name":"RawRwLockTimed","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["20:531:121","20:532:1723","20:533:2373","20:534:2374","20:535:2375","20:536:2376"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"RawRwLock","id":"20:512:1600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:490:2351":{"id":"0:490:2351","crate_id":0,"name":"deadlock_release","span":{"filename":"src/raw_rwlock.rs","begin":[1145,4],"end":[1148,5]},"visibility":{"restricted":{"parent":"0:322:1575","path":"::raw_rwlock"}},"docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/remutex.rs","begin":[15,0],"end":[28,1]},"visibility":{"restricted":{"parent":"0:491:1576","path":"::remutex"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"GetThreadId","id":"20:265:2437","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RawThreadId","id":"0:505:1603","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:508:2092","0:509:2439"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13523:4360":{"id":"2:13523:4360","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16004:2670"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49534:4591","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6861:3857":{"id":"1:6861:3857","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6862:56729"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:505:1603":{"id":"0:505:1603","crate_id":0,"name":"RawThreadId","span":{"filename":"src/remutex.rs","begin":[13,0],"end":[13,23]},"visibility":"public","docs":"Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"unit","generics":{"params":[],"where_predicates":[]},"fields_stripped":false,"fields":[],"impls":["a:2:3310:2896-0:505:1603","a:2:3269:211-0:505:1603","a:2:9340:2993-0:505:1603","a:2:9339:2994-0:505:1603","a:2:3281:220-0:505:1603","b:2:3198-0:505:1603","b:2:2872-0:505:1603","b:2:2869-0:505:1603","b:2:4002-0:505:1603","b:2:3202-0:505:1603","b:2:3213-0:505:1603","b:2:3208-0:505:1603","0:507"]}},"2:10385:3196":{"id":"2:10385:3196","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10386:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[325,0],"end":[331,1]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10372:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Once","id":"0:195:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:221:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5785:3899":{"id":"1:5785:3899","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5786:54233"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,27],"end":[49,52]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::remutex::MappedReentrantMutexGuard","name":"MappedReentrantMutexGuard","id":"0:518:1602","glob":false}},"5:6106:54453":{"id":"5:6106:54453","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16010:2675"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:241:1945":{"id":"0:241:1945","crate_id":0,"name":"bump","span":{"filename":"src/raw_fair_mutex.rs","begin":[47,4],"end":[49,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:689":{"id":"0:689","crate_id":0,"name":null,"span":{"filename":"src/once.rs","begin":[21,22],"end":[21,24]},"visibility":{"restricted":{"parent":"0:154:1572","path":"::once"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3278:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"OnceState","id":"0:677:1597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3281:220":{"id":"2:3281:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:448:2406":{"id":"0:448:2406","crate_id":0,"name":"try_upgrade_for","span":{"filename":"src/raw_rwlock.rs","begin":[493,4],"end":[503,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["timeout",{"kind":"resolved_path","inner":{"name":"Duration","id":"2:50302:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"paths":{"25:5180:8137":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:49467:4582":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:24201:7100":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:11457:8356":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:4340:8022":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:12467:6243":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"0:680:2184":{"crate_id":0,"path":["parking_lot","once","OnceState","Poisoned"],"kind":"variant"},"2:46727:4284":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:3041:5377":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:49375:4576":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:5741:3866":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:1588:7712":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:11809:6119":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:16004:2670":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"25:586:7652":{"crate_id":25,"path":["libc","unix","winsize"],"kind":"struct"},"25:4031:7921":{"crate_id":25,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:10660:4313":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:12065:54356":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:4670:3915":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:7933:4397":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:49448:4580":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"25:538:7620":{"crate_id":25,"path":["libc","unix","rusage"],"kind":"struct"},"1:5735:3897":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:4493:8089":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:22616:3172":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"25:3965:7887":{"crate_id":25,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"15:0:2650":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:6219:5249":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"2:10391:3198":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:11297:8637":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:28134:2954":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"12:869:3999":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:15032:4096":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"6:6024:8352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"25:600:7660":{"crate_id":25,"path":["libc","unix","sigval"],"kind":"struct"},"16:4535:6719":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:53288:4480":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"5:8138:4857":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:11328:6019":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:24209:7101":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:57795:7234":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:6032:5132":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"12:1682:5031":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:10952:4055":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:10840:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:46661:4280":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:7663:4091":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:11653:6079":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:7823:5212":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:9718:1604":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"6:4088:7942":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13746:6620":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"23:213:5673":{"crate_id":23,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"1:6695:8367":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:3091:5435":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11835:6124":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:7629:4089":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"25:154:39970":{"crate_id":25,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:2162:3999":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:11156:3977":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"25:5360:8236":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:2194:3579":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"0:684:2188":{"crate_id":0,"path":["parking_lot","once","OnceState","Done"],"kind":"variant"},"1:12742:4138":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:13240:6471":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:2816:5391":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:47854:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:5285:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"25:1740:7812":{"crate_id":25,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:11458:6041":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10081:5439":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:46826:4297":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:7856:5280":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:7761:5278":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:2314:5505":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:38951:3186":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"9:722:4888":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:2159:3237":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:13098:6445":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"22:74:5675":{"crate_id":22,"path":["parking_lot_core","parking_lot","ThreadData"],"kind":"struct"},"5:7824:5698":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"12:2404:61608":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:53614:7224":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:46507:4698":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"20:872:1608":{"crate_id":20,"path":["lock_api","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"1:12203:4028":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"17:9886:5920":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:11750:6096":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:11479:3891":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:5395:8249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:3648:2854":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"25:5268:8185":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:56434:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"25:1704:7796":{"crate_id":25,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12073:6166":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:8027:2168":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"0:293:2178":{"crate_id":0,"path":["parking_lot","raw_mutex","LOCKED_BIT"],"kind":"constant"},"16:4448:6716":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:8839:5797":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:24851:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:13898:6661":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:46423:4700":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"25:81:39903":{"crate_id":25,"path":["libc","unix","DIR"],"kind":"enum"},"5:8203:3237":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:12610:6266":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:5717:5108":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:11539:6058":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"12:952:4111":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"22:120:1859":{"crate_id":22,"path":["parking_lot_core","parking_lot","deadlock","acquire_resource"],"kind":"function"},"17:12247:6190":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"20:523:2362":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockFair"],"kind":"trait"},"16:5927:5119":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:11250:3983":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:3435:2849":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:32580:59495":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:10379:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:1507:4110":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:8239:58785":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:9264:5908":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"5:4242:5685":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"0:395:2339":{"crate_id":0,"path":["parking_lot","raw_rwlock","ONE_READER"],"kind":"constant"},"12:2280:4116":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:8442:4292":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:49138:4716":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:11098:3927":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"25:4395:8052":{"crate_id":25,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"12:1703:5032":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"0:146:1593":{"crate_id":0,"path":["parking_lot","mutex","const_mutex"],"kind":"function"},"5:4215:3999":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:3907:7841":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:49841:4606":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:10321:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:51412:4453":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:6087:5198":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"25:1523:7681":{"crate_id":25,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:4699:5689":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:3281:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:12040:6156":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:46548:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:24227:39321":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"25:6223:8447":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:45981:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:7571:5197":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:48361:3194":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:23545:4429":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:9551:5490":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"12:466:61607":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:16002:2668":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"25:4109:7958":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:1653:4106":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:4671:6722":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:15483:54225":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:49726:4600":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"6:593:7652":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:10331:5467":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"18:668:5576":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:48148:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:1501:4109":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"25:6665:8471":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:10383:3195":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:4051:3880":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"17:13192:6462":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:10858:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:8475:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:3812:2863":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:3038:3290":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:9245:5446":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"17:10827:5523":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:8925:4209":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"12:1666:5030":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:3951:4000":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"0:151:1594":{"crate_id":0,"path":["parking_lot","mutex","MappedMutexGuard"],"kind":"typedef"},"5:1939:4000":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:46392:4493":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"25:4433:8066":{"crate_id":25,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:3145:5387":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:6031:8356":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:47624:3236":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8481:4022":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"0:69:1587":{"crate_id":0,"path":["parking_lot","condvar","Condvar"],"kind":"struct"},"2:9339:2994":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:51435:4457":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:46847:2427":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"20:42:2285":{"crate_id":20,"path":["lock_api","mutex","RawMutexTimed"],"kind":"trait"},"17:12699:6284":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:6202:8437":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:1428:3715":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:14317:3384":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:14565:8682":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"0:394:2337":{"crate_id":0,"path":["parking_lot","raw_rwlock","READERS_MASK"],"kind":"constant"},"1:12282:2866":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:11519:6057":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:3182:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:2283:4398":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"16:5330:5909":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:8388:4071":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"7:85:44834":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:6959:3890":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:49961:4336":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:13221:6470":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:13568:7244":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11406:6023":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:3561:3939":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:50144:4348":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:12004:4093":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:10874:3941":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:11325:4564":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"25:6902:8484":{"crate_id":25,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:16009:2674":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:51541:4486":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:10061:5930":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:11232:3982":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"6:3883:7824":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:12158:4025":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:3427:2847":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"25:5198:8150":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:374:1605":{"crate_id":20,"path":["lock_api","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:12521:6251":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:14210:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:5727:3896":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"25:6262:8462":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"18:745:61627":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"25:4418:8059":{"crate_id":25,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"0:292:1714":{"crate_id":0,"path":["parking_lot","raw_mutex","TOKEN_HANDOFF"],"kind":"constant"},"2:48064:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:7928:4392":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:48106:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:6424:5254":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:12480:6245":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"23:399:5591":{"crate_id":23,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"2:32414:3320":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"0:111:2026":{"crate_id":0,"path":["parking_lot","elision","AtomicElisionExt"],"kind":"trait"},"2:53225:4460":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:7286:7250":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:5930:4226":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"18:838:4334":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:4208:7984":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:3247:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:9759:5918":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:10701:7259":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:24579:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:2733:5126":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:3389:2843":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:12582:6260":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"25:5399:8250":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"25:594:7657":{"crate_id":25,"path":["libc","unix","linger"],"kind":"struct"},"17:9839:5467":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:12028:6154":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:2777:4824":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"12:162:5022":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:601:7657":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:51917:7167":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:11714:6091":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:10052:5929":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:11001:6004":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:9034:47156":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:32239:2946":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:5719:3895":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:3488:4000":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"20:641:5797":{"crate_id":20,"path":["lock_api","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"20:47:162":{"crate_id":20,"path":["lock_api","mutex","Mutex"],"kind":"struct"},"17:13685:6613":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:10844:5467":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:4666:3909":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"25:4372:8044":{"crate_id":25,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"21:0:2814":{"crate_id":21,"path":["scopeguard"],"kind":"module"},"17:13465:6530":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"25:6147:8398":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"25:4135:7970":{"crate_id":25,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:51307:4473":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:10661:11557":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:2397:2929":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:9139:1609":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:10458:5870":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"6:618:7665":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"25:4074:7939":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5423:8263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"9:603:8730":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:1621:7734":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:3297:3185":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:10427:5729":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"16:2968:5375":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"25:1536:7687":{"crate_id":25,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:4350:6713":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:3269:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:4538:8107":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:47114:7085":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:3519:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:11482:6042":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:11434:4196":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:4443:3714":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"23:0:2819":{"crate_id":23,"path":["smallvec"],"kind":"module"},"16:4230:6711":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:32776:3583":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:16023:2686":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:547:5110":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:16016:2679":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:14242:3948":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:47591:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:4061:7928":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:6518:5256":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:23951:4639":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:5008:3976":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"5:1195:61566":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:3775:2862":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:8438:2913":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:3172:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"13:120:45473":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4464:8080":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:3275:2928":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:0:2652":{"crate_id":17,"path":["object"],"kind":"module"},"2:24115:4535":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:22682:59585":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"25:4301:8008":{"crate_id":25,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:4607:3958":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"25:6114:8384":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:11524:4061":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:11794:6113":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:24749:2436":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"12:764:3715":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:24681:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:11453:3996":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:1662:7766":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:5290:8187":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:12725:6286":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:1017:2168":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"0:392:2333":{"crate_id":0,"path":["parking_lot","raw_rwlock","UPGRADABLE_BIT"],"kind":"constant"},"1:11409:4227":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:13532:6549":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:46048:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"0:562:1867":{"crate_id":0,"path":["parking_lot","util","to_deadline"],"kind":"function"},"2:10381:3194":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:46071:2853":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:7185:5269":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:5456:5093":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:1712:7796":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:1651:4117":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"25:4021:7915":{"crate_id":25,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"23:147:5595":{"crate_id":23,"path":["smallvec","SmallVecData"],"kind":"enum"},"6:521:7611":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:4748:3929":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"25:6961:8497":{"crate_id":25,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:11993:6150":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:15053:2866":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:12632:6277":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"25:5968:8323":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10635:5954":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:7792:4098":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"16:5360:5088":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:4218:7985":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"25:4403:8055":{"crate_id":25,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:12712:6285":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:5968:4231":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:8690:1587":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:5244:8165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:52021:7170":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:4790:6726":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:4955:6731":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:48232:2777":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:46139:4393":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"16:7804:5210":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:11436:4567":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:11598:4072":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:3920:7851":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:6965:4291":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:24249:39313":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"12:1121:4115":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:12771:6019":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"12:1183:5019":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:11194:3714":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:49516:4262":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:10059:4550":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:10304:5442":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"25:6199:8437":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:10866:4159":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:16019:2682":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"18:721:5801":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:13590:6563":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:3376:2837":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10516:5469":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13356:6503":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:12926:4563":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"12:1203:5020":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:4321:8012":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"14:194:45501":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:3440:2850":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"12:1784:5680":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"25:5441:8269":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:11254:5491":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:10041:5928":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:7894:5237":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:10224:5937":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:10592:3696":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:4080:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:5707:5106":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:38888:3876":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"25:4211:7985":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:23014:3861":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"0:195:1596":{"crate_id":0,"path":["parking_lot","once","Once"],"kind":"struct"},"18:651:5571":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:8132:2168":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"18:169:53449":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:9060:2884":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:53561:7221":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"0:129:1589":{"crate_id":0,"path":["parking_lot","fair_mutex","const_fair_mutex"],"kind":"function"},"5:2200:1936":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:11180:3978":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:45864:2864":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:12242:1595":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:11588:6069":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:8967:4370":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:15353:4174":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:3970:5685":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:6951:8496":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:10117:5546":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:2512:5501":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"25:6010:8347":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:13144:4332":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:15474:7344":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:49626:4596":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:50458:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:48627:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"5:5788:5685":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:5981:4232":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:46433:4701":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:10279:5439":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:6510:4288":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"18:705:5799":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:49938:4333":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:16025:2688":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"18:637:5799":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:6718:5409":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:3933:7861":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5226:8155":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"0:189:2177":{"crate_id":0,"path":["parking_lot","once","POISON_BIT"],"kind":"constant"},"25:1713:7802":{"crate_id":25,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:10407:5500":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"18:645:5574":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:8963:3717":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:16017:2680":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:51474:4442":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:5185:2810":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:23219:4428":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:4416:8056":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:12598:6264":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"6:6077:8375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"15:248:5040":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:1157:11558":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:24093:7093":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"6:6126:8387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:13497:6538":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:4287:7996":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:5101:2921":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"12:2032:3714":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:50055:4344":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:11378:5449":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"16:7453:5201":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:49857:4608":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:2395:7242":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:52102:4487":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:49976:4339":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"25:5210:8154":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"0:571:1583":{"crate_id":0,"path":["parking_lot","GuardMarker"],"kind":"typedef"},"0:528:1609":{"crate_id":0,"path":["parking_lot","rwlock","RwLock"],"kind":"typedef"},"9:1020:4954":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"25:4339:8024":{"crate_id":25,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6247:8459":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"0:515:1605":{"crate_id":0,"path":["parking_lot","remutex","ReentrantMutexGuard"],"kind":"typedef"},"1:16026:2689":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"25:1626:7741":{"crate_id":25,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"18:802:5562":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"20:0:1584":{"crate_id":20,"path":["lock_api"],"kind":"module"},"2:10054:4549":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:3364:2832":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:1472:3999":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:12137:5712":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"25:4128:7968":{"crate_id":25,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:2330:4821":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:12741:6288":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:12171:4026":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"25:1654:7766":{"crate_id":25,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:5797:3902":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:5363:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"25:4223:7986":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:9280:5909":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"25:4060:7931":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:49822:4604":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:51588:4474":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"12:815:4108":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:11147:6011":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:12142:6175":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:10912:5994":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:5156:2923":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:13394:6510":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:8488:4023":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"25:150:39969":{"crate_id":25,"path":["libc","unix","FILE"],"kind":"enum"},"1:6787:3997":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:994:4855":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:49477:4583":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:9961:5922":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:1530:4113":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"25:6925:8490":{"crate_id":25,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:6199:4193":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:1674:4108":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"5:6954:4731":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:56473:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:51172:4484":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:48368:3196":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:13370:6505":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:4075:7936":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"25:1904:41275":{"crate_id":25,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:5995:8340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:12875:4598":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:12010:6153":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:11340:7309":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"5:1472:4115":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"16:5273:5130":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:3488:5385":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:6861:3857":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:4230:7986":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:7279:5422":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"13:0:2642":{"crate_id":13,"path":["std_detect"],"kind":"module"},"25:6908:8485":{"crate_id":25,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"9:692:4887":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:3372:2839":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"18:775:5799":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:10623:5953":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:5584:11561":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:4752:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:5472:5096":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"18:821:5564":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"5:1011:3714":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:7884:5208":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"12:1162:5018":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"25:6208:8440":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:10788:5988":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"5:4306:3715":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"12:399:5024":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:1733:4188":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"5:1843:5685":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:10710:3873":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"2:3104:4373":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"22:358:2328":{"crate_id":22,"path":["parking_lot_core","parking_lot","FilterOp"],"kind":"enum"},"12:1256:4117":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"5:8298:4806":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:4599:5687":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"2:13897:59354":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:8902:47153":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:4512:3949":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"25:4457:8080":{"crate_id":25,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10253:5503":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:13963:6679":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:7932:54369":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"25:1756:7817":{"crate_id":25,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:13359:7089":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"11:46:8555":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"25:6948:8496":{"crate_id":25,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11822:6123":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:2218:4800":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"25:1568:7703":{"crate_id":25,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"25:3953:7884":{"crate_id":25,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"18:850:5566":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"25:4068:7936":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"16:7024:5420":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:5384:5089":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"20:555:2402":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockUpgradeTimed"],"kind":"trait"},"1:15019:4095":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:46191:4515":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:49457:4581":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:3559:2860":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"25:564:7640":{"crate_id":25,"path":["libc","unix","hostent"],"kind":"struct"},"2:48657:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:5237:8163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7295:5218":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:12773:7326":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"6:4277:7989":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:6238:5203":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"25:3959:7885":{"crate_id":25,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:2183:4003":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:9849:61616":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"0:677:1597":{"crate_id":0,"path":["parking_lot","once","OnceState"],"kind":"enum"},"6:1912:41275":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"25:6931:8491":{"crate_id":25,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:12083:7371":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:626:7670":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:6413:5036":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:51147:7159":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"0:148:1595":{"crate_id":0,"path":["parking_lot","mutex","MutexGuard"],"kind":"typedef"},"1:15412:4182":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:3358:2833":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"12:2040:3999":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"16:7195:5270":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:51769:4458":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13540:6552":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"25:3889:7833":{"crate_id":25,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:53576:7222":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:3759:3714":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:6853:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:11143:3933":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"25:5372:8241":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:23850:3864":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"0:561:1459":{"crate_id":0,"path":["parking_lot","util","unreachable"],"kind":"function"},"16:5505:5098":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:7507:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"6:571:7640":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:12155:6178":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"25:6001:8346":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:14575:3907":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"6:5430:8264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:49875:4609":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:48354:3195":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:13258:6479":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"18:897:5570":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46699:4281":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:9946:640":{"crate_id":2,"path":["core","sync","atomic","fence"],"kind":"function"},"2:48645:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:50290:4621":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"20:760:1611":{"crate_id":20,"path":["lock_api","rwlock","RwLockUpgradableReadGuard"],"kind":"struct"},"2:24715:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"25:1719:7805":{"crate_id":25,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:9933:5921":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:51330:4477":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:6117:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"9:900:8556":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:7111:5698":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:11218:3715":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:12456:6242":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:47778:3237":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:9210:47160":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"25:1580:7712":{"crate_id":25,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:6644:5260":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:53652:7226":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:7738:5277":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:11015:6005":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:6706:59672":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"1:11402:3977":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:1488:4106":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:10610:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:8146:60252":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:6464:5213":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:10938:5999":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:8646:2881":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:16008:2673":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:50270:4617":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:11193:3979":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"6:4516:8097":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"25:6178:8423":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"18:791:5561":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"12:1238:5021":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:5039:2916":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:14159:4630":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:10655:4008":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:8121:4856":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:9729:61622":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"12:880:4000":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:24186:4531":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:10377:5504":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:12116:3714":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:11365:4178":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"9:234:4912":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"1:5653:3972":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:161:39970":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:12262:6193":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"16:6620:5404":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:5408:4692":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:5231:6734":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:8330:4807":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:6208:5248":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:12605:4675":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:12581:4711":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"5:923:4854":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:7073:5265":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:1459:4105":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"0:662:1588":{"crate_id":0,"path":["parking_lot","condvar","WaitTimeoutResult"],"kind":"struct"},"25:605:7662":{"crate_id":25,"path":["libc","unix","itimerval"],"kind":"struct"},"1:8380:2168":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"17:11847:6127":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:11363:4565":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:15509:5048":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:50450:7157":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:13159:4335":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:4008:5832":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"25:3870:7823":{"crate_id":25,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:7174:5268":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:10529:5942":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:5346:5199":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:16018:2681":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:10962:6001":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:3411:2844":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"25:1518:7679":{"crate_id":25,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:5579:8316":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:5295:45578":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4315:8009":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:46493:4608":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"0:391:2331":{"crate_id":0,"path":["parking_lot","raw_rwlock","WRITER_PARKED_BIT"],"kind":"constant"},"6:5436:8267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:11026:6006":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:50517:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:11575:4071":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"0:682:2186":{"crate_id":0,"path":["parking_lot","once","OnceState","InProgress"],"kind":"variant"},"2:2888:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:8973:2888":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:1680:7778":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"25:3926:7861":{"crate_id":25,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:3581:2852":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:10804:4138":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:14550:3998":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"12:2066:4003":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:49576:4566":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:4728:4433":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:46641:7133":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:11640:6077":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:12815:4594":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:50082:4345":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:16014:2677":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:16022:2685":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"25:526:7616":{"crate_id":25,"path":["libc","unix","timespec"],"kind":"struct"},"6:3966:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:6911:8485":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:24953:2957":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"22:119:1580":{"crate_id":22,"path":["parking_lot_core","parking_lot","deadlock"],"kind":"module"},"2:46446:4609":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"0:144:162":{"crate_id":0,"path":["parking_lot","mutex","Mutex"],"kind":"typedef"},"1:5376:4175":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"23:168:5596":{"crate_id":23,"path":["smallvec","SmallVec"],"kind":"struct"},"17:11499:6047":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"25:532:7617":{"crate_id":25,"path":["libc","unix","rlimit"],"kind":"struct"},"2:22957:4438":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"6:5146:8111":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"6:3987:7894":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:13422:4189":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:9332:5447":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"18:812:5563":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:1619:4114":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:6790:3885":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:11505:4571":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:11678:6081":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:2843:5372":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"25:5143:8111":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:9574:5458":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:10160:5933":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:4028:7915":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:13210:4338":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"12:379:5025":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:5785:3899":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:48612:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"16:5736:5109":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"0:190:2178":{"crate_id":0,"path":["parking_lot","once","LOCKED_BIT"],"kind":"constant"},"25:1543:7689":{"crate_id":25,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:16020:2683":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:3380:2836":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:2889:5392":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:12124:4021":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:24817:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:4378:3237":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:5979:8328":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:23162:3864":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:49365:4575":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:2508:3327":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:5632:5104":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:13961:4094":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:9659:61618":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"25:4280:7996":{"crate_id":25,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:10558:5946":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"0:399:1600":{"crate_id":0,"path":["parking_lot","raw_rwlock","RawRwLock"],"kind":"struct"},"17:9600:61624":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:32428:59494":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"5:1644:4105":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:47103:7139":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"25:6973:8499":{"crate_id":25,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:46477:4696":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"1:9733:1605":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:8960:3716":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"25:3913:7851":{"crate_id":25,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:3505:1721":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11118:47162":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:4198:7983":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:4392:8049":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:46631:5706":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"0:491:1576":{"crate_id":0,"path":["parking_lot","remutex"],"kind":"module"},"5:3039:60280":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:3279:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:4732:56776":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:7870:5207":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:47938:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:3370:4001":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13296:6485":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:5561:5101":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:53691:7227":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:14626:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"25:6129:8388":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:47094:3958":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:11668:3714":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:2926:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:3197:2527":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:50494:4628":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:6357:5252":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:50278:4618":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:12744:5733":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:6577:5258":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:3423:2846":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"23:393:5599":{"crate_id":23,"path":["smallvec","ToSmallVec"],"kind":"trait"},"1:5647:3974":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:1537:7684":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:14821:4097":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"0:397:2342":{"crate_id":0,"path":["parking_lot","raw_rwlock","TOKEN_EXCLUSIVE"],"kind":"constant"},"16:6014:5244":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:3939:6710":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"8:0:2644":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:5753:5112":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:4425:8059":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:16011:2676":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:4394:4163":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"0:247:1574":{"crate_id":0,"path":["parking_lot","raw_mutex"],"kind":"module"},"25:6021:8352":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:5308:8199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:6940:8492":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6731:5410":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:8488:2898":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"20:163:1594":{"crate_id":20,"path":["lock_api","mutex","MappedMutexGuard"],"kind":"struct"},"2:50440:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:11491:4570":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:6699:8371":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:53035:4456":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:49544:3931":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"9:963:4952":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:4148:7972":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:7226:5273":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"5:1635:4104":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:6893:8482":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:3195:5379":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:11555:6062":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:8463:4759":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:46677:4279":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:5833:4724":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:46778:4293":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:8289:2168":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"6:6181:8423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:13377:6507":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:7514:5221":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:13554:6554":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"5:7642:4764":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:9186:5455":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"1:11658:4074":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"25:4366:8041":{"crate_id":25,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"12:843:4104":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:6640:8468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:4740:4434":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:10816:4140":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:3682:3935":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"12:750:3714":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:6668:8471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:11696:6090":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:56486:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10211:5936":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:6591:5259":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"25:5482:8279":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:10477:5463":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:4048:7924":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"25:6637:8468":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:10975:6002":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:10527:7087":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"5:7257:5685":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:3310:2896":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:15391:4175":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:10332:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:6094:8377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:3746:2859":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:12494:6247":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:4160:7981":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:4474:8081":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:49296:4568":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:10565:3864":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:9861:5728":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:6072:5219":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:10389:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:3714:6707":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:9634:5725":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"25:6896:8483":{"crate_id":25,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"0:521:1577":{"crate_id":0,"path":["parking_lot","rwlock"],"kind":"module"},"17:12118:6173":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"20:370:5797":{"crate_id":20,"path":["lock_api","remutex","fmt","LockedPlaceholder"],"kind":"struct"},"16:2991:5386":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:8362:8562":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"17:13446:6523":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:1694:4817":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"6:527:7614":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:6136:5240":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:3896:7833":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"18:740:5806":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"25:3998:7906":{"crate_id":25,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:1669:7770":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"20:552:2398":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockUpgradeDowngrade"],"kind":"trait"},"2:23208:3864":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"0:538:1607":{"crate_id":0,"path":["parking_lot","rwlock","MappedRwLockReadGuard"],"kind":"typedef"},"23:330:3237":{"crate_id":23,"path":["smallvec","IntoIter"],"kind":"struct"},"1:9343:3860":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"18:767:5811":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:7828:4249":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"6:1740:7808":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:3166:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:2754:5125":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:48679:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"2:50167:7152":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:11354:4176":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:1600:7720":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"24:0:2644":{"crate_id":24,"path":["cfg_if"],"kind":"module"},"17:11159:6012":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:47762:3714":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:4921:2931":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"12:928:4106":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:46583:4663":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"1:4639:3915":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"25:4502:8094":{"crate_id":25,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:51243:4452":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:12195:6183":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:14034:4093":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:10502:5941":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:16028:2691":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:1694:7789":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:4477:6717":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"25:619:7670":{"crate_id":25,"path":["libc","unix","servent"],"kind":"struct"},"1:14643:58305":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:2967:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"25:5576:8316":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:3352:2830":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:10814:5522":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:7236:5274":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:3278:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:22884:4424":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"6:1748:7812":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:46807:4295":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:11674:4076":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:15072:7375":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:15045:58307":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:11208:3981":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"17:13912:6668":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:49356:4574":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:4704:6723":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"25:4013:7912":{"crate_id":25,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:16005:2671":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:6922:8489":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:4526:8102":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:22663:59586":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"25:5449:8271":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:13062:6416":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"22:391:2329":{"crate_id":22,"path":["parking_lot_core","parking_lot","ParkToken"],"kind":"struct"},"1:1132:3882":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11779:6107":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"16:6126:5245":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:10387:3197":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"5:8446:4000":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"17:13733:6614":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"25:4509:8097":{"crate_id":25,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:24885:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"25:6244:8459":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:539:7617":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"16:3172:5378":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:46857:4299":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:1482:4000":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"17:10106:5545":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:13520:6546":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:12262:1723":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:14236:3950":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"0:294:2179":{"crate_id":0,"path":["parking_lot","raw_mutex","PARKED_BIT"],"kind":"constant"},"25:514:7611":{"crate_id":25,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:6685:3866":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:10864:5991":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"25:5541:8291":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:10071:5550":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:9639:54364":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"0:229:1598":{"crate_id":0,"path":["parking_lot","raw_fair_mutex","RawFairMutex"],"kind":"struct"},"1:12405:7245":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"16:3506:5384":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:10926:5998":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:11358:5450":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:15970:8738":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:13163:6455":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5213:8154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:10611:5952":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:37731:3172":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"12:979:4113":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:11970:6145":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:51454:7161":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:607:5827":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:48907:4314":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"0:222:1573":{"crate_id":0,"path":["parking_lot","raw_fair_mutex"],"kind":"module"},"17:12234:6188":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:3277:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"5:8313:4662":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:48731:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:46737:4285":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"20:821:1607":{"crate_id":20,"path":["lock_api","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:46132:4392":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:11685:4077":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"0:322:1575":{"crate_id":0,"path":["parking_lot","raw_rwlock"],"kind":"module"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:12221:6186":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:6697:8369":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"1:15185:4039":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:3516:1938":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:47812:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"0:393:2335":{"crate_id":0,"path":["parking_lot","raw_rwlock","WRITER_BIT"],"kind":"constant"},"25:4325:8018":{"crate_id":25,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:5402:8250":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"25:4519:8102":{"crate_id":25,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:10420:5499":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"25:5420:8263":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:7677:4092":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"18:867:5568":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"18:621:5798":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:1415:3714":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:7216:5272":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"25:4048:7927":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:13134:4331":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:2188:4004":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:12917:6304":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:1152:7237":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:24783:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:13386:6508":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:53599:7223":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:24132:8675":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"25:5254:8174":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:11738:6095":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:7467:5202":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:9404:5819":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"12:2419:4007":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"3:321:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:5373:4174":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:6211:8440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:51792:4461":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:51738:4454":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"25:5433:8267":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:5183:8137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:5580:5102":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:3401:2841":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:11414:4230":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"25:4531:8107":{"crate_id":25,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:5875:5693":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"2:5030:2458":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:2945:5397":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:9769:61621":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:10452:5731":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:10393:3199":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:1041:1893":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"25:5413:8261":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:10448:5465":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"18:152:53448":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"18:695:5577":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"14:0:2649":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:10809:3907":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:7927:3697":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"2:50282:4622":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:11519:4572":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:49990:4342":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:5207:8153":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:45956:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:1704:7795":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:6252:5250":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:9174:5797":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"16:3365:5124":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:13819:6640":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:11130:3930":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:157:39969":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:894:3705":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:1558:7692":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:2866:5373":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:3200:3923":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:13180:6457":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:8130:3999":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:4440:8066":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:14322:4034":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"25:6074:8375":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11604:6070":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:48618:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"12:777:3237":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:11616:6073":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:11726:6094":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:13272:6483":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:8803:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:7420:5222":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:50007:4343":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:2912:5374":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:2269:3325":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13453:6524":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:0:2651":{"crate_id":16,"path":["gimli"],"kind":"module"},"6:3960:7884":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"14:47:6990":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:46755:7134":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"5:2310:4866":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:50274:4619":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:13054:6414":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:46025:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:12257:1612":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:10962:3944":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:6082:4184":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"12:933:4109":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"9:749:4889":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"25:6937:8492":{"crate_id":25,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"0:131:1591":{"crate_id":0,"path":["parking_lot","fair_mutex","FairMutexGuard"],"kind":"typedef"},"2:6583:4289":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"25:6123:8387":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:2484:47245":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"12:2392:8550":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:6744:5411":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:4346:8024":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:1606:7722":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"0:518:1602":{"crate_id":0,"path":["parking_lot","remutex","MappedReentrantMutexGuard"],"kind":"typedef"},"6:5201:8150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:9440:5820":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:6934:8491":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:2177:4002":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:4823:6727":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:6319:4194":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:9063:2885":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:6265:8462":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:15130:4102":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:5564:8305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"25:6919:8489":{"crate_id":25,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"25:4385:8049":{"crate_id":25,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:22684:59581":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"25:1529:7684":{"crate_id":25,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:4473:3953":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:13659:4060":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:3064:5434":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:5996:5243":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:24919:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:4000:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:12307:6201":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:1149:7235":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:47787:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"0:678:2182":{"crate_id":0,"path":["parking_lot","once","OnceState","New"],"kind":"variant"},"1:696:3122":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:12537:6253":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:14804:7259":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:32379:3581":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:7732:4094":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:8479:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:3103:3864":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"25:558:7637":{"crate_id":25,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:46566:4662":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:46104:2856":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:13429:6516":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"0:154:1572":{"crate_id":0,"path":["parking_lot","once"],"kind":"module"},"1:12053:4097":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:4995:6732":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:46746:4286":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:10577:54224":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"18:886:5569":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:7158:5267":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:3392:5389":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"12:1147:4116":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:12645:6278":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:57774:7233":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:49762:4602":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"0:0:1614":{"crate_id":0,"path":["parking_lot"],"kind":"module"},"17:10317:5445":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:49422:4280":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:10179:5934":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:53535:7219":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"9:469:8720":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"17:10266:5502":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"6:3993:7897":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:8263:4121":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:47641:3715":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"25:4235:7987":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:672:40301":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:2866:4394":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:5538:8290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:2171:4001":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:51691:4466":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:11086:3925":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:24613:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"25:4263:4195":{"crate_id":25,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:9461:4332":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:24265:39322":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:5855:5116":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:12408:6237":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:10571:5949":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:69:4758":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:4005:7906":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:4783:4415":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:12061:8681":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"1:15201:4040":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:49780:4603":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:10372:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:7441:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"25:579:7649":{"crate_id":25,"path":["libc","unix","pollfd"],"kind":"struct"},"17:13331:6495":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:49396:4578":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:11665:6080":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:6863:3858":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:47980:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:46888:4301":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:48190:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"25:4005:7910":{"crate_id":25,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:16007:2672":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:13582:6561":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:13862:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:8193:1962":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"2:3431:2848":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:13627:6571":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:3341:4148":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:1626:7736":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:49850:4607":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:10095:5544":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"10:0:2646":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"25:5172:8135":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:46878:3930":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:11077:3959":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:13772:6629":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:12208:6185":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:6269:5251":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:10887:5992":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"25:1661:7770":{"crate_id":25,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:12227:1588":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:1634:7741":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:14958:5737":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:14633:3925":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"25:4314:8012":{"crate_id":25,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:6054:8374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:4510:3948":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"25:4333:8022":{"crate_id":25,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:10620:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:46798:4294":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:10140:5467":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:607:7660":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:11317:54226":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"1:2166:4000":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:13933:6674":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:11137:3931":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:13973:7091":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:3522:5834":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:5034:2915":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:900:3706":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:3287:5383":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"25:1672:7778":{"crate_id":25,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:3648:3940":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:12037:4585":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:13506:6539":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:1633:4115":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:4098:7949":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:46708:4282":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:5858:4223":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"17:12385:6228":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:51220:4464":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:53504:7216":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:10705:4828":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:10587:3692":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:47076:1596":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:3758:4403":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:10377:7345":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:11014:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"25:4270:7989":{"crate_id":25,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:3658:5714":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"16:6152:5200":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"25:6850:8481":{"crate_id":25,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:48891:4122":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:4885:2930":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:7250:5275":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:4270:4195":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:11615:4073":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:12431:6238":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:11286:4563":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"12:432:5023":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"18:661:5575":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:4067:7931":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:3406:2842":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:7042:5421":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"0:398:2343":{"crate_id":0,"path":["parking_lot","raw_rwlock","TOKEN_UPGRADABLE"],"kind":"constant"},"5:1618:3237":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:2027:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:2062:3915":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"12:1103:4114":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"0:544:1611":{"crate_id":0,"path":["parking_lot","rwlock","RwLockUpgradableReadGuard"],"kind":"typedef"},"16:3772:6708":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:7264:5216":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:299:5824":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:5595:5103":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"25:5472:8277":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:8410:4812":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:9133:47159":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:3743:5519":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:1486:4117":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:4434:8065":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"25:3876:7824":{"crate_id":25,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:50286:4620":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:88:39903":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:8182:3957":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"14:244:6993":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"15:230:5039":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:6013:8347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"0:563:1580":{"crate_id":0,"path":["parking_lot","deadlock"],"kind":"module"},"6:6132:8388":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:9296:5817":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:13865:6654":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:9627:54357":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"5:3894:4813":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"5:3336:4002":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:9766:5726":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"16:4734:6724":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:23550:16700":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:50298:4616":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:13172:6456":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:5407:5090":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:6964:2990":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:3384:2838":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:14601:4140":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:3342:2834":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:51349:7160":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:52342:4467":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"20:543:2327":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockUpgrade"],"kind":"trait"},"17:9528:3931":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:14808:3975":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"0:511:1604":{"crate_id":0,"path":["parking_lot","remutex","ReentrantMutex"],"kind":"typedef"},"5:6688:4793":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"25:4355:8033":{"crate_id":25,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"14:216:45507":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"18:730:61626":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:4332:8018":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:2794:5127":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"25:4447:8074":{"crate_id":25,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"25:573:7646":{"crate_id":25,"path":["libc","unix","iovec"],"kind":"struct"},"25:0:798":{"crate_id":25,"path":["libc"],"kind":"module"},"16:6636:5217":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:7378:5205":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"20:695:1612":{"crate_id":20,"path":["lock_api","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:2458:7246":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"25:4120:7963":{"crate_id":25,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:6662:8469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:1236:5829":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:11398:4566":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:47710:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:16024:2687":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"7:0:1481":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:2456:7245":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"25:5295:8192":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"0:115:2031":{"crate_id":0,"path":["parking_lot","elision","have_elision"],"kind":"function"},"2:14043:59355":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:24647:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"5:5536:2880":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:4386:8046":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:4081:7939":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:12252:1610":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"25:3986:7897":{"crate_id":25,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:3018:5376":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"16:6391:5253":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:46787:4290":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:5208:2925":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:6176:5247":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:6964:8497":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:16015:2678":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:9771:5727":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"6:565:7637":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:50294:4615":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:3274:1829":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"12:2059:4002":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:49832:4605":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"25:1725:4188":{"crate_id":25,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"20:39:2281":{"crate_id":20,"path":["lock_api","mutex","RawMutexFair"],"kind":"trait"},"25:1613:7734":{"crate_id":25,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"23:377:5597":{"crate_id":23,"path":["smallvec","Array"],"kind":"trait"},"1:9467:56155":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"0:107:1569":{"crate_id":0,"path":["parking_lot","elision"],"kind":"module"},"1:5952:4228":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"25:1592:7720":{"crate_id":25,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:4012:7910":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:6366:5037":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:15986:54217":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"0:127:1590":{"crate_id":0,"path":["parking_lot","fair_mutex","FairMutex"],"kind":"typedef"},"2:14:2528":{"crate_id":2,"path":["core","write"],"kind":"macro"},"1:4032:4058":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:11420:4187":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"25:664:40301":{"crate_id":25,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"25:6659:8469":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:3218:5380":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:6764:3915":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:10366:5828":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:1075:3868":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:586:7649":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:1544:7687":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:10489:5468":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"5:6257:4763":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:49812:3934":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:3740:2857":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:9896:61619":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:7255:7250":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:46835:4298":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:52685:4468":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"22:316:1719":{"crate_id":22,"path":["parking_lot_core","parking_lot","UnparkResult"],"kind":"struct"},"2:53351:4445":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:13810:6638":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:7786:5211":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:11005:3864":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"0:390:2179":{"crate_id":0,"path":["parking_lot","raw_rwlock","PARKED_BIT"],"kind":"constant"},"16:6554:5257":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:15235:4048":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:10001:47207":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:9943:61617":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:48899:7144":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:14103:5734":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:6768:5413":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:4300:3960":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"2:52228:4479":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:46500:4697":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"20:8:1586":{"crate_id":20,"path":["lock_api","GuardNoSend"],"kind":"struct"},"6:4373:8041":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"12:0:2648":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:11243:3933":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:10128:5547":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:49501:4665":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:5298:8192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:11304:47163":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:4308:8008":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:8908:1596":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:46408:4495":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:14239:3952":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"16:6605:5215":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:13942:6676":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:5605:4431":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:11100:5495":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"25:3974:7892":{"crate_id":25,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:7615:4088":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"9:927:44931":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:45940:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"0:541:1608":{"crate_id":0,"path":["parking_lot","rwlock","MappedRwLockWriteGuard"],"kind":"typedef"},"2:52468:4459":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:3375:4798":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:52499:4462":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:3981:7892":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:46111:3881":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:2433:7244":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"16:3800:6709":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:4135:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:9799:5919":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:1190:11559":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"2:53398:4463":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:2553:4825":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"12:2052:4001":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:1597:3714":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:50503:4629":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:3429:5128":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"5:1457:4116":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:52259:4482":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:10988:6003":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"25:6091:8377":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:9088:47158":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:23744:3862":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"12:2072:4004":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"25:520:7614":{"crate_id":25,"path":["libc","unix","timeval"],"kind":"struct"},"20:436:1602":{"crate_id":20,"path":["lock_api","remutex","MappedReentrantMutexGuard"],"kind":"struct"},"2:46364:3871":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:5314:5908":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:5475:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:4242:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:11199:6015":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:4643:5689":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:5766:5113":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"9:1075:4955":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"20:99:5797":{"crate_id":20,"path":["lock_api","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"20:530:2372":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockTimed"],"kind":"trait"},"25:4409:8056":{"crate_id":25,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:820:5728":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"1:0:1331":{"crate_id":1,"path":["std"],"kind":"module"},"6:634:7675":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:12946:6324":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:46898:4251":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:53550:7220":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:51619:4478":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:7342:5234":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:3734:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"22:336:1718":{"crate_id":22,"path":["parking_lot_core","parking_lot","RequeueOp"],"kind":"enum"},"25:1732:7808":{"crate_id":25,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:13939:54367":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:12783:6295":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:542:5136":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:2397:7243":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:4890:6729":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:46370:7123":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:12735:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"5:3341:4797":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:11628:6074":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:2921:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:8391:4720":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:10322:3189":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"6:4142:7970":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:12038:4096":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"25:5427:8264":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:53524:7218":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:5889:5696":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:2543:5461":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:51840:4446":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:13609:6568":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"5:5415:3915":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"12:2045:4000":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:12442:6240":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"14:11:6990":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:4127:7963":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:4762:6725":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"25:6108:8382":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:46867:4300":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:47658:2990":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:6937:3859":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:11045:47161":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:49558:3933":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:3492:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:4506:6718":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:48375:3197":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"14:231:4722":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"25:6028:8356":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:3118:5388":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"0:513:1601":{"crate_id":0,"path":["parking_lot","remutex","const_reentrant_mutex"],"kind":"function"},"2:53476:4448":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"9:27:4936":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"0:188:2176":{"crate_id":0,"path":["parking_lot","once","DONE_BIT"],"kind":"constant"},"18:755:61625":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:5416:8261":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:7620:4763":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:12552:6257":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:46471:3871":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:5328:8215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:8523:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"9:0:2645":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:47649:3237":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"12:114:61603":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11981:6148":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"23:380:4763":{"crate_id":23,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"5:1663:4107":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"25:4486:8089":{"crate_id":25,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:4397:4164":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:7849:5704":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:10584:5525":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:51997:7169":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"0:396:2341":{"crate_id":0,"path":["parking_lot","raw_rwlock","TOKEN_SHARED"],"kind":"constant"},"25:4041:7924":{"crate_id":25,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:23217:4441":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:14000:6686":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:4723:3189":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:12138:4024":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:10673:47345":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:3604:5838":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:6905:8484":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"0:191:2179":{"crate_id":0,"path":["parking_lot","once","PARKED_BIT"],"kind":"constant"},"1:4078:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"16:7406:5204":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"25:5282:8186":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"12:2253:4114":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:2362:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"15:269:5044":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:6459:3888":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7843:5279":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:22629:59487":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"16:6682:5214":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:7477:5223":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:48594:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:50547:3877":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:7453:5685":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:5257:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:52892:4488":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:46002:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:4256:7988":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:2793:3875":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"20:540:2380":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockRecursiveTimed"],"kind":"trait"},"22:296:1717":{"crate_id":22,"path":["parking_lot_core","parking_lot","ParkResult"],"kind":"enum"},"1:13923:4092":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"22:121:2314":{"crate_id":22,"path":["parking_lot_core","parking_lot","deadlock","release_resource"],"kind":"function"},"17:12343:6207":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"25:4103:7955":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:23020:3863":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:11434:6027":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:10236:5460":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:6807:5263":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:12327:6202":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6691:5261":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"17:13119:6450":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:10375:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"2:3178:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:51493:7162":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:13282:6484":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:7649:4090":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:11915:6129":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:3772:3715":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:12010:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"12:2412:8553":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:51276:4485":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:7795:4099":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:24148:7095":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:9476:5821":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:50337:2911":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"18:0:2653":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:4641:6721":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"25:627:7675":{"crate_id":25,"path":["libc","unix","protoent"],"kind":"struct"},"5:432:2899":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:1524:4112":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:13306:6486":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:8176:4736":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:12023:4095":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:2187:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:11428:4176":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:5789:3900":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:51126:7158":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:7742:3245":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:16029:2692":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:9162:5492":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"0:137:1571":{"crate_id":0,"path":["parking_lot","mutex"],"kind":"module"},"2:5631:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13205:6467":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:50154:4349":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:4509:8094":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13488:6535":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:49142:4715":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:12891:4601":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:3729:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:2155:3714":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:13477:6531":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:4432:3950":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:3525:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:22831:4437":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"6:4485:8087":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:12982:6355":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:1311:5551":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:4532:8104":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:12247:1597":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:13978:6680":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:8255:1572":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:513:7606":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:6110:5239":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4038:7921":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:1497:4108":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"25:4201:7984":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:9971:61615":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:2594:7247":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"12:2036:3237":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"25:4525:8104":{"crate_id":25,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:13153:4334":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"12:2398:8551":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:9999:660":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:1302:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"19:117:8501":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"1:7117:2982":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"25:4172:7982":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:10801:5990":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"12:2269:4115":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:4410:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:5500:4182":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:9843:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:10656:5956":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"6:5271:8185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"0:505:1603":{"crate_id":0,"path":["parking_lot","remutex","RawThreadId"],"kind":"struct"},"2:2219:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:3044:60279":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:4400:4165":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:5433:5092":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:11070:3957":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:5960:4229":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:5815:5115":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:1518:4111":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13986:6683":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"25:5241:8165":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:15754:5738":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:3736:3942":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:6569:5406":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:47069:7084":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:12182:6182":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:49385:4577":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:4157:5526":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"16:3264:5382":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:47701:3393":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12095:6167":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:9649:5916":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:8548:2897":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"25:4308:8009":{"crate_id":25,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:52181:4475":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:6685:8480":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"22:376:2288":{"crate_id":22,"path":["parking_lot_core","parking_lot","UnparkToken"],"kind":"struct"},"2:56499:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:49608:4595":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"25:506:7606":{"crate_id":25,"path":["libc","unix","group"],"kind":"struct"},"2:50133:4347":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:8849:5489":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:12373:6226":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:7119:5133":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:4614:6720":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:11268:4032":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"25:4081:7942":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:5790:5114":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:50324:2871":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:4066:3879":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:22644:59487":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"1:15122:7340":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:8639:2623":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"0:291:1715":{"crate_id":0,"path":["parking_lot","raw_mutex","TOKEN_NORMAL"],"kind":"constant"},"6:4110:7955":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:10385:3196":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"20:32:1599":{"crate_id":20,"path":["lock_api","mutex","RawMutex"],"kind":"trait"},"25:3900:7841":{"crate_id":25,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:14570:8684":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:5444:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:4965:2325":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:4386:6714":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:5960:5121":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:3169:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:46553:4661":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:11231:5493":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"9:157:4904":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"2:51642:4481":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:3338:5123":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"25:5976:8328":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:4179:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"9:41:4937":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:11186:6013":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"20:645:1610":{"crate_id":20,"path":["lock_api","rwlock","RwLockReadGuard"],"kind":"struct"},"6:6226:8447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:14609:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"0:555:2173":{"crate_id":0,"path":["parking_lot","util","UncheckedOptionExt"],"kind":"trait"},"2:56421:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4020:7912":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:3522:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:6437:3885":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"25:611:7665":{"crate_id":25,"path":["libc","unix","tms"],"kind":"struct"},"6:6111:8382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"13:232:8549":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:12168:5961":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:7212:3999":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"25:4427:8065":{"crate_id":25,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"5:1607:3715":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:9594:5724":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:13786:4101":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"20:560:1609":{"crate_id":20,"path":["lock_api","rwlock","RwLock"],"kind":"struct"},"2:50119:4346":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"12:472:61604":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:8003:4371":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:46816:4296":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:51817:4443":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:47718:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:7975:1962":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"17:13842:6653":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:4852:6728":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:25323:2953":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:47633:3714":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:9809:61620":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:15331:3984":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"25:1696:7795":{"crate_id":25,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:5672:5105":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"5:3040:8561":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"22:0:1613":{"crate_id":22,"path":["parking_lot_core"],"kind":"module"},"5:3362:4003":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:11962:6143":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:37707:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:3577:2851":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"6:612:7662":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:1446:4104":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:3241:5381":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"20:103:1595":{"crate_id":20,"path":["lock_api","mutex","MutexGuard"],"kind":"struct"},"21:28:53714":{"crate_id":21,"path":["scopeguard","Strategy"],"kind":"trait"},"1:10667:4010":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"5:6475:3999":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:9005:47155":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"25:3980:7894":{"crate_id":25,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"18:713:3172":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:24302:2958":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:10684:12565":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:10599:5951":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:3048:60282":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"5:5837:4726":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:4356:8030":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:1727:7805":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:10799:3867":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:10468:5464":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"25:5325:8215":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"25:4141:7972":{"crate_id":25,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"0:532:1610":{"crate_id":0,"path":["parking_lot","rwlock","RwLockReadGuard"],"kind":"typedef"},"16:5975:5242":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:13348:6500":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:6780:5262":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"7:38:44827":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:5165:2924":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"0:3:1568":{"crate_id":0,"path":["parking_lot","condvar"],"kind":"module"},"17:13637:6576":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:3396:4004":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"9:1056:4947":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:5421:5091":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:23073:4428":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:3972:7887":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:24317:2956":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:13564:6557":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"14:189:6990":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:2572:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"6:580:7646":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:53495:7215":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"18:783:5799":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:47896:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:47770:3715":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"20:306:1604":{"crate_id":20,"path":["lock_api","remutex","ReentrantMutex"],"kind":"struct"},"1:8474:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:1944:1997":{"crate_id":2,"path":["core","mem"],"kind":"module"},"25:5204:8153":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:4304:6712":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:52534:4444":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"0:134:1592":{"crate_id":0,"path":["parking_lot","fair_mutex","MappedFairMutexGuard"],"kind":"typedef"},"9:809:4071":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"25:4379:8046":{"crate_id":25,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:10149:5920":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:12568:6258":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:3717:2855":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:11572:6064":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:5375:8241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:45892:2861":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:53629:7225":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"0:547:1578":{"crate_id":0,"path":["parking_lot","util"],"kind":"module"},"25:5384:8248":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:14149:4416":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"25:6237:8456":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:23169:16681":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"1:10826:3908":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:3194:4139":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:13547:6553":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"23:107:3999":{"crate_id":23,"path":["smallvec","Drain"],"kind":"struct"},"5:8197:3237":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:14952:5736":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:49435:4579":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:8929:47154":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:46533:4497":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:16021:2684":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:9341:2992":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:22661:59583":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:4446:8069":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:12287:6195":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:5544:8291":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:12076:56435":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"22:101:2175":{"crate_id":22,"path":["parking_lot_core","parking_lot","DEFAULT_UNPARK_TOKEN"],"kind":"constant"},"6:6004:8346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"14:250:6995":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"20:265:2437":{"crate_id":20,"path":["lock_api","remutex","GetThreadId"],"kind":"trait"},"2:22933:3864":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:12852:4597":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:13598:6564":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"5:6672:2880":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:1721:7802":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"25:1686:7789":{"crate_id":25,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:8738:2887":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:11506:2983":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"25:1550:7692":{"crate_id":25,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:3882:3943":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:13847:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"25:5223:8155":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"5:1091:5685":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:16027:2690":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:53146:4476":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:5971:8323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:1493:4107":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:1215:4819":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:24022:4640":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"25:4054:7928":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:2957:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:6976:8499":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:11947:6139":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:47085:7137":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:9065:47157":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:4454:8074":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:13364:39561":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:3323:3294":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"11:54:5008":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"1:5775:3898":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"25:6682:8480":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:4402:8052":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:5387:8248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:9719:5917":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:23756:59491":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"18:858:5567":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"25:5305:8199":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"25:4153:7981":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:10028:5927":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:12275:6194":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:13154:6451":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:13073:2952":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:14936:5735":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:5485:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:56063:4407":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"25:4439:8069":{"crate_id":25,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"25:5561:8305":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"12:971:4112":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:53437:4483":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:8379:4719":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"0:295:1599":{"crate_id":0,"path":["parking_lot","raw_mutex","RawMutex"],"kind":"struct"},"17:13924:6670":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:11767:6104":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"25:6890:8482":{"crate_id":25,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:5111:2922":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:15975:11560":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"25:4191:7983":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"0:535:1612":{"crate_id":0,"path":["parking_lot","rwlock","RwLockWriteGuard"],"kind":"typedef"},"1:1438:3237":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:49534:4591":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:46514:4699":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:7333:5220":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"16:6491:5255":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"9:686:4885":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:50266:4614":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"4:0:2643":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:10677:4118":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:6928:8490":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:56460:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:12004:4584":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:4296:8001":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:3877:7823":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"25:4091:7949":{"crate_id":25,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:48938:7149":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:7146:5266":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"12:353:8671":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:10957:4056":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:12187:4027":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"16:4922:6730":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:13884:6659":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:6101:5196":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:3549:6706":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"18:136:53447":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:12302:2867":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:50302:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:23010:3864":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:12685:6281":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:6240:8456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:53515:7217":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:2769:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:46454:4695":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:46769:4287":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:1567:7697":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:49708:4599":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"21:74:53715":{"crate_id":21,"path":["scopeguard","Always"],"kind":"enum"},"16:6999:5264":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:7549:5209":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:3337:2829":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:4362:8033":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:294:5823":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:9689:61623":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:1642:4116":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"20:268:2815":{"crate_id":20,"path":["lock_api","remutex","RawReentrantMutex"],"kind":"struct"},"17:13041:6407":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"20:537:2377":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockRecursive"],"kind":"trait"},"1:15216:4041":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"11:0:2647":{"crate_id":11,"path":["adler"],"kind":"module"},"2:3368:2835":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:13620:6569":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:13760:6626":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:783:5728":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"18:830:5565":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:545:7620":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:13164:4330":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:51865:4447":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:51195:4472":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:52421:4455":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"12:856:4105":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"22:406:2174":{"crate_id":22,"path":["parking_lot_core","spinwait","SpinWait"],"kind":"struct"},"25:1559:7697":{"crate_id":25,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"25:1618:7736":{"crate_id":25,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:32480:59497":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:8680:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:48916:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:10950:6000":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"25:5992:8340":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:10646:11555":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:6859:3854":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"25:5535:8290":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:10403:5466":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"25:5287:8187":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:24295:8678":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:10435:5939":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:3347:2831":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:48928:4071":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:11932:6135":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:2262:4822":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:46717:4283":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4379:8044":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:48946:7150":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:5452:8271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:46686:3873":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:6166:5246":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:4417:6715":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"16:7392:5206":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"25:5234:8163":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:3320:5436":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9368:5818":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:14588:7339":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:13788:6633":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:11360:4177":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"9:996:4953":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:13402:6512":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:3325:4143":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:11277:6016":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12507:6248":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:10566:3707":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:8250:4007":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:6150:8398":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:10200:5935":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:8160:3237":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:49866:3871":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:10618:3384":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"12:940:4110":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"20:549:2394":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockUpgradeFair"],"kind":"trait"},"16:5488:5097":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"5:8344:4808":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"25:6051:8374":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:2292:3324":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:49347:4573":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:56447:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10882:3943":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:51965:7168":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"0:530:1606":{"crate_id":0,"path":["parking_lot","rwlock","const_rwlock"],"kind":"function"},"1:16010:2675":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:8115:3237":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:2773:5398":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"25:4467:8081":{"crate_id":25,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:3351:4153":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:12051:6157":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:3329:3714":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:1531:7681":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:50535:3878":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:1576:7703":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:3287:2927":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:7303:5276":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"17:12671:6280":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:15092:1723":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:14246:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:32420:3582":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"6:5175:8135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:2863:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:12756:6292":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:4684:3924":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:11477:4569":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:7332:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:24330:2959":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:9848:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"25:4349:8030":{"crate_id":25,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:11150:3934":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:4055:7927":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10353:5506":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:11120:3873":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:5029:6733":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:7379:3237":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"25:4289:8001":{"crate_id":25,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:3175:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:15498:5048":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"5:3839:5685":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:4741:3926":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"12:895:5010":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"5:4515:4844":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"17:510:5825":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:12132:3237":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:681:5828":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:13318:6489":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:9340:2993":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"6:6899:8483":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:8106:4730":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:46379:4492":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:13938:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:3396:2840":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13799:6637":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:6021:5371":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:4116:7958":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"25:4249:7988":{"crate_id":25,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:6557:3993":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:1441:4114":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:10543:5943":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"12:787:4107":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:16003:2669":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:15229:4047":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:13587:54368":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:49528:4590":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:3417:2845":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:7205:5271":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"12:183:5026":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:48715:3193":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"16:6949:5417":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"20:512:1600":{"crate_id":20,"path":["lock_api","rwlock","RawRwLock"],"kind":"trait"},"21:33:5680":{"crate_id":21,"path":["scopeguard","ScopeGuard"],"kind":"struct"},"25:4478:8087":{"crate_id":25,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"9:776:4934":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:22920:4439":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:23854:4411":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:2751:3874":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:11337:5451":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:49680:4570":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:47692:2991":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:4434:3951":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:51381:4465":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:46146:2922":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"5:374:4805":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:12659:6279":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:533:7616":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:13574:6560":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:1598:7722":{"crate_id":25,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:12795:6302":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11082:5456":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"25:5392:8249":{"crate_id":25,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:8954:5457":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"22:102:1720":{"crate_id":22,"path":["parking_lot_core","parking_lot","DEFAULT_PARK_TOKEN"],"kind":"constant"},"2:49662:4569":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:1551:7689":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:1235:4820":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"20:528:2369":{"crate_id":20,"path":["lock_api","rwlock","RawRwLockDowngrade"],"kind":"trait"},"2:48022:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:1764:7817":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:3339:4147":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:13780:6632":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"0:120:1570":{"crate_id":0,"path":["parking_lot","fair_mutex"],"kind":"module"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:4471:3952":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"14:56:6042":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"18:611:5572":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:5522:5099":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:24173:2955":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"6:1526:7679":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"}},"external_crates":{"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"scopeguard","html_root_url":"https://docs.rs/scopeguard/1/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"libc","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"parking_lot_core","html_root_url":null},"23":{"name":"smallvec","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"24":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"20":{"name":"lock_api","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"}},"format_version":18}